
// ==================================================================
// AccessRightsBulkQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsBulkQueueItem :
    global::Sungero.ExchangeCore.Client.QueueItemBase, global::Sungero.Docflow.IAccessRightsBulkQueueItem
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("11c9727d-9fa1-4a08-8737-e3d174de5223");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.AccessRightsBulkQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IAccessRightsBulkQueueItem, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IAccessRightsBulkQueueItemState State
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsBulkQueueItemState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsBulkQueueItemState(this);
    }

    public new global::Sungero.Docflow.IAccessRightsBulkQueueItemInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsBulkQueueItemInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?> _RuleId;

        public virtual global::System.Int64? RuleId
        {
          get { return this._RuleId.Value; }
          set { this._RuleId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _LaunchId;

        public virtual global::System.String LaunchId
        {
          get { return this._LaunchId.Value; }
          set { this._LaunchId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Priority;

        public virtual global::System.Int32? Priority
        {
          get { return this._Priority.Value; }
          set { this._Priority.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.ExchangeCore.Client.QueueItemBase.ProcessingStatusItems,
          typeof(global::Sungero.Docflow.AccessRightsBulkQueueItem.ProcessingStatus),
          typeof(global::Sungero.Docflow.Client.AccessRightsBulkQueueItem),
          "ProcessingStatus");

        public static new global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
        {
          get { return global::Sungero.Docflow.Client.AccessRightsBulkQueueItem._ProcessingStatusItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
        {
          get { return global::Sungero.Docflow.Client.AccessRightsBulkQueueItem.ProcessingStatusItems; }
        }








      protected global::Sungero.Domain.Client.TextProperty _DocumentsIds;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String DocumentsIds
      {
        get { return this._DocumentsIds.Value; }
        set { this._DocumentsIds.Value = value; }
      }



    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.AccessRightsBulkQueueItemFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.AccessRightsBulkQueueItemClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.AccessRightsBulkQueueItemSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void RuleIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.RuleId, this.RuleId, this);
     ((global::Sungero.Docflow.IAccessRightsBulkQueueItemSharedHandlers)this.SharedHandlers).RuleIdChanged(args);
    }

    protected void DocumentsIdsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.DocumentsIds, this.DocumentsIds, this);
     ((global::Sungero.Docflow.IAccessRightsBulkQueueItemSharedHandlers)this.SharedHandlers).DocumentsIdsChanged(args);
    }

    protected void LaunchIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.LaunchId, this.LaunchId, this);
     ((global::Sungero.Docflow.IAccessRightsBulkQueueItemSharedHandlers)this.SharedHandlers).LaunchIdChanged(args);
    }

    protected void PriorityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Priority, this.Priority, this);
     ((global::Sungero.Docflow.IAccessRightsBulkQueueItemSharedHandlers)this.SharedHandlers).PriorityChanged(args);
    }



  protected global::System.Int64? RuleIdValueInputHandler(global::System.Int64? value)
  {
    var args = new global::Sungero.Presentation.LongIntegerValueInputEventArgs(this.RuleId, value, this, this.Info.Properties.RuleId);
    ((global::Sungero.Docflow.AccessRightsBulkQueueItemClientHandlers)this.Handlers).RuleIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DocumentsIdsValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.DocumentsIds, value, this, this.Info.Properties.DocumentsIds);
    ((global::Sungero.Docflow.AccessRightsBulkQueueItemClientHandlers)this.Handlers).DocumentsIdsValueInput(args);
    return args.NewValue;
  }

  protected global::System.String LaunchIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.LaunchId, value, this, this.Info.Properties.LaunchId);
    ((global::Sungero.Docflow.AccessRightsBulkQueueItemClientHandlers)this.Handlers).LaunchIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? PriorityValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Priority, value, this, this.Info.Properties.Priority);
    ((global::Sungero.Docflow.AccessRightsBulkQueueItemClientHandlers)this.Handlers).PriorityValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors





    public AccessRightsBulkQueueItem()
    {
            this._RuleId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?>("RuleId", this);
            this._RuleId.ValueChanged += (sender, e) => { this.RuleIdChangedHandler(); };
            this.AddProperty(this._RuleId);

            this._LaunchId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("LaunchId", this);
            this._LaunchId.ValueChanged += (sender, e) => { this.LaunchIdChangedHandler(); };
            this.AddProperty(this._LaunchId);

            this._Priority = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Priority", this);
            this._Priority.ValueChanged += (sender, e) => { this.PriorityChangedHandler(); };
            this.AddProperty(this._Priority);



            this._DocumentsIds = new global::Sungero.Domain.Client.TextProperty("DocumentsIds", this);
            this._DocumentsIds.ValueChanged += (sender, e) => { this.DocumentsIdsChangedHandler(); };
            this.AddProperty(this._DocumentsIds);






    }

    #endregion

  }
}

// ==================================================================
// AccessRightsBulkQueueItemPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsBulkQueueItemPresenter<T> :
    global::Sungero.ExchangeCore.Client.QueueItemBasePresenter<T>
    where T : class, global::Sungero.Docflow.IAccessRightsBulkQueueItem
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBoxBase>(() => this.Entity.Id, typeof(T), "Box");

              this._RootBoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "RootBox");


    }

    public AccessRightsBulkQueueItemPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// AccessRightsBulkQueueItemCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsBulkQueueItemCollectionPresenter<T> : 
    global::Sungero.ExchangeCore.Client.QueueItemBaseCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IAccessRightsBulkQueueItem
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public AccessRightsBulkQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public AccessRightsBulkQueueItemCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public AccessRightsBulkQueueItemCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public AccessRightsBulkQueueItemCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// AccessRightsBulkQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class AccessRightsBulkQueueItemRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Client.QueueItemBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IAccessRightsBulkQueueItemRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IAccessRightsBulkQueueItem
    {
       public new global::Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IAccessRightsBulkQueueItemInfo Info
       {
          get { return (global::Sungero.Docflow.IAccessRightsBulkQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.AccessRightsBulkQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// AccessRightsBulkQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class AccessRightsBulkQueueItemAccessRights : 
    Sungero.ExchangeCore.Client.QueueItemBaseAccessRights, Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights
  {

    public AccessRightsBulkQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class AccessRightsBulkQueueItemTypeAccessRights : 
    Sungero.ExchangeCore.Client.QueueItemBaseTypeAccessRights, Sungero.Docflow.IAccessRightsBulkQueueItemAccessRights
  {

    public AccessRightsBulkQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
