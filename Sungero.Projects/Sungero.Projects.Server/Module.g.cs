
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public partial class ProjectsModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("356e6500-45bc-482b-9791-189b5adedc28"); }
    }

    public override string Name
    {
      get { return "Sungero.Projects"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IModuleServerInitializationFunctions, global::Sungero.Projects.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4383f2ff-56e6-46f4-b4ef-cc17e6aeef40"), new Sungero.Projects.Shared.ProjectInfo(typeof(global::Sungero.Projects.IProject)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectServerPublicFunctions, global::Sungero.Projects.Server.ProjectServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cc984d0c-66d2-4baa-8cce-f0232ecd3c08"), new Sungero.Projects.Shared.ProjectClassifierInfo(typeof(global::Sungero.Projects.IProjectClassifier)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("80cbfc1b-3b72-4df6-b7c6-ceca9b15581b"), new Sungero.Projects.Shared.ProjectTeamMembersInfo(typeof(global::Sungero.Projects.IProjectTeamMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b9d8afd2-0f9e-4d40-8d61-1a9feee5754a"), new Sungero.Projects.Shared.ProjectApprovalRoleInfo(typeof(global::Sungero.Projects.IProjectApprovalRole)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectApprovalRoleServerPublicFunctions, global::Sungero.Projects.Server.ProjectApprovalRoleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectApprovalRoleSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectApprovalRoleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("561aa8c7-b281-494b-a0e4-0170c0b27f48"), new Sungero.Projects.Shared.ProjectCoreInfo(typeof(global::Sungero.Projects.IProjectCore)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectCoreServerPublicFunctions, global::Sungero.Projects.Server.ProjectCoreServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectCoreSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectCoreSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fa6cf309-21c1-4c6f-8221-6ad7d332ea33"), new Sungero.Projects.Shared.ProjectCoreClassifierInfo(typeof(global::Sungero.Projects.IProjectCoreClassifier)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c06142f1-0fbd-4946-b382-227591508986"), new Sungero.Projects.Shared.ProjectCoreTeamMembersInfo(typeof(global::Sungero.Projects.IProjectCoreTeamMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("56df80b3-a795-4378-ace5-c20a2b1fb6d9"), new Sungero.Projects.Shared.ProjectDocumentInfo(typeof(global::Sungero.Projects.IProjectDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectDocumentServerPublicFunctions, global::Sungero.Projects.Server.ProjectDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectDocumentSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c74d6488-a6f5-488f-9f39-a441abd8819c"), new Sungero.Projects.Shared.ProjectDocumentTrackingInfo(typeof(global::Sungero.Projects.IProjectDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a3fe4297-d857-445f-a10a-42f4d69ff6dd"), new Sungero.Projects.Shared.ProjectDocumentVersionsInfo(typeof(global::Sungero.Projects.IProjectDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aa042ddf-a9fb-4dea-883c-d0024b9574da"), new Sungero.Projects.Shared.ProjectDocumentRightsQueueItemInfo(typeof(global::Sungero.Projects.IProjectDocumentRightsQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectDocumentRightsQueueItemServerPublicFunctions, global::Sungero.Projects.Server.ProjectDocumentRightsQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectDocumentRightsQueueItemSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectDocumentRightsQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("01fd022d-f8c1-489d-818a-588b324fb29a"), new Sungero.Projects.Shared.ProjectKindInfo(typeof(global::Sungero.Projects.IProjectKind)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectKindServerPublicFunctions, global::Sungero.Projects.Server.ProjectKindServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectKindSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectKindSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b7edf323-816d-4213-abca-6ee7da1c03bd"), new Sungero.Projects.Shared.ProjectMemberRightsQueueItemInfo(typeof(global::Sungero.Projects.IProjectMemberRightsQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectMemberRightsQueueItemServerPublicFunctions, global::Sungero.Projects.Server.ProjectMemberRightsQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectMemberRightsQueueItemSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectMemberRightsQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a9f25053-faf8-4d59-8665-ace5a19bc8bd"), new Sungero.Projects.Shared.ProjectQueueItemBaseInfo(typeof(global::Sungero.Projects.IProjectQueueItemBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectQueueItemBaseServerPublicFunctions, global::Sungero.Projects.Server.ProjectQueueItemBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectQueueItemBaseSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectQueueItemBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5ec13d1f-de94-43a3-a51a-1bef325d9dad"), new Sungero.Projects.Shared.ProjectRightsQueueItemInfo(typeof(global::Sungero.Projects.IProjectRightsQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectRightsQueueItemServerPublicFunctions, global::Sungero.Projects.Server.ProjectRightsQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectRightsQueueItemSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectRightsQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c5bd2267-3ce0-4f4b-a891-cce8638a24fa"), new Sungero.Projects.Shared.ProjectTeamInfo(typeof(global::Sungero.Projects.IProjectTeam)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IProjectTeamServerPublicFunctions, global::Sungero.Projects.Server.ProjectTeamServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IProjectTeamSharedPublicFunctions, global::Sungero.Projects.Shared.ProjectTeamSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("852ceba8-5b3c-4c4e-8a69-b659654ec1f7"), new Sungero.Projects.Shared.ProjectTeamRecipientLinksInfo(typeof(global::Sungero.Projects.IProjectTeamRecipientLinks)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectFilterState, global::Sungero.Projects.Shared.Project.ProjectFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectApprovalRoleFilterState, global::Sungero.Projects.Shared.ProjectApprovalRole.ProjectApprovalRoleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectCoreFilterState, global::Sungero.Projects.Shared.ProjectCore.ProjectCoreFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectDocumentFilterState, global::Sungero.Projects.Shared.ProjectDocument.ProjectDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectDocumentRightsQueueItemFilterState, global::Sungero.Projects.Shared.ProjectDocumentRightsQueueItem.ProjectDocumentRightsQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectKindFilterState, global::Sungero.Projects.Shared.ProjectKind.ProjectKindFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectMemberRightsQueueItemFilterState, global::Sungero.Projects.Shared.ProjectMemberRightsQueueItem.ProjectMemberRightsQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectQueueItemBaseFilterState, global::Sungero.Projects.Shared.ProjectQueueItemBase.ProjectQueueItemBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectRightsQueueItemFilterState, global::Sungero.Projects.Shared.ProjectRightsQueueItem.ProjectRightsQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.IProjectTeamFilterState, global::Sungero.Projects.Shared.ProjectTeam.ProjectTeamFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState, global::Sungero.Projects.Shared.ProjectDocumentsFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Server.IModuleServerPublicFunctions, global::Sungero.Projects.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Projects.Shared.IModuleSharedPublicFunctions, global::Sungero.Projects.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public partial class ProjectDocumentsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsProjectDocumentsVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IProjectBase> ProjectDocumentsProjectFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IProjectBase> query)
    {
      return query;
    }


    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> ProjectDocumentsAuthorFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }


    public ProjectDocumentsFolderHandlers(global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Projects.IProjectCore> GetProjectsToWidgets(global::Sungero.Core.Enumeration performer, global::System.Boolean onlyOverdue, global::System.Nullable<global::Sungero.Core.Enumeration> stage)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetProjectsToWidgets", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
        return (global::System.Linq.IQueryable<global::Sungero.Projects.IProjectCore>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer, onlyOverdue, stage});
      }
      else
      {
        return ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetProjectsToWidgets(performer, onlyOverdue, stage);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectDocumentRightsQueueItem.ProxyQueueItem> CreateAccessRightsProjectDocumentQueueItemWithAddendum(global::System.Int64 documentId, global::System.Int64 projectId)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAccessRightsProjectDocumentQueueItemWithAddendum", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
        return (global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectDocumentRightsQueueItem.ProxyQueueItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, projectId});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.CreateAccessRightsProjectDocumentQueueItemWithAddendum(documentId, projectId);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::Sungero.Projects.Structures.ProjectDocumentRightsQueueItem.ProxyQueueItem CreateAccessRightsProjectDocumentQueueItem(global::System.Int64 documentId, global::System.Int64 projectId)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAccessRightsProjectDocumentQueueItem", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
        return (global::Sungero.Projects.Structures.ProjectDocumentRightsQueueItem.ProxyQueueItem)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, projectId});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.CreateAccessRightsProjectDocumentQueueItem(documentId, projectId);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantRightsToProjectDocuments(global::Sungero.Projects.IProjectDocumentRightsQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantRightsToProjectDocuments", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectDocumentRightsQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem});
      }
      else
      {
        return ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantRightsToProjectDocuments(queueItem);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static void AddRecipientRightsForProject(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IProjectBase projectBase, global::System.Boolean grantRightsToProject, global::System.Collections.Generic.List<global::Sungero.Projects.Structures.Module.RecipientRights> result)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddRecipientRightsForProject", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Docflow.IProjectBase), typeof(global::System.Boolean), typeof(global::System.Collections.Generic.List<global::Sungero.Projects.Structures.Module.RecipientRights>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, projectBase, grantRightsToProject, result});
      }
      else
      {
    ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddRecipientRightsForProject(document, projectBase, grantRightsToProject, result);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueProjectDocumentRightsSync()
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueProjectDocumentRightsSync", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Projects.Server.ModuleFunctions.RequeueProjectDocumentRightsSync();
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean AddDocumentToFolder(global::Sungero.Projects.IProjectDocumentRightsQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddDocumentToFolder", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectDocumentRightsQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem});
      }
      else
      {
        return ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddDocumentToFolder(queueItem);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean IsDocumentBelongProject(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Projects.IProjectCore project)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsDocumentBelongProject", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Projects.IProjectCore)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, project});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.IsDocumentBelongProject(document, project);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectRightsQueueItem.ProxyQueueItem> CreateProjectAccessRightsQueueItems(global::Sungero.Projects.IProjectCore project)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateProjectAccessRightsQueueItems", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectCore)});
        return (global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectRightsQueueItem.ProxyQueueItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{project});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.CreateProjectAccessRightsQueueItems(project);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::Sungero.Projects.Structures.ProjectRightsQueueItem.ProxyQueueItem CreateAccessRightsProjectQueueItem(global::System.Int64 projectId, global::System.Nullable<global::System.Int64> folderId)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAccessRightsProjectQueueItem", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Nullable<global::System.Int64>)});
        return (global::Sungero.Projects.Structures.ProjectRightsQueueItem.ProxyQueueItem)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{projectId, folderId});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.CreateAccessRightsProjectQueueItem(projectId, folderId);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantRightsToProjectAndFolder(global::Sungero.Projects.IProjectRightsQueueItem queueItem)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantRightsToProjectAndFolder", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectRightsQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.GrantRightsToProjectAndFolder(queueItem);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantRightsToProject(global::Sungero.Projects.IProjectCore project, global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectCore.ProjectMemberRights> members)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantRightsToProject", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectCore), typeof(global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectCore.ProjectMemberRights>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{project, members});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.GrantRightsToProject(project, members);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantRightsToProjectFolder(global::Sungero.CoreEntities.IFolder folder, global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectCore.ProjectMemberRights> members)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantRightsToProjectFolder", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IFolder), typeof(global::System.Collections.Generic.List<global::Sungero.Projects.Structures.ProjectCore.ProjectMemberRights>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folder, members});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.GrantRightsToProjectFolder(folder, members);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Boolean CheckGrantedRights(global::Sungero.Domain.Shared.IEntity entity, global::Sungero.CoreEntities.IRecipient member, global::System.Guid accessRightsType)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckGrantedRights", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, member, accessRightsType});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.CheckGrantedRights(entity, member, accessRightsType);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Projects.IProjectCore> GetProjectAndSubProjects(global::Sungero.Projects.IProjectCore project)
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetProjectAndSubProjects", new global::System.Type[]{typeof(global::Sungero.Projects.IProjectCore)});
        return (global::System.Collections.Generic.List<global::Sungero.Projects.IProjectCore>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{project});
      }
      else
      {
        return global::Sungero.Projects.Server.ModuleFunctions.GetProjectAndSubProjects(project);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueProjectRightsSync()
    {
      var __typeName = "Sungero.Projects.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueProjectRightsSync", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Projects.Server.ModuleFunctions.RequeueProjectRightsSync();
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleFunctions" />
    internal static void SetProjectMembers(global::System.Int64 projectId, global::System.Collections.Generic.List<global::System.Int64> memberIds)
    {
      var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetProjectMembers", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{projectId, memberIds});
      }
      else
      {
    ((global::Sungero.Projects.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetProjectMembers(projectId, memberIds);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Projects.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("356e6500-45bc-482b-9791-189b5adedc28");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Projects.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Projects.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateDefaultApprovalRoles()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultApprovalRoles", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateDefaultApprovalRoles();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateDefaultApprovalRules()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultApprovalRules", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateDefaultApprovalRules();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateApprovalRule(global::System.String name, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalRule", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, stages});
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateApprovalRule(name, stages);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateApprovalRole(global::Sungero.Core.Enumeration roleType, global::System.String description)
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalRole", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{roleType, description});
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateApprovalRole(roleType, description);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateDocumentTypes()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateDocumentTypes();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateDocumentKinds()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateDocumentKinds();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateProjectKinds()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateProjectKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateProjectKinds();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateProjectKind(global::System.String name, global::System.Guid entityId)
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateProjectKind", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Guid)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, entityId});
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateProjectKind(name, entityId);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void CreateProjectFolder()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateProjectFolder", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.CreateProjectFolder();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void GrantRightsOnProjects()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnProjects", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.GrantRightsOnProjects();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDocuments", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      [global::Sungero.Core.RemoteAttribute()]
      internal static void GrantRightsOnDatabooks(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDatabooks", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.GrantRightsOnDatabooks(allUsers);
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void GrantReadRightsOnProjectDocuments()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantReadRightsOnProjectDocuments", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.GrantReadRightsOnProjectDocuments();
        }
      }
      /// <redirect project="Sungero.Projects.Server" type="Sungero.Projects.Server.ModuleInitializer" />
      internal static void GrantReadRightsOnProjectTeam()
      {
        var __typeName = "Sungero.Projects.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantReadRightsOnProjectTeam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Projects.Server.ModuleInitializer.GrantReadRightsOnProjectTeam();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Projects.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public class ProjectDocumentsProjectPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IProjectBase>)query;
      var typedState = (global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState)this.State;
      var handlers = new global::Sungero.Projects.Server.ProjectDocumentsFolderHandlers(typedState);
      var result = handlers.ProjectDocumentsProjectFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IProjectBase>();
      return result;
    }
  }

  public class ProjectDocumentsDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState)this.State;
      var handlers = new global::Sungero.Projects.Server.ProjectDocumentsFolderHandlers(typedState);
      var result = handlers.ProjectDocumentsDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ProjectDocumentsAuthorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.Projects.FolderFilterState.IProjectDocumentsFilterState)this.State;
      var handlers = new global::Sungero.Projects.Server.ProjectDocumentsFolderHandlers(typedState);
      var result = handlers.ProjectDocumentsAuthorFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Projects.Server.IModuleServerPublicFunctions
  {
    public global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Projects.Functions.Module.GetResponsibilitiesReportData(employee);
    }
    public void SetProjectMembers(global::System.Int64 projectId, global::System.Collections.Generic.List<global::System.Int64> memberIds)
    {
global::Sungero.Projects.Functions.Module.SetProjectMembers(projectId, memberIds);
    }
  }
}

namespace Sungero.Projects.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Projects.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobGrantAccessRightsToProjectDocumentsId = global::System.Guid.Parse("be8a8c8c-9ebf-415e-8260-d4437b76e3d1");

      public void Enqueue_GrantAccessRightsToProjectDocuments()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGrantAccessRightsToProjectDocumentsId, null);
      }
 
      private static readonly global::System.Guid JobGrantAccessRightsToProjectFoldersId = global::System.Guid.Parse("cead2435-0dde-4cd9-8189-7986a11a3e14");

      public void Enqueue_GrantAccessRightsToProjectFolders()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGrantAccessRightsToProjectFoldersId, null);
      }
 


  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Projects.Server.IModuleServerInitializationFunctions
  {
         public void CreateApprovalRole(global::Sungero.Core.Enumeration roleType, global::System.String description)
         {
     global:: Sungero.Projects.ModuleInitialization.Module.CreateApprovalRole(roleType, description);
         }
         public void CreateApprovalRule(global::System.String name, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
     global:: Sungero.Projects.ModuleInitialization.Module.CreateApprovalRule(name, stages);
         }
         public void CreateProjectFolder()
         {
     global:: Sungero.Projects.ModuleInitialization.Module.CreateProjectFolder();
         }
         public void CreateProjectKind(global::System.String name, global::System.Guid entityId)
         {
     global:: Sungero.Projects.ModuleInitialization.Module.CreateProjectKind(name, entityId);
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
      public partial class ProjectStagesWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Projects.Shared.ProjectStagesWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Projects.Shared.ProjectStagesWidgetParameters)this.InnerParameters;
          }
        }

          

          public virtual string GetProjectStagesAllProjectsValue()
          {
            return string.Empty;
          }

          

          public virtual string GetProjectStagesInitiationValue()
          {
            return string.Empty;
          }

          

          public virtual string GetProjectStagesInWorkValue()
          {
            return string.Empty;
          }

          

          public virtual string GetProjectStagesClosingValue()
          {
            return string.Empty;
          }

          

          public virtual string GetProjectStagesOverdueValue()
          {
            return string.Empty;
          }


        public ProjectStagesWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server.ProjectsBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Projects.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

