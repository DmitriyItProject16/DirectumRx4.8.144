
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class PartiesModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"); }
    }

    public override string Name
    {
      get { return "Sungero.Parties"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IModuleServerInitializationFunctions, global::Sungero.Parties.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("80c4e311-e95f-449b-984d-1fd540b8f0af"), new Sungero.Parties.Shared.BankInfo(typeof(global::Sungero.Parties.IBank)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IBankServerPublicFunctions, global::Sungero.Parties.Server.BankServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IBankSharedPublicFunctions, global::Sungero.Parties.Shared.BankSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b28d2948-f8b6-47e1-bdf0-a6f6be05e64c"), new Sungero.Parties.Shared.BankExchangeBoxesInfo(typeof(global::Sungero.Parties.IBankExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("593e143c-616c-4d95-9457-fd916c4aa7f8"), new Sungero.Parties.Shared.CompanyInfo(typeof(global::Sungero.Parties.ICompany)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICompanyServerPublicFunctions, global::Sungero.Parties.Server.CompanyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICompanySharedPublicFunctions, global::Sungero.Parties.Shared.CompanySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("392f91ab-efc1-450c-8604-11bf6c38e0f0"), new Sungero.Parties.Shared.CompanyExchangeBoxesInfo(typeof(global::Sungero.Parties.ICompanyExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("78278dd7-f0d2-4e35-b543-13d0bd462cd6"), new Sungero.Parties.Shared.CompanyBaseInfo(typeof(global::Sungero.Parties.ICompanyBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICompanyBaseServerPublicFunctions, global::Sungero.Parties.Server.CompanyBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICompanyBaseSharedPublicFunctions, global::Sungero.Parties.Shared.CompanyBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1c002846-60f2-4216-853d-9aa101bdcf82"), new Sungero.Parties.Shared.CompanyBaseExchangeBoxesInfo(typeof(global::Sungero.Parties.ICompanyBaseExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c8daaef9-a679-4a29-ac01-b93c1637c72e"), new Sungero.Parties.Shared.ContactInfo(typeof(global::Sungero.Parties.IContact)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IContactServerPublicFunctions, global::Sungero.Parties.Server.ContactServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IContactSharedPublicFunctions, global::Sungero.Parties.Shared.ContactSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("294767f1-009f-4fbd-80fc-f98c49ddc560"), new Sungero.Parties.Shared.CounterpartyInfo(typeof(global::Sungero.Parties.ICounterparty)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICounterpartyServerPublicFunctions, global::Sungero.Parties.Server.CounterpartyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICounterpartySharedPublicFunctions, global::Sungero.Parties.Shared.CounterpartySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fafa1803-bcd1-4b88-9e07-eb6f1ec341c6"), new Sungero.Parties.Shared.CounterpartyExchangeBoxesInfo(typeof(global::Sungero.Parties.ICounterpartyExchangeBoxes)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1bd10cb0-bfb3-4c74-b07e-67c9e34188c7"), new Sungero.Parties.Shared.CounterpartyKindInfo(typeof(global::Sungero.Parties.ICounterpartyKind)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.ICounterpartyKindServerPublicFunctions, global::Sungero.Parties.Server.CounterpartyKindServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.ICounterpartyKindSharedPublicFunctions, global::Sungero.Parties.Shared.CounterpartyKindSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("977a5b9a-67eb-4820-ade3-4c51a39d3b7b"), new Sungero.Parties.Shared.DueDiligenceWebsiteInfo(typeof(global::Sungero.Parties.IDueDiligenceWebsite)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IDueDiligenceWebsiteServerPublicFunctions, global::Sungero.Parties.Server.DueDiligenceWebsiteServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IDueDiligenceWebsiteSharedPublicFunctions, global::Sungero.Parties.Shared.DueDiligenceWebsiteSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9cfefa75-b807-46e3-b09c-d8b232b21f4f"), new Sungero.Parties.Shared.IdentityDocumentKindInfo(typeof(global::Sungero.Parties.IIdentityDocumentKind)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IIdentityDocumentKindServerPublicFunctions, global::Sungero.Parties.Server.IdentityDocumentKindServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IIdentityDocumentKindSharedPublicFunctions, global::Sungero.Parties.Shared.IdentityDocumentKindSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5509cdc-ac0c-4507-a4d3-61d7a0a9b6f6"), new Sungero.Parties.Shared.PersonInfo(typeof(global::Sungero.Parties.IPerson)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IPersonServerPublicFunctions, global::Sungero.Parties.Server.PersonServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IPersonSharedPublicFunctions, global::Sungero.Parties.Shared.PersonSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1c0f1303-3d8f-4376-ae69-4ff22c457eb2"), new Sungero.Parties.Shared.PersonExchangeBoxesInfo(typeof(global::Sungero.Parties.IPersonExchangeBoxes)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IBankFilterState, global::Sungero.Parties.Shared.Bank.BankFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICompanyFilterState, global::Sungero.Parties.Shared.Company.CompanyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICompanyBaseFilterState, global::Sungero.Parties.Shared.CompanyBase.CompanyBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IContactFilterState, global::Sungero.Parties.Shared.Contact.ContactFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICounterpartyFilterState, global::Sungero.Parties.Shared.Counterparty.CounterpartyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.ICounterpartyKindFilterState, global::Sungero.Parties.Shared.CounterpartyKind.CounterpartyKindFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IDueDiligenceWebsiteFilterState, global::Sungero.Parties.Shared.DueDiligenceWebsite.DueDiligenceWebsiteFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IIdentityDocumentKindFilterState, global::Sungero.Parties.Shared.IdentityDocumentKind.IdentityDocumentKindFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.IPersonFilterState, global::Sungero.Parties.Shared.Person.PersonFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState, global::Sungero.Parties.Shared.BlockedCounterpartiesFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState, global::Sungero.Parties.Shared.InvitedCounterpartiesFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Server.IModuleServerPublicFunctions, global::Sungero.Parties.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Parties.Shared.IModuleSharedPublicFunctions, global::Sungero.Parties.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class BlockedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsBlockedCounterpartiesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> BlockedCounterpartiesExchangeServiceFiltering(global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> BlockedCounterpartiesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public BlockedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class InvitedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsInvitedCounterpartiesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> InvitedCounterpartiesExchangeServiceFiltering(global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> InvitedCounterpartiesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public InvitedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.ICompany CreateCompany()
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCompany", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Parties.ICompany)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.CreateCompany();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.IContact CreateContact()
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateContact", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Parties.IContact)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.CreateContact();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.IPerson CreatePerson()
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePerson", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Parties.IPerson)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.CreatePerson();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> CounterpartiesAvailableForExchange()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CounterpartiesAvailableForExchange", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CounterpartiesAvailableForExchange();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.IContact> GetContactsFromCompany(global::Sungero.Parties.ICompanyBase company)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetContactsFromCompany", new global::System.Type[]{typeof(global::Sungero.Parties.ICompanyBase)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.IContact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{company});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.GetContactsFromCompany(company);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String GetEmailByTinTrrc(global::System.String tin, global::System.String trrc)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmailByTinTrrc", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.GetEmailByTinTrrc(tin, trrc);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService> FindCompanyInExchangeServices(global::System.String tin, global::System.String trrc, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> boxes)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FindCompanyInExchangeServices", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc, boxes});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCompanyInExchangeServices(tin, trrc, boxes);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Parties.ICounterparty FindCounterpartyByOrganizationId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String organizationId)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FindCounterpartyByOrganizationId", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
        return (global::Sungero.Parties.ICounterparty)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, organizationId});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCounterpartyByOrganizationId(box, organizationId);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean CheckAnyBusinessUnitBoxes()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckAnyBusinessUnitBoxes", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckAnyBusinessUnitBoxes();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterpartiesFromList(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties, global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDuplicateCounterpartiesFromList", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparties, tin, trrc, name, excludeClosed});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterpartiesFromList(counterparties, tin, trrc, name, excludeClosed);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDuplicateCounterparties", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc, name, excludeClosed});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterparties(tin, trrc, name, excludeClosed);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Nullable<global::System.Int64> excludedCounterpartyId, global::System.Boolean excludeClosed)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDuplicateCounterparties", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Nullable<global::System.Int64>), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc, name, excludedCounterpartyId, excludeClosed});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.GetDuplicateCounterparties(tin, trrc, name, excludedCounterpartyId, excludeClosed);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> FindCounterparty(global::System.String uuid, global::System.String tin, global::System.String trrc, global::System.String sysid)
    {
      var __typeName = "Sungero.Parties.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FindCounterparty", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{uuid, tin, trrc, sysid});
      }
      else
      {
        return global::Sungero.Parties.Server.ModuleFunctions.FindCounterparty(uuid, tin, trrc, sysid);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCounterpartyIds(global::System.String tin, global::System.String trrc, global::System.String name)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCounterpartyIds", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc, name});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCounterpartyIds(tin, trrc, name);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCompanyIds(global::System.String tin, global::System.String trrc, global::System.String name)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCompanyIds", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, trrc, name});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCompanyIds(tin, trrc, name);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetPersonIds(global::System.String tin, global::System.String name)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPersonIds", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tin, name});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPersonIds(tin, name);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetBankIdsFromContracts()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBankIdsFromContracts", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBankIdsFromContracts();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetCompanyDataServiceURL()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCompanyDataServiceURL", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCompanyDataServiceURL();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static void ReindexCompanyBases()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReindexCompanyBases", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ReindexCompanyBases();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static void ReindexContacts()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReindexContacts", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ReindexContacts();
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static void UpdateCompanyIndexSynonyms(global::System.String synonyms)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateCompanyIndexSynonyms", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{synonyms});
      }
      else
      {
    ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateCompanyIndexSynonyms(synonyms);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.String NormalizePhone(global::System.String phone)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("NormalizePhone", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{phone});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).NormalizePhone(phone);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    internal static global::System.String NormalizeSite(global::System.String site)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("NormalizeSite", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{site});
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).NormalizeSite(site);
      }
    }
    /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean CanEditIdentityDocuments()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CanEditIdentityDocuments", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CanEditIdentityDocuments();
      }
    }

    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.Boolean EmailIsValid(global::System.String emailAddress)
    {
      var __typeName = "Sungero.Parties.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EmailIsValid", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{emailAddress});
      }
      else
      {
        return global::Sungero.Parties.Shared.ModuleFunctions.EmailIsValid(emailAddress);
      }
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.String GetSurnameAndInitialsInTenantCulture(global::System.String firstName, global::System.String middleName, global::System.String lastName)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSurnameAndInitialsInTenantCulture", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstName, middleName, lastName});
      }
      else
      {
        return ((global::Sungero.Parties.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSurnameAndInitialsInTenantCulture(firstName, middleName, lastName);
      }
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsRegularExpresionValid(global::System.String expression)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRegularExpresionValid", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expression});
      }
      else
      {
        return ((global::Sungero.Parties.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsRegularExpresionValid(expression);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Parties.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Parties.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateDefaultDueDiligenceWebsites()
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultDueDiligenceWebsites", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateDefaultDueDiligenceWebsites();
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateDistributionListCounterparty()
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDistributionListCounterparty", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateDistributionListCounterparty();
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void UpdateBanksFromCBR()
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("UpdateBanksFromCBR", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.UpdateBanksFromCBR();
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateDueDiligenceWebsite(global::System.Guid entityId, global::System.String name, global::System.String homeUrl, global::System.String url, global::System.Boolean isDefault, global::System.String note, global::System.String selfEmployedUrl)
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDueDiligenceWebsite", new global::System.Type[]{typeof(global::System.Guid), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.String), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityId, name, homeUrl, url, isDefault, note, selfEmployedUrl});
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateDueDiligenceWebsite(entityId, name, homeUrl, url, isDefault, note, selfEmployedUrl);
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateCounterpartyIndices()
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateCounterpartyIndices", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateCounterpartyIndices();
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateIdentityDocumentKinds()
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateIdentityDocumentKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateIdentityDocumentKinds();
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void CreateIdentityDocumentKind(global::System.String name, global::System.String shortName, global::System.String code, global::System.String sid, global::System.Boolean specifySeries, global::System.Boolean specifyExpDate, global::System.Boolean specifyAuthCode, global::System.Boolean specifyBirthPlace, global::System.String numberPattern, global::System.String seriesPattern, global::System.String authorityCodePattern)
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateIdentityDocumentKind", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, shortName, code, sid, specifySeries, specifyExpDate, specifyAuthCode, specifyBirthPlace, numberPattern, seriesPattern, authorityCodePattern});
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.CreateIdentityDocumentKind(name, shortName, code, sid, specifySeries, specifyExpDate, specifyAuthCode, specifyBirthPlace, numberPattern, seriesPattern, authorityCodePattern);
        }
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleInitializer" />
      internal static void GrantRightsOnCounterpartyKind(global::Sungero.CoreEntities.IRole users)
      {
        var __typeName = "Sungero.Parties.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnCounterpartyKind", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{users});
        }
        else
        {
      global::Sungero.Parties.Server.ModuleInitializer.GrantRightsOnCounterpartyKind(users);
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Parties.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public class BlockedCounterpartiesExchangeServicePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.BlockedCounterpartiesFolderHandlers(typedState);
      var result = handlers.BlockedCounterpartiesExchangeServiceFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.ExchangeCore.IExchangeService>();
      return result;
    }
  }

  public class BlockedCounterpartiesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.BlockedCounterpartiesFolderHandlers(typedState);
      var result = handlers.BlockedCounterpartiesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }


  public class InvitedCounterpartiesExchangeServicePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.InvitedCounterpartiesFolderHandlers(typedState);
      var result = handlers.InvitedCounterpartiesExchangeServiceFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.ExchangeCore.IExchangeService>();
      return result;
    }
  }

  public class InvitedCounterpartiesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState)this.State;
      var handlers = new global::Sungero.Parties.Server.InvitedCounterpartiesFolderHandlers(typedState);
      var result = handlers.InvitedCounterpartiesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Parties.Server.IModuleServerPublicFunctions
  {
    public global::System.Collections.Generic.List<global::System.Int64> GetBankIdsFromContracts()
    {
      return global::Sungero.Parties.Functions.Module.GetBankIdsFromContracts();
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetCompanyIds(global::System.String tin, global::System.String trrc, global::System.String name)
    {
      return global::Sungero.Parties.Functions.Module.GetCompanyIds(tin, trrc, name);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetCounterpartyIds(global::System.String tin, global::System.String trrc, global::System.String name)
    {
      return global::Sungero.Parties.Functions.Module.GetCounterpartyIds(tin, trrc, name);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetPersonIds(global::System.String tin, global::System.String name)
    {
      return global::Sungero.Parties.Functions.Module.GetPersonIds(tin, name);
    }
    public global::System.Collections.Generic.List<Sungero.Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Parties.Functions.Module.GetResponsibilitiesReportData(employee);
    }
    public global::System.String NormalizePhone(global::System.String phone)
    {
      return global::Sungero.Parties.Functions.Module.NormalizePhone(phone);
    }
    public global::System.String NormalizeSite(global::System.String site)
    {
      return global::Sungero.Parties.Functions.Module.NormalizeSite(site);
    }
    public void ReindexCompanyBases()
    {
global::Sungero.Parties.Functions.Module.ReindexCompanyBases();
    }
    public void ReindexContacts()
    {
global::Sungero.Parties.Functions.Module.ReindexContacts();
    }
    public void UpdateCompanyIndexSynonyms(global::System.String synonyms)
    {
global::Sungero.Parties.Functions.Module.UpdateCompanyIndexSynonyms(synonyms);
    }
  }
}

namespace Sungero.Parties.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Parties.Server.IModuleServerPublicFunctions
  {

      private static readonly global::System.Guid AsyncHandlerUpdateContactNameId = global::System.Guid.Parse("668982ea-29e3-4f4c-9908-6d1dfca2b51a");

      public void Enqueue_UpdateContactName(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerUpdateContactNameId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Parties.Server.IModuleServerInitializationFunctions
  {
         public void GrantRightsOnCounterpartyKind(global::Sungero.CoreEntities.IRole users)
         {
     global:: Sungero.Parties.ModuleInitialization.Module.GrantRightsOnCounterpartyKind(users);
         }
         public void CreateIdentityDocumentKind(global::System.String name, global::System.String shortName, global::System.String code, global::System.String sid, global::System.Boolean specifySeries, global::System.Boolean specifyExpDate, global::System.Boolean specifyAuthCode, global::System.Boolean specifyBirthPlace, global::System.String numberPattern, global::System.String seriesPattern, global::System.String authorityCodePattern)
         {
     global:: Sungero.Parties.ModuleInitialization.Module.CreateIdentityDocumentKind(name, shortName, code, sid, specifySeries, specifyExpDate, specifyAuthCode, specifyBirthPlace, numberPattern, seriesPattern, authorityCodePattern);
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server.PartiesBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Parties.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string SelectCompanyDataService
    {
       get { return resolver.GetQuery("SelectCompanyDataService"); }
    }
    public static string UpdateBanksFromCBR
    {
       get { return resolver.GetQuery("UpdateBanksFromCBR"); }
    }
    public static string PrepareBanksUpdate
    {
       get { return resolver.GetQuery("PrepareBanksUpdate"); }
    }
    public static string GetNewCountBanks
    {
       get { return resolver.GetQuery("GetNewCountBanks"); }
    }
    public static string CreateBanksFromCBR
    {
       get { return resolver.GetQuery("CreateBanksFromCBR"); }
    }
    public static string CleanTempTablesAfterUpdateBanks
    {
       get { return resolver.GetQuery("CleanTempTablesAfterUpdateBanks"); }
    }
    public static string SungeroCounterpartyIndicesNameQuery
    {
       get { return resolver.GetQuery("SungeroCounterpartyIndicesNameQuery"); }
    }
    public static string SungeroCounterpartyIndexQuery
    {
       get { return resolver.GetQuery("SungeroCounterpartyIndexQuery"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

