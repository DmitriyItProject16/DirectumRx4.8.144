
// ==================================================================
// ClassifierTrainingSession.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ClassifierTrainingSession :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Commons.IClassifierTrainingSession
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d79390ea-86ea-4e79-ba28-a4ce5e5550c1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Client.ClassifierTrainingSession.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.IClassifierTrainingSession, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Commons.IClassifierTrainingSessionState State
    {
      get
      {
        return (global::Sungero.Commons.IClassifierTrainingSessionState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.ClassifierTrainingSessionState(this);
    }

    public new global::Sungero.Commons.IClassifierTrainingSessionInfo Info
    {
      get
      {
        return (global::Sungero.Commons.IClassifierTrainingSessionInfo)base.Info;
      }
    }

    public new global::Sungero.Commons.IClassifierTrainingSessionAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Commons.IClassifierTrainingSessionAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ClassifierId;

        public virtual global::System.Int32? ClassifierId
        {
          get { return this._ClassifierId.Value; }
          set { this._ClassifierId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _OldModelId;

        public virtual global::System.Int32? OldModelId
        {
          get { return this._OldModelId.Value; }
          set { this._OldModelId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FMeasure;

        public virtual global::System.String FMeasure
        {
          get { return this._FMeasure.Value; }
          set { this._FMeasure.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ArioTaskId;

        public virtual global::System.Int32? ArioTaskId
        {
          get { return this._ArioTaskId.Value; }
          set { this._ArioTaskId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _TrainingStatus;

        public virtual global::Sungero.Core.Enumeration? TrainingStatus
        {
          get { return this._TrainingStatus.Value; }
          set { this._TrainingStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _NewModelId;

        public virtual global::System.Int32? NewModelId
        {
          get { return this._NewModelId.Value; }
          set { this._NewModelId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ClassifierType;

        public virtual global::Sungero.Core.Enumeration? ClassifierType
        {
          get { return this._ClassifierType.Value; }
          set { this._ClassifierType.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _TrainingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Commons.ClassifierTrainingSession.TrainingStatus),
          typeof(global::Sungero.Commons.Client.ClassifierTrainingSession),
          "TrainingStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems TrainingStatusItems
        {
          get { return global::Sungero.Commons.Client.ClassifierTrainingSession._TrainingStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems TrainingStatusAllowedItems
        {
          get { return global::Sungero.Commons.Client.ClassifierTrainingSession.TrainingStatusItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _ClassifierTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Commons.ClassifierTrainingSession.ClassifierType),
          typeof(global::Sungero.Commons.Client.ClassifierTrainingSession),
          "ClassifierType");

        public static global::Sungero.Domain.Shared.EnumerationItems ClassifierTypeItems
        {
          get { return global::Sungero.Commons.Client.ClassifierTrainingSession._ClassifierTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ClassifierTypeAllowedItems
        {
          get { return global::Sungero.Commons.Client.ClassifierTrainingSession.ClassifierTypeItems; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Commons.Client.ClassifierTrainingSessionFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.ClassifierTrainingSessionFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Commons.ClassifierTrainingSessionClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.ClassifierTrainingSessionSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void ClassifierIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ClassifierId, this.ClassifierId, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).ClassifierIdChanged(args);
    }

    protected void OldModelIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.OldModelId, this.OldModelId, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).OldModelIdChanged(args);
    }

    protected void FMeasureChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FMeasure, this.FMeasure, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).FMeasureChanged(args);
    }

    protected void ArioTaskIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ArioTaskId, this.ArioTaskId, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).ArioTaskIdChanged(args);
    }

    protected void TrainingStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.TrainingStatus, this.TrainingStatus, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).TrainingStatusChanged(args);
    }

    protected void NewModelIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.NewModelId, this.NewModelId, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).NewModelIdChanged(args);
    }

    protected void ClassifierTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ClassifierType, this.ClassifierType, this);
     ((global::Sungero.Commons.IClassifierTrainingSessionSharedHandlers)this.SharedHandlers).ClassifierTypeChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ClassifierIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ClassifierId, value, this, this.Info.Properties.ClassifierId);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).ClassifierIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? OldModelIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.OldModelId, value, this, this.Info.Properties.OldModelId);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).OldModelIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FMeasureValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FMeasure, value, this, this.Info.Properties.FMeasure);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).FMeasureValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ArioTaskIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ArioTaskId, value, this, this.Info.Properties.ArioTaskId);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).ArioTaskIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? TrainingStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.TrainingStatus, value, this, this.Info.Properties.TrainingStatus);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).TrainingStatusValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? NewModelIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.NewModelId, value, this, this.Info.Properties.NewModelId);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).NewModelIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ClassifierTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ClassifierType, value, this, this.Info.Properties.ClassifierType);
    ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).ClassifierTypeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> TrainingStatusFilteringHandler()
  {
    return ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).TrainingStatusFiltering(this.TrainingStatusAllowedItems);
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ClassifierTypeFilteringHandler()
  {
    return ((global::Sungero.Commons.ClassifierTrainingSessionClientHandlers)this.Handlers).ClassifierTypeFiltering(this.ClassifierTypeAllowedItems);
  }


    #endregion

    #region Constructors



    public ClassifierTrainingSession()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._ClassifierId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ClassifierId", this);
            this._ClassifierId.ValueChanged += (sender, e) => { this.ClassifierIdChangedHandler(); };
            this.AddProperty(this._ClassifierId);

            this._OldModelId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("OldModelId", this);
            this._OldModelId.ValueChanged += (sender, e) => { this.OldModelIdChangedHandler(); };
            this.AddProperty(this._OldModelId);

            this._FMeasure = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FMeasure", this);
            this._FMeasure.ValueChanged += (sender, e) => { this.FMeasureChangedHandler(); };
            this.AddProperty(this._FMeasure);

            this._ArioTaskId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ArioTaskId", this);
            this._ArioTaskId.ValueChanged += (sender, e) => { this.ArioTaskIdChangedHandler(); };
            this.AddProperty(this._ArioTaskId);

            this._TrainingStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("TrainingStatus", this);
            this._TrainingStatus.ValueChanged += (sender, e) => { this.TrainingStatusChangedHandler(); };
            this.AddProperty(this._TrainingStatus);

            this._NewModelId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("NewModelId", this);
            this._NewModelId.ValueChanged += (sender, e) => { this.NewModelIdChangedHandler(); };
            this.AddProperty(this._NewModelId);

            this._ClassifierType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ClassifierType", this);
            this._ClassifierType.ValueChanged += (sender, e) => { this.ClassifierTypeChangedHandler(); };
            this.AddProperty(this._ClassifierType);








    }

    #endregion

  }
}

// ==================================================================
// ClassifierTrainingSessionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ClassifierTrainingSessionPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Commons.IClassifierTrainingSession
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public ClassifierTrainingSessionPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ClassifierTrainingSessionCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ClassifierTrainingSessionCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Commons.IClassifierTrainingSession
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ClassifierTrainingSessionCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ClassifierTrainingSessionCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ClassifierTrainingSessionCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ClassifierTrainingSessionCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ClassifierTrainingSessionRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{ 
  public class ClassifierTrainingSessionRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Commons.IClassifierTrainingSessionRepositoryImplementer<T>
      where T : global::Sungero.Commons.IClassifierTrainingSession
    {
       public new global::Sungero.Commons.IClassifierTrainingSessionAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.IClassifierTrainingSessionAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.IClassifierTrainingSessionInfo Info
       {
          get { return (global::Sungero.Commons.IClassifierTrainingSessionInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Client.ClassifierTrainingSessionTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ClassifierTrainingSessionAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class ClassifierTrainingSessionAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Commons.IClassifierTrainingSessionAccessRights
  {

    public ClassifierTrainingSessionAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ClassifierTrainingSessionTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Commons.IClassifierTrainingSessionAccessRights
  {

    public ClassifierTrainingSessionTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
