
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean CalculateParams(Sungero.Presentation.FormRefreshEventArgs e, global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::System.Boolean calculateIsSubstitute, global::System.Boolean calculateIsAdministrator, global::System.Boolean calculateIsUsed, global::System.Boolean calculateHasDocuments, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CalculateParams", new global::System.Type[]{typeof(Sungero.Presentation.FormRefreshEventArgs), typeof(global::Sungero.Docflow.IRegistrationGroup), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::Sungero.Docflow.IDocumentRegister)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e, registrationGroup, calculateIsSubstitute, calculateIsAdministrator, calculateIsUsed, calculateHasDocuments, documentRegister});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CalculateParams(e, registrationGroup, calculateIsSubstitute, calculateIsAdministrator, calculateIsUsed, calculateHasDocuments, documentRegister);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean CalculateParams(Sungero.Domain.Client.CanExecuteActionArgs e, global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Boolean calculateIsAdministrator)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CalculateParams", new global::System.Type[]{typeof(Sungero.Domain.Client.CanExecuteActionArgs), typeof(global::Sungero.Docflow.IDocumentRegister), typeof(global::System.Boolean)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e, documentRegister, calculateIsAdministrator});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CalculateParams(e, documentRegister, calculateIsAdministrator);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRights", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(assignment, attachments);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(Domain.Shared.IActionInfo)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments, action});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(Domain.Shared.IActionInfo), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments, action, dialogID});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action, dialogID);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRights", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments, additionalAssignees});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(assignment, attachments, additionalAssignees);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(Domain.Shared.IActionInfo)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments, additionalAssignees, action});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(Domain.Shared.IActionInfo), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, attachments, additionalAssignees, action, dialogID});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action, dialogID);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRights", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(task, attachments);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(Domain.Shared.IActionInfo)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments, action});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(Domain.Shared.IActionInfo), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments, action, dialogID});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action, dialogID);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRightsWithConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(Domain.Shared.IActionInfo), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments, additionalAssignees, action, dialogID});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, additionalAssignees, action, dialogID);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDialogGrantAccessRights", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments, additionalAssignees});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowDialogGrantAccessRights(task, attachments, additionalAssignees);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Docflow.IOfficialDocument CreateCoverLetter(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCoverLetter", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateCoverLetter(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateActionItemExecution", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateActionItemExecution(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 parentAssignmentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateActionItemExecution", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, parentAssignmentId});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateActionItemExecution(document, parentAssignmentId);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateActionItemExecutionWithResolution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 parentAssignmentId, global::System.String resolution, global::Sungero.Company.IEmployee assignedBy)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateActionItemExecutionWithResolution", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.String), typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, parentAssignmentId, resolution, assignedBy});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateActionItemExecutionWithResolution(document, parentAssignmentId, resolution, assignedBy);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute(DisplayNameResource = "StartedActionItemResults")]
    internal static void ShowStartedActionItems(global::System.String packedTaskIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowStartedActionItems", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{packedTaskIds});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowStartedActionItems(packedTaskIds);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateDocumentReview(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocumentReview", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateDocumentReview(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowSmartProcessingSettings()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowSmartProcessingSettings", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowSmartProcessingSettings();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RemoveNeedValidateRegisterFormatParameter(global::Sungero.Docflow.IOfficialDocument document, Sungero.Domain.Client.ExecuteActionArgs e)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RemoveNeedValidateRegisterFormatParameter", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(Sungero.Domain.Client.ExecuteActionArgs)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, e});
      }
      else
      {
    global::Sungero.Docflow.Client.ModuleFunctions.RemoveNeedValidateRegisterFormatParameter(document, e);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CheckReportDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckReportDialogPeriod", new global::System.Type[]{typeof(CommonLibrary.InputDialogButtonClickEventArgs), typeof(CommonLibrary.IDateDialogValue), typeof(CommonLibrary.IDateDialogValue)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{args, dialogPeriodBegin, dialogPeriodEnd});
      }
      else
      {
    global::Sungero.Docflow.Client.ModuleFunctions.CheckReportDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CheckDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDialogPeriod", new global::System.Type[]{typeof(CommonLibrary.InputDialogButtonClickEventArgs), typeof(CommonLibrary.IDateDialogValue), typeof(CommonLibrary.IDateDialogValue)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{args, dialogPeriodBegin, dialogPeriodEnd});
      }
      else
      {
    global::Sungero.Docflow.Client.ModuleFunctions.CheckDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDateByWorkCalendar(global::System.Nullable<global::System.DateTime> date)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDateByWorkCalendar", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDateByWorkCalendar(date);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDeadlineByWorkCalendar(global::System.Nullable<global::System.DateTime> deadline)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadlineByWorkCalendar", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDeadlineByWorkCalendar(deadline);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String CheckDeadlineByWorkCalendar(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadlineByWorkCalendar", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{user, deadline});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CheckDeadlineByWorkCalendar(user, deadline);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAcquaintanceTask", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.CreateAcquaintanceTask(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialogCreationActionItem(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Docflow.IOfficialDocument document, Sungero.Workflow.Client.ExecuteResultActionArgs e)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowConfirmationDialogCreationActionItem", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(Sungero.Workflow.Client.ExecuteResultActionArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, document, e});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialogCreationActionItem(assignment, document, e);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialogSendToCounterparty(global::Sungero.Workflow.IAssignment assignment, System.Collections.Generic.IEnumerable<global::System.Nullable<global::Sungero.Core.Enumeration>> collapsed, Sungero.Workflow.Client.ExecuteResultActionArgs e)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowConfirmationDialogSendToCounterparty", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(System.Collections.Generic.IEnumerable<global::System.Nullable<global::Sungero.Core.Enumeration>>), typeof(Sungero.Workflow.Client.ExecuteResultActionArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, collapsed, e});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialogSendToCounterparty(assignment, collapsed, e);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialog(global::System.String text, global::System.String description, global::System.String title, global::System.String dialogID)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowConfirmationDialog", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, description, title, dialogID});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ShowConfirmationDialog(text, description, title, dialogID);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLockedByOther", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLockedByOther(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLocked(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLocked", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLocked(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity, Domain.Client.ExecuteActionArgs e)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLockedByOther", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(Domain.Client.ExecuteActionArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, e});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.IsLockedByOther(entity, e);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean VersionIsLocked(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocumentVersions> versions)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("VersionIsLocked", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocumentVersions>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{versions});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.VersionIsLocked(versions);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowAllReports()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowAllReports", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowAllReports();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowCurrentPersonalSettings()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCurrentPersonalSettings", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowCurrentPersonalSettings();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RunApprovalSheetReport(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunApprovalSheetReport", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).RunApprovalSheetReport(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void RunExchangeOrderReport(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunExchangeOrderReport", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).RunExchangeOrderReport(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ApproveDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Company.IEmployee substituted, global::System.Boolean needStrongSign, global::System.String comment, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ApproveDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Boolean), typeof(global::System.String), typeof(Sungero.Domain.Client.ExecuteActionArgs)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, substituted, needStrongSign, comment, eventArgs});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ApproveDocument(document, addenda, substituted, needStrongSign, comment, eventArgs);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EndorseDocument(global::Sungero.Workflow.IAssignment assignment, global::System.Boolean endorse, global::System.Boolean needStrongSign, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EndorseDocument", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(Sungero.Domain.Client.ExecuteActionArgs)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, endorse, needStrongSign, eventArgs});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).EndorseDocument(assignment, endorse, needStrongSign, eventArgs);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetApprovalTaskAddendaForEndorse(global::Sungero.Workflow.IAssignment assignment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApprovalTaskAddendaForEndorse", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetApprovalTaskAddendaForEndorse(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetFreeApprovalTaskAddendaForEndorse(global::Sungero.Workflow.IAssignment assignment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFreeApprovalTaskAddendaForEndorse", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetFreeApprovalTaskAddendaForEndorse(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void EndorseDocument(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorse, global::System.Boolean needStrongSign, global::System.String comment, Sungero.Domain.Client.ExecuteActionArgs eventArgs)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EndorseDocument", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.String), typeof(Sungero.Domain.Client.ExecuteActionArgs)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, substituted, endorse, needStrongSign, comment, eventArgs});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).EndorseDocument(document, addenda, substituted, endorse, needStrongSign, comment, eventArgs);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ApproveWithAddenda(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorseWhenApproveFailed, global::System.Boolean needStrongSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ApproveWithAddenda", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, certificate, substituted, endorseWhenApproveFailed, needStrongSign, comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ApproveWithAddenda(document, addenda, certificate, substituted, endorseWhenApproveFailed, needStrongSign, comment);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean EndorseWithAddenda(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.CoreEntities.IUser substituted, global::System.Boolean needStrongSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EndorseWithAddenda", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, certificate, substituted, needStrongSign, comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).EndorseWithAddenda(document, addenda, certificate, substituted, needStrongSign, comment);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String GetManyAddendumDialogSuccessfulNotify(global::System.Int32 addendaCount)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetManyAddendumDialogSuccessfulNotify", new global::System.Type[]{typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{addendaCount});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetManyAddendumDialogSuccessfulNotify(addendaCount);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CreateAddendum(global::System.String addendumName, global::Sungero.Docflow.IOfficialDocument leadingDocument, System.Byte[] addendumContent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAddendum", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(System.Byte[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{addendumName, leadingDocument, addendumContent});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateAddendum(addendumName, leadingDocument, addendumContent);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CreateAddendum(global::System.String addendumName, global::Sungero.Docflow.IOfficialDocument leadingDocument, System.IO.Stream stream)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAddendum", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(System.IO.Stream)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{addendumName, leadingDocument, stream});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateAddendum(addendumName, leadingDocument, stream);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void AddManyAddendumDialog(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddManyAddendumDialog", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).AddManyAddendumDialog(document);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String[] GetAddManyAddendumDialogExtensions()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddManyAddendumDialogExtensions", global::System.Array.Empty<global::System.Type>());
        return (global::System.String[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetAddManyAddendumDialogExtensions();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ExportFinancialDocumentDialogWithSearch()
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportFinancialDocumentDialogWithSearch", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Docflow.Client.ModuleFunctions.ExportFinancialDocumentDialogWithSearch();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> FinancialDocumentDialogSearch()
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FinancialDocumentDialogSearch", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.FinancialDocumentDialogSearch();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ExportDocumentDialog(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportDocumentDialog", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents});
      }
      else
      {
    global::Sungero.Docflow.Client.ModuleFunctions.ExportDocumentDialog(documents);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> ExportDocumentDialogWithSearchInWeb(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documentList, global::System.Boolean onlySearch)
    {
      var __typeName = "Sungero.Docflow.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportDocumentDialogWithSearchInWeb", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::System.Boolean)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentList, onlySearch});
      }
      else
      {
        return global::Sungero.Docflow.Client.ModuleFunctions.ExportDocumentDialogWithSearchInWeb(documentList, onlySearch);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean CheckFinancialArchiveLicense()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckFinancialArchiveLicense", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CheckFinancialArchiveLicense();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void CopyCaseFiles()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CopyCaseFiles", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CopyCaseFiles();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowCaseFilesCopyDialog()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCaseFilesCopyDialog", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowCaseFilesCopyDialog();
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.DateTimePeriod GetCaseFilesCopyDialogTargetPeriod(global::System.DateTime year, global::System.Nullable<global::System.Int32> quarter, global::System.Nullable<global::System.Int32> month)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCaseFilesCopyDialogTargetPeriod", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Nullable<global::System.Int32>)});
        return (global::Sungero.Docflow.Structures.Module.DateTimePeriod)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{year, quarter, month});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetCaseFilesCopyDialogTargetPeriod(year, quarter, month);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void OpenEmployeeAssignmentsReport(global::System.Int64 employeeId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("OpenEmployeeAssignmentsReport", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeId, periodBegin, periodEnd});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).OpenEmployeeAssignmentsReport(employeeId, periodBegin, periodEnd);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute()]
    internal static void OpenEmployeeAssignmentsReport(global::System.String employeeid, global::System.String periodbegin, global::System.String periodend)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("OpenEmployeeAssignmentsReport", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeid, periodbegin, periodend});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).OpenEmployeeAssignmentsReport(employeeid, periodbegin, periodend);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void OpenEmployeesAssignmentCompletionReport(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IDepartment department, global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String widgetParameter, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean sortByAssignmentCompletion)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("OpenEmployeesAssignmentCompletionReport", new global::System.Type[]{typeof(global::Sungero.Company.IBusinessUnit), typeof(global::Sungero.Company.IDepartment), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnit, department, businessUnitIds, departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution, sortByAssignmentCompletion});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).OpenEmployeesAssignmentCompletionReport(businessUnit, department, businessUnitIds, departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution, sortByAssignmentCompletion);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute()]
    internal static void OpenEmployeesAssignmentCompletionReport(global::System.String businessunitid, global::System.String departmentid, global::System.String periodbegin, global::System.String periodend, global::System.String unwrap)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("OpenEmployeesAssignmentCompletionReport", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessunitid, departmentid, periodbegin, periodend, unwrap});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).OpenEmployeesAssignmentCompletionReport(businessunitid, departmentid, periodbegin, periodend, unwrap);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void OpenDepartmentsAssignmentCompletionReport(global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String widgetParameter, global::System.Boolean unwrap, global::System.Boolean withSubstitution)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("OpenDepartmentsAssignmentCompletionReport", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).OpenDepartmentsAssignmentCompletionReport(departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute(DisplayNameResource = "DocumentComparisonResults")]
    internal static void ShowDocumentComparisonResults(global::System.Int64 comparisonInfoId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDocumentComparisonResults", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfoId});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowDocumentComparisonResults(comparisonInfoId);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static void ShowDocumentComparisonResults(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDocumentComparisonResults", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentComparisonInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfo});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowDocumentComparisonResults(comparisonInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String GetComparisonResultPdfName(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetComparisonResultPdfName", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentComparisonInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetComparisonResultPdfName(comparisonInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.String GetComparisonResultPdfName(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Int32 firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Int32 secondVersionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetComparisonResultPdfName", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32), typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstDocument, firstVersionNumber, secondDocument, secondVersionNumber});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetComparisonResultPdfName(firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute(DisplayNameResource = "ShowDocumentVersion")]
    internal static void ShowDocumentVersion(global::System.Int64 documentId, global::System.Int32 versionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDocumentVersion", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, versionNumber});
      }
      else
      {
    ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowDocumentVersion(documentId, versionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.ClientBase" type="Sungero.Docflow.Client.ModuleFunctions" />
    internal static global::System.Boolean IsDocumentEncrypted(global::Sungero.Content.IElectronicDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsDocumentEncrypted", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).IsDocumentEncrypted(document);
      }
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BoxToString(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> result)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BoxToString", new global::System.Type[]{typeof(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{result});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.BoxToString(result);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> UnboxDictionary(global::System.String result)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnboxDictionary", new global::System.Type[]{typeof(global::System.String)});
        return (System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{result});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.UnboxDictionary(result);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCopyingCaseFilesTotalsMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate, global::System.Int32 success, global::System.Int32 failed)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCopyingCaseFilesTotalsMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate, success, failed});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCopyingCaseFilesTotalsMessage(targetPeriodStartDate, targetPeriodEndDate, success, failed);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAlreadyCopiedCaseFilesMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAlreadyCopiedCaseFilesMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAlreadyCopiedCaseFilesMessage(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNoCaseFilesToCopyMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNoCaseFilesToCopyMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetNoCaseFilesToCopyMessage(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCopyingCaseFilesTargetPeriodAsString(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCopyingCaseFilesTargetPeriodAsString", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCopyingCaseFilesTargetPeriodAsString(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String AppendCaseFilesHyperlinkTo(global::System.String source)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AppendCaseFilesHyperlinkTo", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{source});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AppendCaseFilesHyperlinkTo(source);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status, addressee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsTaskCompleted(global::Sungero.Workflow.ITask task)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsTaskCompleted", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsTaskCompleted(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetActionItemsForResolution(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionItemsForResolution", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.ITask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status, addressee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionItemsForResolution(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> ActionItemInfoProvider(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ActionItemInfoProvider", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ActionItemInfoProvider(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void TryToShowNotifyMessage(global::System.String message)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TryToShowNotifyMessage", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    global::Sungero.Docflow.Shared.ModuleFunctions.TryToShowNotifyMessage(message);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetDocumentLastApprover(global::Sungero.Content.IElectronicDocument document)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentLastApprover", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDocumentLastApprover(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IStorage GetStorageByPolicies(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetStorageByPolicies", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.CoreEntities.IStorage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetStorageByPolicies(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime ToTenantTime(global::System.DateTime datetime)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ToTenantTime", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{datetime});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ToTenantTime(datetime);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToUpperCase(global::System.String label)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReplaceFirstSymbolToUpperCase", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{label});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToUpperCase(label);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsASCII(global::System.String value)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsASCII", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{value});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsASCII(value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToLowerCase(global::System.String label)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReplaceFirstSymbolToLowerCase", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{label});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToLowerCase(label);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNumberDeclination(global::System.Int32 number, CommonLibrary.LocalizedString singleName, CommonLibrary.LocalizedString genitiveName, CommonLibrary.LocalizedString pluralName)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNumberDeclination", new global::System.Type[]{typeof(global::System.Int32), typeof(CommonLibrary.LocalizedString), typeof(CommonLibrary.LocalizedString), typeof(CommonLibrary.LocalizedString)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{number, singleName, genitiveName, pluralName});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetNumberDeclination(number, singleName, genitiveName, pluralName);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretary(global::Sungero.Company.IEmployee manager)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecretary", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{manager});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretary(manager);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretaryManager(global::Sungero.Company.IEmployee secretary)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecretaryManager", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{secretary});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaryManager(secretary);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByMe(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLockedByMe", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsLockedByMe(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int64 userId)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportName, userId});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int64 userId)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(Reporting.IReport), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{report, userId});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int64 userId, global::System.String postfix)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(Reporting.IReport), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{report, userId, postfix});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId, postfix);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int64 userId, global::System.String postfix)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportName, userId, postfix});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId, postfix);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IBusinessUnit GetDefaultBusinessUnit(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultBusinessUnit", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IBusinessUnit)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDefaultBusinessUnit(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void SynchronizeAddendaAndAttachmentsGroup(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group, global::Sungero.Content.IElectronicDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAddendaAndAttachmentsGroup", new global::System.Type[]{typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup), typeof(global::Sungero.Content.IElectronicDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{group, document});
      }
      else
      {
    ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAddendaAndAttachmentsGroup(group, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddenda(global::Sungero.Content.IElectronicDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddenda", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAddenda(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, arg0});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0, System.Object arg1)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object), typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, arg0, arg1});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0, arg1);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object[] args)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object[])});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, args});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, args);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimQuotes(global::System.String row)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimQuotes", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{row});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimQuotes(row);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimEndNewLines(global::System.String row)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimEndNewLines", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{row});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimEndNewLines(row);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetActionGuid(Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionGuid", new global::System.Type[]{typeof(Domain.Shared.IActionInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{action});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionGuid(action);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.IDocumentSendAction GetSendAction(Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSendAction", new global::System.Type[]{typeof(Domain.Shared.IActionInfo)});
        return (global::Sungero.Docflow.IDocumentSendAction)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{action});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSendAction(action);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Int32 CalculateDelay(global::System.Nullable<global::System.DateTime> deadline, global::System.DateTime completed, global::Sungero.CoreEntities.IUser user)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CalculateDelay", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, completed, user});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CalculateDelay(deadline, completed, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadline", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{user, deadline, minDeadline});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(user, deadline, minDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckCoAssigneesDeadline(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Nullable<global::System.DateTime> coAssigneesDeadline)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckCoAssigneesDeadline", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{coAssignees, coAssigneesDeadline});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CheckCoAssigneesDeadline(coAssignees, coAssigneesDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckAssigneesDeadlines(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> coAssigneesDeadline)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckAssigneesDeadlines", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, coAssigneesDeadline});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CheckAssigneesDeadlines(deadline, coAssigneesDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetDefaultCoAssigneesDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Int32 controlRelativeDeadlineInDays, global::System.Int32 controlRelativeDeadlineInHours)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultCoAssigneesDeadline", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, controlRelativeDeadlineInDays, controlRelativeDeadlineInHours});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDefaultCoAssigneesDeadline(deadline, controlRelativeDeadlineInDays, controlRelativeDeadlineInHours);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadline", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, minDeadline});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(deadline, minDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ValidateTaskAuthor(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateTaskAuthor", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean ValidateTaskAuthor(global::Sungero.Workflow.ITask task, Sungero.Core.IValidationArgs e)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateTaskAuthor", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(Sungero.Core.IValidationArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, e});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task, e);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Boolean withHyperlink)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatDocumentNameForReport", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, withHyperlink});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, withHyperlink);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Int32 version, global::System.Boolean withHyperlink)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatDocumentNameForReport", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, version, withHyperlink});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, version, withHyperlink);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date, global::Sungero.CoreEntities.IUser user)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithTime", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date, user});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithTime", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDateWithUTCLabel(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithUTCLabel", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithUTCLabel(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatTenantIdForBarcode(global::System.String tenant)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatTenantIdForBarcode", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tenant});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatTenantIdForBarcode(tenant);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static Sungero.FinancialArchive.IFinArchiveExportReport GetFinArchiveExportReport(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::System.DateTime dateTimeNow)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFinArchiveExportReport", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>), typeof(global::System.DateTime)});
        return (Sungero.FinancialArchive.IFinArchiveExportReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{objs, dateTimeNow});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetFinArchiveExportReport(objs, dateTimeNow);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BuildManyAddresseesLabel(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees, global::System.Int32 labelMaxLength)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BuildManyAddresseesLabel", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{addressees, labelMaxLength});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).BuildManyAddresseesLabel(addressees, labelMaxLength);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCoAssigneesNames(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Boolean isFullName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCoAssigneesNames", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{coAssignees, isFullName});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCoAssigneesNames(coAssignees, isFullName);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetRemovedAddendaFromAssignments(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRemovedAddendaFromAssignments", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Guid)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, groupId});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetRemovedAddendaFromAssignments(task, groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddedAddendaFromAssignments(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddedAddendaFromAssignments", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Guid)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, groupId});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAddedAddendaFromAssignments(task, groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries ParseAttachmentsHistory(System.Collections.Generic.IEnumerable<global::Sungero.Workflow.IWorkflowHistory> history)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ParseAttachmentsHistory", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.Workflow.IWorkflowHistory>)});
        return (global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{history});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).ParseAttachmentsHistory(history);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int64> GetDocumentIdFromHistoryComment(global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentIdFromHistoryComment", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDocumentIdFromHistoryComment(comment);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Guid> GetAttachmentGroupIdFromHistoryComment(global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAttachmentGroupIdFromHistoryComment", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.Guid>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAttachmentGroupIdFromHistoryComment(comment);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetMaxHistoryOperationDateById(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntry> operations, global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMaxHistoryOperationDateById", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntry>), typeof(global::System.Int64)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{operations, id});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetMaxHistoryOperationDateById(operations, id);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String AddApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AddApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String RemoveApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RemoveApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).RemoveApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).HasApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetApproveWithSuggestionsMark()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApproveWithSuggestionsMark", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetApproveWithSuggestionsMark();
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetSigningReason(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSigningReason", new global::System.Type[]{typeof(global::Sungero.Docflow.ISignatureSetting)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signatureSetting});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSigningReason(signatureSetting);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAmountWithCurrencyInWords(global::System.Double amount, global::Sungero.Commons.ICurrency currency)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAmountWithCurrencyInWords", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.ICurrency)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{amount, currency});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAmountWithCurrencyInWords(amount, currency);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAmountWithCurrencyInWordsWithoutDecimalValue(global::System.Double amount, global::Sungero.Commons.ICurrency currency)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAmountWithCurrencyInWordsWithoutDecimalValue", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.ICurrency)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{amount, currency});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAmountWithCurrencyInWordsWithoutDecimalValue(amount, currency);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDecimalValueStringWithTwoDigits(global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDecimalValueStringWithTwoDigits", new global::System.Type[]{typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDecimalValueStringWithTwoDigits(value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCurrencyNameForIntegerValuePart(global::Sungero.Commons.ICurrency currency, global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrencyNameForIntegerValuePart", new global::System.Type[]{typeof(global::Sungero.Commons.ICurrency), typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currency, value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCurrencyNameForIntegerValuePart(currency, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCurrencyNameForFractionalValuePart(global::Sungero.Commons.ICurrency currency, global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrencyNameForFractionalValuePart", new global::System.Type[]{typeof(global::Sungero.Commons.ICurrency), typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currency, value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCurrencyNameForFractionalValuePart(currency, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String PackIds(global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PackIds", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ids});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).PackIds(ids);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> UnpackIds(global::System.String packedIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnpackIds", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{packedIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).UnpackIds(packedIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsPoAKonturLicenseEnable()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsPoAKonturLicenseEnable", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsPoAKonturLicenseEnable();
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::System.DateTime> startTime)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument,global::System.Int64,global::System.Nullable<global::System.DateTime>)", document, versionId, startTime);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument,global::System.Int64)", document, versionId);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase,global::System.Int64,global::System.Nullable<global::Sungero.Core.Enumeration>,global::System.Nullable<global::System.DateTime>)", document, versionId, exchangeStatus, startTime);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase,global::System.Int64,global::System.Nullable<global::Sungero.Core.Enumeration>)", document, versionId, exchangeStatus);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.IByteArray GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray xml)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.IByteArray>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray)", xml);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean GeneratePublicBodyForCancellationAgreement(global::Sungero.Exchange.ICancellationAgreement document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GeneratePublicBodyForCancellationAgreement(global::Sungero.Exchange.ICancellationAgreement,global::System.Int64,global::System.Nullable<global::Sungero.Core.Enumeration>,global::System.Nullable<global::System.DateTime>)", document, versionId, exchangeStatus, startTime);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String CalculateParams(global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::Sungero.Docflow.IDocumentRegister documentRegister)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CalculateParams(global::Sungero.Docflow.IRegistrationGroup,global::Sungero.Docflow.IDocumentRegister)", registrationGroup, documentRegister);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Core.StateView CreateApprovalListStateView(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Core.StateView>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateApprovalListStateView(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IDepartment GetDepartment(global::Sungero.CoreEntities.IUser user)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IDepartment>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDepartment(global::Sungero.CoreEntities.IUser)", user);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetManager(global::Sungero.CoreEntities.IUser user)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetManager(global::Sungero.CoreEntities.IUser)", user);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration>,global::Sungero.Company.IBusinessUnit,global::Sungero.Docflow.IDocumentKind,global::Sungero.Company.IDepartment)", settingType, businessUnit, documentKind, department);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetClerk(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetClerk(global::Sungero.Docflow.IOfficialDocument,global::System.Nullable<global::Sungero.Core.Enumeration>)", document, documentFlow);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAssignees(global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetTaskAssignees(global::Sungero.Workflow.ITask)", task);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>,global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)", performers, attachments);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IncludedInClerksRole()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IncludedInClerksRole()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IncludedInRole(global::System.Guid roleSid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IncludedInRole(global::System.Guid)", roleSid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsAdministratorOrAdvisor()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsAdministratorOrAdvisor()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsAdministrator()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsAdministrator()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Double GetDocflowParamsNumbericValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Double>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsNumbericValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Int32 GetDocflowParamsIntegerValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Int32>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsIntegerValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetDocflowParamsStringValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsStringValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Nullable<global::System.DateTime> GetDocflowParamsDateTimeValue(global::System.String paramName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Nullable<global::System.DateTime>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocflowParamsDateTimeValue(global::System.String)", paramName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData GetExchangeOrderInfo(global::System.String reportSessionId, global::Sungero.Docflow.IOfficialDocument sentDocument)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetExchangeOrderInfo(global::System.String,global::Sungero.Docflow.IOfficialDocument)", reportSessionId, sentDocument);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries GetAttachmentHistoryEntriesByGroupId(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAttachmentHistoryEntriesByGroupId(global::Sungero.Workflow.ITask,global::System.Guid)", task, groupId);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetUnsignedAttribute(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 signatureId, global::System.String key)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetUnsignedAttribute(global::Sungero.Docflow.IOfficialDocument,global::System.Int64,global::System.String)", document, signatureId, key);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity entity)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity)", entity);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IFreeApprovalTask CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IFreeApprovalTask>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask> GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask> GetReviewTasks(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetReviewTasks(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IApprovalTask CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IApprovalTask>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetAvaliableLeadingDocuments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAvaliableLeadingDocuments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void SendNoticesAsSubtask(global::System.String subject, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> performers, global::Sungero.Workflow.ITask parentTask, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "SendNoticesAsSubtask(global::System.String,global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>,global::Sungero.Workflow.ITask,global::System.String,global::Sungero.CoreEntities.IUser,global::System.String)", subject, performers, parentTask, activeText, author, threadSubject);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsModuleAvailableByLicense(global::System.Guid moduleGuid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsModuleAvailableByLicense(global::System.Guid)", moduleGuid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsModuleAvailableForCurrentUserByLicense(global::System.Guid moduleGuid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsModuleAvailableForCurrentUserByLicense(global::System.Guid)", moduleGuid);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Company.IEmployee employee)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Company.IEmployee)", document, employee);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.DateTime GetTenantDateTimeFromUserDay(global::System.DateTime date)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.DateTime>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetTenantDateTimeFromUserDay(global::System.DateTime)", date);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList> GetDistributionLists()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDistributionLists()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IDistributionList CreateDistributionList()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IDistributionList>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateDistributionList()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument> GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty counterparty)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty)", counterparty);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Company.IEmployee GetResolutionAuthor(global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Company.IEmployee>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetResolutionAuthor(global::Sungero.Workflow.ITask)", task);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "AddApprover(global::Sungero.Workflow.IAssignment,global::Sungero.Company.IEmployee)", assignment, newApprover);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover, global::System.Nullable<global::System.DateTime> deadline)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "AddApprover(global::Sungero.Workflow.IAssignment,global::Sungero.Company.IEmployee,global::System.Nullable<global::System.DateTime>)", assignment, newApprover, deadline);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity> GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind documentKind)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind)", documentKind);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetCurrentTenantId()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCurrentTenantId()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean BusinessUnitAssignmentCompletionWidgetDataExist(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "BusinessUnitAssignmentCompletionWidgetDataExist(global::System.Collections.Generic.List<global::System.Int64>,global::System.Collections.Generic.List<global::System.Int64>,global::System.DateTime,global::System.DateTime,global::System.Boolean,global::System.Boolean,global::System.Boolean)", businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::System.Int64> GetCEODepartments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::System.Int64>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCEODepartments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::System.Int64> GetManagersDepartments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::System.Int64>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetManagersDepartments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean DepartmentAssignmentCompletionReportDataExist(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "DepartmentAssignmentCompletionReportDataExist(global::System.Collections.Generic.List<global::System.Int64>,global::System.Collections.Generic.List<global::System.Int64>,global::System.DateTime,global::System.DateTime,global::System.Boolean,global::System.Boolean,global::System.Boolean)", businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetVisibleBusinessUnits()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetVisibleBusinessUnits()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> GetVisibleDepartments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IDepartment>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetVisibleDepartments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetVisibleEmployees()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetVisibleEmployees()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetCertificates(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void RequeueSendNotificationForExpiringPowersOfAttorney()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "RequeueSendNotificationForExpiringPowersOfAttorney()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void RequeueTransferDocuments()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "RequeueTransferDocuments()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.AfterExportDialog PrepareExportDocumentDialogDocuments(global::System.Collections.Generic.List<global::System.Int64> objsId, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.AfterExportDialog>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "PrepareExportDocumentDialogDocuments(global::System.Collections.Generic.List<global::System.Int64>,global::Sungero.Docflow.Structures.Module.ExportDialogParams)", objsId, parameters);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.AfterExportDialog PrepareExportDocumentDialogDocuments(global::Sungero.Docflow.Structures.Module.IExportDialogSearch search, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.AfterExportDialog>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "PrepareExportDocumentDialogDocuments(global::Sungero.Docflow.Structures.Module.IExportDialogSearch,global::Sungero.Docflow.Structures.Module.ExportDialogParams)", search, parameters);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.ExportResult AfterExportDocumentDialogToWeb(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.ExportResult>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "AfterExportDocumentDialogToWeb(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>,global::Sungero.Docflow.Structures.Module.ExportDialogParams)", objs, parameters);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Core.IZip CreateZipFromZipModel(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::System.String fileName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Core.IZip>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateZipFromZipModel(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>,global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>,global::System.String)", zipModels, objs, fileName);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GenerateFinArchiveExportReport(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> exportModels, global::System.String pathToRoot)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GenerateFinArchiveExportReport(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>,global::System.String)", exportModels, pathToRoot);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> SearchByRequisites(global::Sungero.Docflow.Structures.Module.IExportDialogSearch filter)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "SearchByRequisites(global::Sungero.Docflow.Structures.Module.IExportDialogSearch)", filter);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.Structures.Module.DatabooksWithNullCode HasDatabooksWithNullCode()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.Structures.Module.DatabooksWithNullCode>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "HasDatabooksWithNullCode()");
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsVersionBodyEmpty(global::System.Int64 documentId, global::System.Int32 versionNumber)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsVersionBodyEmpty(global::System.Int64,global::System.Int32)", documentId, versionNumber);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IOfficialDocument GetDocumentById(global::System.Int64 id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IOfficialDocument>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentById(global::System.Int64)", id);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Content.IElectronicDocument GetElectronicDocumentById(global::System.Int64 id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Content.IElectronicDocument>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetElectronicDocumentById(global::System.Int64)", id);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetAvailableRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetAvailableRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration>,global::Sungero.Company.IBusinessUnit,global::Sungero.Docflow.IDocumentKind,global::Sungero.Company.IDepartment)", settingType, businessUnit, documentKind, department);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettingByDocumentRegister(global::Sungero.Docflow.IDocumentRegister documentRegister)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetRegistrationSettingByDocumentRegister(global::Sungero.Docflow.IDocumentRegister)", documentRegister);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IDocumentComparisonInfo CreateDocumentComparisonInfo(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Int32 firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Int32 secondVersionNumber)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IDocumentComparisonInfo>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateDocumentComparisonInfo(global::Sungero.Content.IElectronicDocument,global::System.Int32,global::Sungero.Content.IElectronicDocument,global::System.Int32)", firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetDocumentComparisonInfoName(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Nullable<global::System.Int32> firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Nullable<global::System.Int32> secondVersionNumber)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentComparisonInfoName(global::Sungero.Content.IElectronicDocument,global::System.Nullable<global::System.Int32>,global::Sungero.Content.IElectronicDocument,global::System.Nullable<global::System.Int32>)", firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static void CreateCompareDocumentsAsyncHandler(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "CreateCompareDocumentsAsyncHandler(global::Sungero.Docflow.IDocumentComparisonInfo)", comparisonInfo);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IDocumentComparisonInfo GetDocumentComparisonInfoById(global::System.Int64 comparisonInfoId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IDocumentComparisonInfo>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentComparisonInfoById(global::System.Int64)", comparisonInfoId);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.String GetDocumentComparisonCompleteMessage(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "GetDocumentComparisonCompleteMessage(global::Sungero.Docflow.IDocumentComparisonInfo)", comparisonInfo);
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
      internal static global::System.Boolean IsJobEnabled(global::System.String id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"),
          "IsJobEnabled(global::System.String)", id);
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Docflow.Client.IModuleClientPublicFunctions
  {
    public global::System.Boolean ApproveWithAddenda(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.Company.IEmployee substituted, global::System.Boolean endorseWhenApproveFailed, global::System.Boolean needStrongSign, global::System.String comment)
    {
      return global::Sungero.Docflow.Functions.Module.ApproveWithAddenda(document, addenda, certificate, substituted, endorseWhenApproveFailed, needStrongSign, comment);
    }
    public global::System.String CheckDateByWorkCalendar(global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDateByWorkCalendar(date);
    }
    public global::System.String CheckDeadlineByWorkCalendar(global::System.Nullable<global::System.DateTime> deadline)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDeadlineByWorkCalendar(deadline);
    }
    public global::System.String CheckDeadlineByWorkCalendar(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDeadlineByWorkCalendar(user, deadline);
    }
    public void CheckDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
global::Sungero.Docflow.Functions.Module.CheckDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    public global::System.Boolean CheckFinancialArchiveLicense()
    {
      return global::Sungero.Docflow.Functions.Module.CheckFinancialArchiveLicense();
    }
    public void CheckReportDialogPeriod(CommonLibrary.InputDialogButtonClickEventArgs args, CommonLibrary.IDateDialogValue dialogPeriodBegin, CommonLibrary.IDateDialogValue dialogPeriodEnd)
    {
global::Sungero.Docflow.Functions.Module.CheckReportDialogPeriod(args, dialogPeriodBegin, dialogPeriodEnd);
    }
    public global::Sungero.Workflow.ITask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateAcquaintanceTask(document);
    }
    public global::Sungero.Workflow.ITask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateActionItemExecution(document);
    }
    public global::Sungero.Docflow.IOfficialDocument CreateCoverLetter(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.CreateCoverLetter(document);
    }
    public global::System.Boolean EndorseWithAddenda(global::Sungero.Content.IElectronicDocument document, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::Sungero.CoreEntities.ICertificate certificate, global::Sungero.CoreEntities.IUser substituted, global::System.Boolean needStrongSign, global::System.String comment)
    {
      return global::Sungero.Docflow.Functions.Module.EndorseWithAddenda(document, addenda, certificate, substituted, needStrongSign, comment);
    }
    public void ExportDocumentDialog(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents)
    {
global::Sungero.Docflow.Functions.Module.ExportDocumentDialog(documents);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> ExportDocumentDialogWithSearchInWeb(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documentList, global::System.Boolean onlySearch)
    {
      return global::Sungero.Docflow.Functions.Module.ExportDocumentDialogWithSearchInWeb(documentList, onlySearch);
    }
    public void ExportFinancialDocumentDialogWithSearch()
    {
global::Sungero.Docflow.Functions.Module.ExportFinancialDocumentDialogWithSearch();
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> FinancialDocumentDialogSearch()
    {
      return global::Sungero.Docflow.Functions.Module.FinancialDocumentDialogSearch();
    }
    public global::System.String GetComparisonResultPdfName(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
    {
      return global::Sungero.Docflow.Functions.Module.GetComparisonResultPdfName(comparisonInfo);
    }
    public global::System.String GetComparisonResultPdfName(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Int32 firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Int32 secondVersionNumber)
    {
      return global::Sungero.Docflow.Functions.Module.GetComparisonResultPdfName(firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
    }
    public global::System.Boolean IsDocumentEncrypted(global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.IsDocumentEncrypted(document);
    }
    public global::System.Boolean IsLocked(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Docflow.Functions.Module.IsLocked(entity);
    }
    public global::System.Boolean IsLockedByOther(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Docflow.Functions.Module.IsLockedByOther(entity);
    }
    public void OpenDepartmentsAssignmentCompletionReport(global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String widgetParameter, global::System.Boolean unwrap, global::System.Boolean withSubstitution)
    {
global::Sungero.Docflow.Functions.Module.OpenDepartmentsAssignmentCompletionReport(departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution);
    }
    public void OpenEmployeeAssignmentsReport(global::System.Int64 employeeId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
global::Sungero.Docflow.Functions.Module.OpenEmployeeAssignmentsReport(employeeId, periodBegin, periodEnd);
    }
    public void OpenEmployeesAssignmentCompletionReport(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IDepartment department, global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String widgetParameter, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean sortByAssignmentCompletion)
    {
global::Sungero.Docflow.Functions.Module.OpenEmployeesAssignmentCompletionReport(businessUnit, department, businessUnitIds, departmentIds, periodBegin, periodEnd, widgetParameter, unwrap, withSubstitution, sortByAssignmentCompletion);
    }
    public global::System.Boolean ShowConfirmationDialog(global::System.String text, global::System.String description, global::System.String title, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowConfirmationDialog(text, description, title, dialogID);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(assignment, attachments);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(assignment, attachments, additionalAssignees);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(task, attachments);
    }
    public global::System.Nullable<global::System.Boolean> ShowDialogGrantAccessRights(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRights(task, attachments, additionalAssignees);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(assignment, attachments, additionalAssignees, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, action, dialogID);
    }
    public global::System.Boolean ShowDialogGrantAccessRightsWithConfirmationDialog(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalAssignees, Domain.Shared.IActionInfo action, global::System.String dialogID)
    {
      return global::Sungero.Docflow.Functions.Module.ShowDialogGrantAccessRightsWithConfirmationDialog(task, attachments, additionalAssignees, action, dialogID);
    }
    public global::System.Boolean VersionIsLocked(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocumentVersions> versions)
    {
      return global::Sungero.Docflow.Functions.Module.VersionIsLocked(versions);
    }
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{

  public partial class ApprovalRulesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState Filter { get; private set; }

    private global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void ApprovalRulesValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public ApprovalRulesFolderHandlers(global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState filter)
    {
      this.Filter = filter;
    }

  }

  public partial class StoragePolicyFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState Filter { get; private set; }

    private global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void StoragePolicyValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public StoragePolicyFolderHandlers(global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState filter)
    {
      this.Filter = filter;
    }

  }

}

