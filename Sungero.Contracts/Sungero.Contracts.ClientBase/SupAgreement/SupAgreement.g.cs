
// ==================================================================
// SupAgreementEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{ 
}

// ==================================================================
// SupAgreementHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class SupAgreementFilteringClientHandler
    : global::Sungero.Contracts.ContractualDocumentFilteringClientHandler
  {
    private global::Sungero.Contracts.ISupAgreementFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.ISupAgreementFilterState)this.Filter;
      }
    }

    public SupAgreementFilteringClientHandler(global::Sungero.Contracts.ISupAgreementFilterState filter)
    : base(filter)
    {
    }

    protected SupAgreementFilteringClientHandler()
    {
    }

    public override void ValidateFilterPanel(global::Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
      base.ValidateFilterPanel(e);
    }
  }


  public partial class SupAgreementClientHandlers : global::Sungero.Contracts.ContractualDocumentClientHandlers
  {
    private global::Sungero.Contracts.ISupAgreement _obj
    {
      get { return (global::Sungero.Contracts.ISupAgreement)this.Entity; }
    }

    public SupAgreementClientHandlers(global::Sungero.Contracts.ISupAgreement entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// SupAgreementClientFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Client
{
  public partial class SupAgreementFunctions : global::Sungero.Contracts.Client.ContractualDocumentFunctions
  {
    private global::Sungero.Contracts.ISupAgreement _obj
    {
      get { return (global::Sungero.Contracts.ISupAgreement)this.Entity; }
    }

    public SupAgreementFunctions(global::Sungero.Contracts.ISupAgreement entity) : base(entity) { }
  }
}

// ==================================================================
// SupAgreementFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class SupAgreement
  {
    /// <redirect project="Sungero.Contracts.Client" type="Sungero.Contracts.Client.SupAgreementFunctions" />
    internal static  global::System.Boolean NeedViewDocumentSummary(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.ClientFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedViewDocumentSummary", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Client" type="Sungero.Contracts.Client.SupAgreementFunctions" />
    internal static  global::System.Collections.Generic.List<Domain.Shared.IEntityInfo> GetTypesAvailableForChange(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.ClientFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTypesAvailableForChange", new System.Type[] {  });
      return (global::System.Collections.Generic.List<Domain.Shared.IEntityInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Client" type="Sungero.Contracts.Client.SupAgreementFunctions" />
    internal static  global::System.Boolean CanChangeDocumentType(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.ClientFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanChangeDocumentType", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsVerificationModeSupported", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasEmptyRequiredProperties", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::Sungero.Docflow.IDocumentGroupBase GetDocumentGroup(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentGroup", new System.Type[] {  });
      return (global::Sungero.Docflow.IDocumentGroupBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Docflow.IOfficialDocument contract)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HaveDuplicates",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement), typeof(global::Sungero.Company.IBusinessUnit), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.HaveDuplicates(supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetLeadDocumentNumber(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLeadDocumentNumber", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetNamePartBySupAgreement(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetNamePartBySupAgreement",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.GetNamePartBySupAgreement(supAgreement);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetSupAgreementNamePart(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetSupAgreementNamePart",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.GetSupAgreementNamePart(supAgreement);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void SetObsolete(global::Sungero.Contracts.ISupAgreement supAgreement, global::System.Boolean isActive)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetObsolete", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isActive });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void FillName(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Contracts.ISupAgreement supAgreement, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, isRepeatRegister });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Contracts.ISupAgreement supAgreement, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void FillLeadingDocument(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillLeadingDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { leadingDocument });
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.Contracts.ISupAgreement> GetDuplicates(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Docflow.IOfficialDocument contract)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Contracts.ISupAgreement>>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetDuplicates(global::Sungero.Contracts.ISupAgreement,global::Sungero.Company.IBusinessUnit,global::System.String,global::System.Nullable<global::System.DateTime>,global::Sungero.Parties.ICounterparty,global::Sungero.Docflow.IOfficialDocument)"
      , supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.String GetNamePartBySupAgreementIgnoreAccessRights(global::System.Int64 supAgreementId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetNamePartBySupAgreementIgnoreAccessRights(global::System.Int64)"
      , supAgreementId);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRules(global::Sungero.Contracts.ISupAgreement supAgreement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase>>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetApprovalRules(global::Sungero.Contracts.ISupAgreement)"
          , supAgreement);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::Sungero.Docflow.IApprovalRuleBase GetDefaultApprovalRule(global::Sungero.Contracts.ISupAgreement supAgreement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IApprovalRuleBase>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetDefaultApprovalRule(global::Sungero.Contracts.ISupAgreement)"
          , supAgreement);
      }

    }
  }
}

// ==================================================================
// SupAgreementClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public class SupAgreementClientPublicFunctions : global::Sungero.Contracts.Client.ISupAgreementClientPublicFunctions
  {
    public global::System.Boolean NeedViewDocumentSummary(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      return global::Sungero.Contracts.Functions.SupAgreement.NeedViewDocumentSummary(supAgreement);
    }
  }
}

// ==================================================================
// SupAgreementActions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Client
{
  public partial class SupAgreementActions : global::Sungero.Contracts.Client.ContractualDocumentActions
  {
    private global::Sungero.Contracts.ISupAgreement _obj { get { return (global::Sungero.Contracts.ISupAgreement)this.Entity; } }
    public SupAgreementActions(global::Sungero.Contracts.ISupAgreement entity) : base(entity) { }
  }

  public partial class SupAgreementCollectionActions : global::Sungero.Contracts.Client.ContractualDocumentCollectionActions
  {
    private global::System.Collections.Generic.IEnumerable<global::Sungero.Contracts.ISupAgreement> _objs
    {
      get { return global::System.Linq.Enumerable.Cast<global::Sungero.Contracts.ISupAgreement>(this.Entities); }
    }
  }

  public partial class SupAgreementCollectionBulkActions : global::Sungero.Contracts.Client.ContractualDocumentCollectionBulkActions
  {
    private global::System.Collections.Generic.IEnumerable<global::System.Int64> _objIds
    {
      get { return this.EntityIds; }
    }
  }


  public partial class SupAgreementAnyChildEntityActions : global::Sungero.Contracts.Client.ContractualDocumentAnyChildEntityActions
  {
  }

  public partial class SupAgreementAnyChildEntityCollectionActions : global::Sungero.Contracts.Client.ContractualDocumentAnyChildEntityCollectionActions
  {
  }



}
