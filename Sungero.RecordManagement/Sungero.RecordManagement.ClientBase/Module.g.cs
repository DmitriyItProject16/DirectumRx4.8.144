
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static void ShowCurrentPersonalSettings()
    {
      var __typeName = "Sungero.RecordManagement.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCurrentPersonalSettings", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.RecordManagement.Client.ModuleFunctions.ShowCurrentPersonalSettings();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static void ShowActionItemsExecutionReport(global::System.DateTime currentPeriod, global::Sungero.Core.Enumeration performerParam)
    {
      var __typeName = "Sungero.RecordManagement.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowActionItemsExecutionReport", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentPeriod, performerParam});
      }
      else
      {
    global::Sungero.RecordManagement.Client.ModuleFunctions.ShowActionItemsExecutionReport(currentPeriod, performerParam);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static global::Sungero.RecordManagement.Structures.Module.DocumentRegisterReportParametrs ShowDocumentRegisterReportDialog(global::System.String reportName, global::Sungero.Core.Enumeration direction, global::Sungero.Docflow.IDocumentRegister documentRegisterValue, global::System.String helpCode)
    {
      var __typeName = "Sungero.RecordManagement.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowDocumentRegisterReportDialog", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Docflow.IDocumentRegister), typeof(global::System.String)});
        return (global::Sungero.RecordManagement.Structures.Module.DocumentRegisterReportParametrs)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportName, direction, documentRegisterValue, helpCode});
      }
      else
      {
        return global::Sungero.RecordManagement.Client.ModuleFunctions.ShowDocumentRegisterReportDialog(reportName, direction, documentRegisterValue, helpCode);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialogCreationActionItem(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Docflow.IOfficialDocument document, Sungero.Workflow.Client.ExecuteResultActionArgs e)
    {
      var __typeName = "Sungero.RecordManagement.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowConfirmationDialogCreationActionItem", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(Sungero.Workflow.Client.ExecuteResultActionArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, document, e});
      }
      else
      {
        return global::Sungero.RecordManagement.Client.ModuleFunctions.ShowConfirmationDialogCreationActionItem(assignment, document, e);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowAbortSubActionItemsConfirmationDialog(global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> notCompletedExecutionSubTasks)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowAbortSubActionItemsConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment), typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, notCompletedExecutionSubTasks});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowAbortSubActionItemsConfirmationDialog(assignment, notCompletedExecutionSubTasks);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowCompleteParentActionItemConfirmationDialog(global::Sungero.RecordManagement.IActionItemSupervisorAssignment supervisorAssignment, global::Sungero.RecordManagement.IActionItemExecutionAssignment parentAssignment)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCompleteParentActionItemConfirmationDialog", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IActionItemSupervisorAssignment), typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{supervisorAssignment, parentAssignment});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowCompleteParentActionItemConfirmationDialog(supervisorAssignment, parentAssignment);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static global::System.Boolean ShowConfirmationDialog(global::System.String text, global::System.String description, global::System.String title, global::Sungero.RecordManagement.IActionItemExecutionAssignment parentActionItemExecutionAssignment)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowConfirmationDialog", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, description, title, parentActionItemExecutionAssignment});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowConfirmationDialog(text, description, title, parentActionItemExecutionAssignment);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetOutgoingDocumentsReport()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOutgoingDocumentsReport", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetOutgoingDocumentsReport();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetInternalDocumentsReport()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetInternalDocumentsReport", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetInternalDocumentsReport();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetIncomingDocumentsReport()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIncomingDocumentsReport", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetIncomingDocumentsReport();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetIncomingDocumentsProcessingReport()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIncomingDocumentsProcessingReport", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetIncomingDocumentsProcessingReport();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetDocumentReturnReport()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentReturnReport", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetDocumentReturnReport();
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetAcquaintanceReport(global::Sungero.RecordManagement.IAcquaintanceTask task)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAcquaintanceReport", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IAcquaintanceTask)});
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetAcquaintanceReport(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetAcquaintanceFormReport(global::Sungero.RecordManagement.IAcquaintanceTask task)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAcquaintanceFormReport", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IAcquaintanceTask)});
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetAcquaintanceFormReport(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.ClientBase" type="Sungero.RecordManagement.Client.ModuleFunctions" />
    internal static Sungero.Reporting.IReport GetAcquaintanceReport(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAcquaintanceReport", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (Sungero.Reporting.IReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.RecordManagement.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetAcquaintanceReport(document);
      }
    }

    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static global::Sungero.RecordManagement.IRecordManagementSetting GetSettings()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSettings", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.RecordManagement.IRecordManagementSetting)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSettings();
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static global::System.Boolean AllowActionItemsWithIndefiniteDeadline()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AllowActionItemsWithIndefiniteDeadline", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AllowActionItemsWithIndefiniteDeadline();
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static global::System.Boolean AllowAcquaintanceBySubstitute()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AllowAcquaintanceBySubstitute", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AllowAcquaintanceBySubstitute();
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static System.Collections.Generic.IDictionary<global::System.Nullable<global::Sungero.Core.Enumeration>, global::System.Int32> GetExecutionStatePriorities()
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExecutionStatePriorities", global::System.Array.Empty<global::System.Type>());
        return (System.Collections.Generic.IDictionary<global::System.Nullable<global::Sungero.Core.Enumeration>, global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetExecutionStatePriorities();
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToActionItem(global::Sungero.Workflow.ITask parentTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToActionItem", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentTask, actionItem});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToActionItem(parentTask, actionItem);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromDocumentReviewToActionItem(global::Sungero.RecordManagement.IDocumentReviewTask documentReview, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromDocumentReviewToActionItem", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IDocumentReviewTask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentReview, actionItem});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromDocumentReviewToActionItem(documentReview, actionItem);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromActionItemToActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask parentActionItem, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromActionItemToActionItem", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentActionItem, actionItem});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromActionItemToActionItem(parentActionItem, actionItem);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromApprovalToActionItem(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromApprovalToActionItem", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{approvalTask, actionItem});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromApprovalToActionItem(approvalTask, actionItem);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToActionItem(global::Sungero.Docflow.IOfficialDocument primaryDocument, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::System.Collections.Generic.List<global::System.Int64> addedAddendaIds, global::System.Collections.Generic.List<global::System.Int64> removedAddendaIds, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> otherAttachments, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToActionItem", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, actionItem});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToActionItem(primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, actionItem);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToDocumentReview(global::Sungero.Workflow.ITask parentTask, global::Sungero.RecordManagement.IDocumentReviewTask documentReview)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToDocumentReview", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.RecordManagement.IDocumentReviewTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentTask, documentReview});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToDocumentReview(parentTask, documentReview);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromApprovalToDocumentReview(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.RecordManagement.IDocumentReviewTask documentReview)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromApprovalToDocumentReview", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.RecordManagement.IDocumentReviewTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{approvalTask, documentReview});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromApprovalToDocumentReview(approvalTask, documentReview);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromDocumentReviewToDocumentReview(global::Sungero.RecordManagement.IDocumentReviewTask parentDocumentReview, global::Sungero.RecordManagement.IDocumentReviewTask documentReview)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromDocumentReviewToDocumentReview", new global::System.Type[]{typeof(global::Sungero.RecordManagement.IDocumentReviewTask), typeof(global::Sungero.RecordManagement.IDocumentReviewTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentDocumentReview, documentReview});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromDocumentReviewToDocumentReview(parentDocumentReview, documentReview);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToDocumentReview(global::Sungero.Docflow.IOfficialDocument primaryDocument, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::System.Collections.Generic.List<global::System.Int64> addedAddendaIds, global::System.Collections.Generic.List<global::System.Int64> removedAddendaIds, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> otherAttachments, global::Sungero.RecordManagement.IDocumentReviewTask documentReview)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToDocumentReview", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.RecordManagement.IDocumentReviewTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, documentReview});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToDocumentReview(primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, documentReview);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToAcquaintance(global::Sungero.Workflow.ITask parentTask, global::Sungero.RecordManagement.IAcquaintanceTask acquaintanceTask)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToAcquaintance", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.RecordManagement.IAcquaintanceTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentTask, acquaintanceTask});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToAcquaintance(parentTask, acquaintanceTask);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsFromApprovalToAcquaintance(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.RecordManagement.IAcquaintanceTask acquaintanceTask)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsFromApprovalToAcquaintance", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.RecordManagement.IAcquaintanceTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{approvalTask, acquaintanceTask});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsFromApprovalToAcquaintance(approvalTask, acquaintanceTask);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ModuleFunctions" />
    internal static void SynchronizeAttachmentsToAcquaintance(global::Sungero.Docflow.IOfficialDocument primaryDocument, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::System.Collections.Generic.List<global::System.Int64> addedAddendaIds, global::System.Collections.Generic.List<global::System.Int64> removedAddendaIds, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> otherAttachments, global::Sungero.RecordManagement.IAcquaintanceTask acquaintanceTask)
    {
      var __moduleId = new global::System.Guid("4e25caec-c722-4740-bcfd-c4f803840ac6");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagement.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAttachmentsToAcquaintance", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.RecordManagement.IAcquaintanceTask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, acquaintanceTask});
      }
      else
      {
    ((global::Sungero.RecordManagement.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAttachmentsToAcquaintance(primaryDocument, addenda, addedAddendaIds, removedAddendaIds, otherAttachments, acquaintanceTask);
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.Module.LightActionItem> GetActionItemCompletionData(global::System.Nullable<global::System.DateTime> beginDate, global::System.Nullable<global::System.DateTime> endDate, global::Sungero.Company.IEmployee author)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.Module.LightActionItem>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetActionItemCompletionData(global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>,global::Sungero.Company.IEmployee)", beginDate, endDate, author);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Boolean ActionItemCompletionDataIsPresent(global::Sungero.Meetings.IMeeting meeting, global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "ActionItemCompletionDataIsPresent(global::Sungero.Meetings.IMeeting,global::Sungero.Docflow.IOfficialDocument)", meeting, document);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.Workflow.ITask CreateDocumentReview(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Workflow.ITask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateDocumentReview(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IDocumentReviewTask CreateDocumentReviewTask(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.ITask parentTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IDocumentReviewTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateDocumentReviewTask(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Workflow.ITask,global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)", document, parentTask, addressees);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IDocumentReviewTask CreateDocumentReviewTask(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.ITask parentTask)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IDocumentReviewTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateDocumentReviewTask(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Workflow.ITask)", document, parentTask);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 parentAssignmentId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument,global::System.Int64)", document, parentAssignmentId);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecutionWithResolution(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 parentAssignmentId, global::System.String resolution, global::Sungero.Company.IEmployee assignedBy)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateActionItemExecutionWithResolution(global::Sungero.Docflow.IOfficialDocument,global::System.Int64,global::System.String,global::Sungero.Company.IEmployee)", document, parentAssignmentId, resolution, assignedBy);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment parentAssignment)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateActionItemExecution(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Workflow.IAssignment)", document, parentAssignment);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecution()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateActionItemExecution()");
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IAcquaintanceTask CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IAcquaintanceTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateAcquaintanceTask(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IAcquaintanceTask CreateAcquaintanceTaskAsSubTask(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment parentAssignment)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IAcquaintanceTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateAcquaintanceTaskAsSubTask(global::Sungero.Docflow.IOfficialDocument,global::Sungero.Workflow.IAssignment)", document, parentAssignment);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static void AbortSubtasksAndSendNotices(global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "AbortSubtasksAndSendNotices(global::Sungero.RecordManagement.IActionItemExecutionTask)", actionItem);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static void CompleteParentActionItemExecutionAssignmentAsync(global::System.Int64 actionItemId, global::System.Int64 parentAssignmentId, global::System.Nullable<global::System.Int64> parentTaskStartId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CompleteParentActionItemExecutionAssignmentAsync(global::System.Int64,global::System.Int64,global::System.Nullable<global::System.Int64>)", actionItemId, parentAssignmentId, parentTaskStartId);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static void ChangeCompoundActionItemAsync(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Int64 actionItemTaskId, global::System.String onEditGuid)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "ChangeCompoundActionItemAsync(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges,global::System.Int64,global::System.String)", changes, actionItemTaskId, onEditGuid);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetFilteredDocumentKinds(global::Sungero.Core.Enumeration direction)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetFilteredDocumentKinds(global::Sungero.Core.Enumeration)", direction);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.Docflow.IOutgoingDocumentBase GetIncomingLetterById(global::System.Int64 letterId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IOutgoingDocumentBase>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetIncomingLetterById(global::System.Int64)", letterId);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Int32 GetDocumentReviewDefaultDays()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Int32>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetDocumentReviewDefaultDays()");
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetFilteredDocumentRegistersForReport(global::Sungero.Core.Enumeration direction)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetFilteredDocumentRegistersForReport(global::Sungero.Core.Enumeration)", direction);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static void DeleteActionItemExecutionTasks(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "DeleteActionItemExecutionTasks(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)", actionItems);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IAcquaintanceList> GetAcquaintanceLists()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.RecordManagement.IAcquaintanceList>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetAcquaintanceLists()");
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IAcquaintanceList CreateAcquaintanceList()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IAcquaintanceList>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "CreateAcquaintanceList()");
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.RecordManagement.IActionItemExecutionTask GetActionitemById(global::System.Int64 id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.RecordManagement.IActionItemExecutionTask>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetActionitemById(global::System.Int64)", id);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAcquintanceTaskAddendas(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask> tasks)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetAcquintanceTaskAddendas(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask>)", tasks);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAcquintanceTaskAddendas(global::Sungero.RecordManagement.IAcquaintanceTask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetAcquintanceTaskAddendas(global::Sungero.RecordManagement.IAcquaintanceTask)", task);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static void ExecuteApplyActionItemLockIndependentChanges(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Int64 actionItemTaskId, global::System.String onEditGuid)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "ExecuteApplyActionItemLockIndependentChanges(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges,global::System.Int64,global::System.String)", changes, actionItemTaskId, onEditGuid);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::Sungero.Core.StateView GetStateViewForDraftResolution(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> resolutionTasks)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Core.StateView>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "GetStateViewForDraftResolution(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)", resolutionTasks);
      }
      /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ModuleFunctions" />
      internal static global::System.Boolean IsTaskUsingProcessKind(global::Sungero.Workflow.ITask task)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("4e25caec-c722-4740-bcfd-c4f803840ac6"),
          "IsTaskUsingProcessKind(global::Sungero.Workflow.ITask)", task);
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagement.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.RecordManagement.Client.IModuleClientPublicFunctions
  {
    public Sungero.Reporting.IReport GetAcquaintanceFormReport(global::Sungero.RecordManagement.IAcquaintanceTask task)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetAcquaintanceFormReport(task);
    }
    public Sungero.Reporting.IReport GetAcquaintanceReport(global::Sungero.RecordManagement.IAcquaintanceTask task)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetAcquaintanceReport(task);
    }
    public Sungero.Reporting.IReport GetAcquaintanceReport(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.RecordManagement.Functions.Module.GetAcquaintanceReport(document);
    }
    public Sungero.Reporting.IReport GetDocumentReturnReport()
    {
      return global::Sungero.RecordManagement.Functions.Module.GetDocumentReturnReport();
    }
    public Sungero.Reporting.IReport GetIncomingDocumentsProcessingReport()
    {
      return global::Sungero.RecordManagement.Functions.Module.GetIncomingDocumentsProcessingReport();
    }
    public Sungero.Reporting.IReport GetIncomingDocumentsReport()
    {
      return global::Sungero.RecordManagement.Functions.Module.GetIncomingDocumentsReport();
    }
    public Sungero.Reporting.IReport GetInternalDocumentsReport()
    {
      return global::Sungero.RecordManagement.Functions.Module.GetInternalDocumentsReport();
    }
    public Sungero.Reporting.IReport GetOutgoingDocumentsReport()
    {
      return global::Sungero.RecordManagement.Functions.Module.GetOutgoingDocumentsReport();
    }
    public global::System.Boolean ShowAbortSubActionItemsConfirmationDialog(global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> notCompletedExecutionSubTasks)
    {
      return global::Sungero.RecordManagement.Functions.Module.ShowAbortSubActionItemsConfirmationDialog(assignment, notCompletedExecutionSubTasks);
    }
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
      public partial class ActionItemsWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.RecordManagement.Shared.ActionItemsWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.RecordManagement.Shared.ActionItemsWidgetParameters)this.InnerParameters;
          }
        }


        public ActionItemsWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters)
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class ActionItemCompletionGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.RecordManagement.Shared.ActionItemCompletionGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.RecordManagement.Shared.ActionItemCompletionGraphWidgetParameters)this.InnerParameters;
          }
        }


        public ActionItemCompletionGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters)
        {
          this.InnerParameters = parameters;
        }
      }

}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{

  public partial class ForExecutionFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void ForExecutionValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public ForExecutionFolderHandlers(global::Sungero.RecordManagement.FolderFilterState.IForExecutionFilterState filter)
    {
      this.Filter = filter;
    }

  }

  public partial class ActionItemsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void ActionItemsValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public ActionItemsFolderHandlers(global::Sungero.RecordManagement.FolderFilterState.IActionItemsFilterState filter)
    {
      this.Filter = filter;
    }

  }

}

