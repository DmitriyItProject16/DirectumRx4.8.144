
// ==================================================================
// FormalizedPowerOfAttorney.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorney :
    global::Sungero.Docflow.Client.PowerOfAttorneyBase, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("104472db-b71b-42a8-bca5-581a08d1ca7b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFormalizedPowerOfAttorney, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyState State
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FormalizedPowerOfAttorneyState(this);
    }

    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _UnifiedRegistrationNumber;

        public virtual global::System.String UnifiedRegistrationNumber
        {
          get { return this._UnifiedRegistrationNumber.Value; }
          set { this._UnifiedRegistrationNumber.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _FtsListState;

        public virtual global::Sungero.Core.Enumeration? FtsListState
        {
          get { return this._FtsListState.Value; }
          set { this._FtsListState.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?> _RegisteredSignatureId;

        public virtual global::System.Int64? RegisteredSignatureId
        {
          get { return this._RegisteredSignatureId.Value; }
          set { this._RegisteredSignatureId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _FormatVersion;

        public virtual global::Sungero.Core.Enumeration? FormatVersion
        {
          get { return this._FormatVersion.Value; }
          set { this._FormatVersion.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _FtsListStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.FormalizedPowerOfAttorney.FtsListState),
          typeof(global::Sungero.Docflow.Client.FormalizedPowerOfAttorney),
          "FtsListState");

        public static global::Sungero.Domain.Shared.EnumerationItems FtsListStateItems
        {
          get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney._FtsListStateItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems FtsListStateAllowedItems
        {
          get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney.FtsListStateItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _FormatVersionItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.FormalizedPowerOfAttorney.FormatVersion),
          typeof(global::Sungero.Docflow.Client.FormalizedPowerOfAttorney),
          "FormatVersion");

        public static global::Sungero.Domain.Shared.EnumerationItems FormatVersionItems
        {
          get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney._FormatVersionItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems FormatVersionAllowedItems
        {
          get { return global::Sungero.Docflow.Client.FormalizedPowerOfAttorney.FormatVersionItems; }
        }








      protected global::Sungero.Domain.Client.TextProperty _FtsRejectReason;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String FtsRejectReason
      {
        get { return this._FtsRejectReason.Value; }
        set { this._FtsRejectReason.Value = value; }
      }



    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyAnyChildEntityCollectionActions();
    }

    protected override object CreateVersionsActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyVersionsActions();
    }

    protected override object CreateVersionsCollectionActionsHandlers()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyVersionsCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FormalizedPowerOfAttorneyFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FormalizedPowerOfAttorneySharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void UnifiedRegistrationNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.UnifiedRegistrationNumber, this.UnifiedRegistrationNumber, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).UnifiedRegistrationNumberChanged(args);
    }

    protected void FtsListStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.FtsListState, this.FtsListState, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).FtsListStateChanged(args);
    }

    protected void FtsRejectReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.FtsRejectReason, this.FtsRejectReason, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).FtsRejectReasonChanged(args);
    }

    protected void RegisteredSignatureIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.RegisteredSignatureId, this.RegisteredSignatureId, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).RegisteredSignatureIdChanged(args);
    }

    protected void FormatVersionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.FormatVersion, this.FormatVersion, this);
     ((global::Sungero.Docflow.IFormalizedPowerOfAttorneySharedHandlers)this.SharedHandlers).FormatVersionChanged(args);
    }





  protected global::System.String UnifiedRegistrationNumberValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.UnifiedRegistrationNumber, value, this, this.Info.Properties.UnifiedRegistrationNumber);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).UnifiedRegistrationNumberValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? FtsListStateValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.FtsListState, value, this, this.Info.Properties.FtsListState);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).FtsListStateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FtsRejectReasonValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.FtsRejectReason, value, this, this.Info.Properties.FtsRejectReason);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).FtsRejectReasonValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int64? RegisteredSignatureIdValueInputHandler(global::System.Int64? value)
  {
    var args = new global::Sungero.Presentation.LongIntegerValueInputEventArgs(this.RegisteredSignatureId, value, this, this.Info.Properties.RegisteredSignatureId);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).RegisteredSignatureIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? FormatVersionValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.FormatVersion, value, this, this.Info.Properties.FormatVersion);
    ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).FormatVersionValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> FtsListStateFilteringHandler()
  {
    return ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).FtsListStateFiltering(this.FtsListStateAllowedItems);
  }



  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> FormatVersionFilteringHandler()
  {
    return ((global::Sungero.Docflow.FormalizedPowerOfAttorneyClientHandlers)this.Handlers).FormatVersionFiltering(this.FormatVersionAllowedItems);
  }


    #endregion

    #region Constructors

























            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IFormalizedPowerOfAttorneyVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IFormalizedPowerOfAttorneyTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public FormalizedPowerOfAttorney()
    {
            this._UnifiedRegistrationNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("UnifiedRegistrationNumber", this);
            this._UnifiedRegistrationNumber.ValueChanged += (sender, e) => { this.UnifiedRegistrationNumberChangedHandler(); };
            this.AddProperty(this._UnifiedRegistrationNumber);

            this._FtsListState = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("FtsListState", this);
            this._FtsListState.ValueChanged += (sender, e) => { this.FtsListStateChangedHandler(); };
            this.AddProperty(this._FtsListState);

            this._RegisteredSignatureId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?>("RegisteredSignatureId", this);
            this._RegisteredSignatureId.ValueChanged += (sender, e) => { this.RegisteredSignatureIdChangedHandler(); };
            this.AddProperty(this._RegisteredSignatureId);

            this._FormatVersion = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("FormatVersion", this);
            this._FormatVersion.ValueChanged += (sender, e) => { this.FormatVersionChangedHandler(); };
            this.AddProperty(this._FormatVersion);



            this._FtsRejectReason = new global::Sungero.Domain.Client.TextProperty("FtsRejectReason", this);
            this._FtsRejectReason.ValueChanged += (sender, e) => { this.FtsRejectReasonChangedHandler(); };
            this.AddProperty(this._FtsRejectReason);






    }

    #endregion

  }
}

// ==================================================================
// FormalizedPowerOfAttorneyPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyPresenter<T> :
    global::Sungero.Docflow.Client.PowerOfAttorneyBasePresenter<T>
    where T : class, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ImportVersionWithSignatureCommand;

          public global::System.Windows.Input.ICommand ImportVersionWithSignatureCommand
          {
            get
            {
              if (this._ImportVersionWithSignatureCommand == null)
                  this._ImportVersionWithSignatureCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ImportVersionWithSignature", this, this.ImportVersionWithSignature, this.CanImportVersionWithSignature) { IsEmptyParameterAllowed = true };
              return this._ImportVersionWithSignatureCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ShowDuplicatesCommand;

          public global::System.Windows.Input.ICommand ShowDuplicatesCommand
          {
            get
            {
              if (this._ShowDuplicatesCommand == null)
                  this._ShowDuplicatesCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ShowDuplicates", this, this.ShowDuplicates, this.CanShowDuplicates) { IsEmptyParameterAllowed = true };
              return this._ShowDuplicatesCommand;
            }
          }
          private global::System.Windows.Input.ICommand _GenerateBodyWithPdfCommand;

          public global::System.Windows.Input.ICommand GenerateBodyWithPdfCommand
          {
            get
            {
              if (this._GenerateBodyWithPdfCommand == null)
                  this._GenerateBodyWithPdfCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("GenerateBodyWithPdf", this, this.GenerateBodyWithPdf, this.CanGenerateBodyWithPdf) { IsEmptyParameterAllowed = true };
              return this._GenerateBodyWithPdfCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CheckStateWithServiceCommand;

          public global::System.Windows.Input.ICommand CheckStateWithServiceCommand
          {
            get
            {
              if (this._CheckStateWithServiceCommand == null)
                  this._CheckStateWithServiceCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CheckStateWithService", this, this.CheckStateWithService, this.CanCheckStateWithService) { IsEmptyParameterAllowed = true };
              return this._CheckStateWithServiceCommand;
            }
          }
          private global::System.Windows.Input.ICommand _RegisterWithServiceCommand;

          public global::System.Windows.Input.ICommand RegisterWithServiceCommand
          {
            get
            {
              if (this._RegisterWithServiceCommand == null)
                  this._RegisterWithServiceCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("RegisterWithService", this, this.RegisterWithService, this.CanRegisterWithService) { IsEmptyParameterAllowed = true };
              return this._RegisterWithServiceCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateRevocationCommand;

          public global::System.Windows.Input.ICommand CreateRevocationCommand
          {
            get
            {
              if (this._CreateRevocationCommand == null)
                  this._CreateRevocationCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateRevocation", this, this.CreateRevocation, this.CanCreateRevocation) { IsEmptyParameterAllowed = true };
              return this._CreateRevocationCommand;
            }
          }
          private global::System.Windows.Input.ICommand _OpenInFtsRegistryCommand;

          public global::System.Windows.Input.ICommand OpenInFtsRegistryCommand
          {
            get
            {
              if (this._OpenInFtsRegistryCommand == null)
                  this._OpenInFtsRegistryCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("OpenInFtsRegistry", this, this.OpenInFtsRegistry, this.CanOpenInFtsRegistry) { IsEmptyParameterAllowed = true };
              return this._OpenInFtsRegistryCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanImportVersionWithSignature(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanImportVersionWithSignature(args);
              }

              private void ImportVersionWithSignature(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ImportVersionWithSignature);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).ImportVersionWithSignature(args);
              }
              private bool CanShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanShowDuplicates(args);
              }

              private void ShowDuplicates(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ShowDuplicates);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).ShowDuplicates(args);
              }
              private bool CanGenerateBodyWithPdf(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanGenerateBodyWithPdf(args);
              }

              private void GenerateBodyWithPdf(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.GenerateBodyWithPdf);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).GenerateBodyWithPdf(args);
              }
              private bool CanCheckStateWithService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanCheckStateWithService(args);
              }

              private void CheckStateWithService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CheckStateWithService);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CheckStateWithService(args);
              }
              private bool CanRegisterWithService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanRegisterWithService(args);
              }

              private void RegisterWithService(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.RegisterWithService);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).RegisterWithService(args);
              }
              private bool CanCreateRevocation(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanCreateRevocation(args);
              }

              private void CreateRevocation(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateRevocation);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CreateRevocation(args);
              }
              private bool CanOpenInFtsRegistry(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).CanOpenInFtsRegistry(args);
              }

              private void OpenInFtsRegistry(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.OpenInFtsRegistry);
                ((Sungero.Docflow.Client.FormalizedPowerOfAttorneyActions)(entity as Sungero.Docflow.Client.FormalizedPowerOfAttorney).ActionsHandlers).OpenInFtsRegistry(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ICaseFile>(() => this.Entity, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._TopicCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ITopic>(() => this.Entity.Id, typeof(T), "Topic");

              this._SubtopicCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ITopic>(() => this.Entity, typeof(T), "Subtopic");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._OurSigningReasonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ISignatureSetting>(() => this.Entity, typeof(T), "OurSigningReason");

              this._IssuedToPartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Parties.ICounterparty>(() => this.Entity, typeof(T), "IssuedToParty");

              this._RepresentativeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.IPerson>(() => this.Entity.Id, typeof(T), "Representative");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._IssuedToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "IssuedTo");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IFormalizedPowerOfAttorneyTracking), "ReturnTask");



    }

    public FormalizedPowerOfAttorneyPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// FormalizedPowerOfAttorneyCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.PowerOfAttorneyBaseCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IFormalizedPowerOfAttorney
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public FormalizedPowerOfAttorneyCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public FormalizedPowerOfAttorneyCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public FormalizedPowerOfAttorneyCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public FormalizedPowerOfAttorneyCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// FormalizedPowerOfAttorneyRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class FormalizedPowerOfAttorneyRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.PowerOfAttorneyBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IFormalizedPowerOfAttorneyRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFormalizedPowerOfAttorney
    {
       public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo Info
       {
          get { return (global::Sungero.Docflow.IFormalizedPowerOfAttorneyInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.FormalizedPowerOfAttorneyTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FormalizedPowerOfAttorneyAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class FormalizedPowerOfAttorneyAccessRights : 
    Sungero.Docflow.Client.PowerOfAttorneyBaseAccessRights, Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights
  {

    public FormalizedPowerOfAttorneyAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FormalizedPowerOfAttorneyTypeAccessRights : 
    Sungero.Docflow.Client.PowerOfAttorneyBaseTypeAccessRights, Sungero.Docflow.IFormalizedPowerOfAttorneyAccessRights
  {

    public FormalizedPowerOfAttorneyTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
