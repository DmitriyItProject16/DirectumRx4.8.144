
// ==================================================================
// DocumentReviewTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class DocumentReviewTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.RecordManagement.IDocumentReviewTask
    {
      protected new global::Sungero.RecordManagement.IDocumentReviewTaskFilterState Filter { get; private set; }

      private global::Sungero.RecordManagement.IDocumentReviewTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public DocumentReviewTaskFilter(global::Sungero.RecordManagement.IDocumentReviewTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected DocumentReviewTaskFilter()
      {
      }
    }
    public class DocumentReviewTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new DocumentReviewTaskObserversModel Observers { get { return (DocumentReviewTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public DocumentReviewTaskResolutionObserversModel ResolutionObservers { get; protected set; }
                   public DocumentReviewTaskAddresseesModel Addressees { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public DocumentReviewTaskAddedAddendaModel AddedAddenda { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public DocumentReviewTaskRemovedAddendaModel RemovedAddenda { get; protected set; }

        }

      public class DocumentReviewTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class DocumentReviewTaskResolutionObserversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class DocumentReviewTaskAddresseesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }

         }
      public class DocumentReviewTaskAddedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class DocumentReviewTaskRemovedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class DocumentReviewTaskFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IDocumentReviewTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddresseePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AddresseeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.DocumentReviewTaskAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentReviewTaskFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DocumentReviewTaskSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddresseeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.DocumentReviewTaskAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentReviewTaskSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.RecordManagement.Server.DocumentReviewTaskFilter<global::Sungero.RecordManagement.IDocumentReviewTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.DocumentReviewTaskFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IDocumentReviewTask>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.DocumentReviewTaskSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]


  public class DocumentReviewTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.RecordManagement.IDocumentReviewTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4ef03457-8b42-4239-a3c5-d4d05e61f0b6");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.DocumentReviewTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IDocumentReviewTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.RecordManagement.IDocumentReviewTaskState State
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskState(this);
    }

    public new virtual global::Sungero.RecordManagement.IDocumentReviewTaskInfo Info
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.RecordManagement.IDocumentReviewTaskAccessRights AccessRights
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Server.DocumentReviewTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewTaskSharedHandlers(this);
    }

    private global::System.DateTime? _Deadline;
    public virtual global::System.DateTime? Deadline
    {
      get
      {
        return this._Deadline;
      }

      set
      {
        this.SetPropertyValue("Deadline", this._Deadline, value, (propertyValue) => { this._Deadline = propertyValue; }, this.DeadlineChangedHandler);
      }
    }
    private global::System.Boolean? _NeedDeleteActionItems;
    public virtual global::System.Boolean? NeedDeleteActionItems
    {
      get
      {
        return this._NeedDeleteActionItems;
      }

      set
      {
        this.SetPropertyValue("NeedDeleteActionItems", this._NeedDeleteActionItems, value, (propertyValue) => { this._NeedDeleteActionItems = propertyValue; }, this.NeedDeleteActionItemsChangedHandler);
      }
    }



    private global::System.String _ResolutionText;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ResolutionText
    {
      get
      {
        return this._ResolutionText;
      }

      set
      {
        this.SetPropertyValue("ResolutionText", this._ResolutionText, value, (propertyValue) => { this._ResolutionText = propertyValue; }, this.ResolutionTextChangedHandler);
      }
    }





    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers> _ResolutionObservers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers> ResolutionObservers
    {
      get
      {
        if (this._ResolutionObservers == null)
        {
          this._ResolutionObservers = this.CreateResolutionObserversCollection();
          this.SetResolutionObserversEventHandlers();
        }
        return this._ResolutionObservers;
      }

      set
      {
        if (this._ResolutionObservers != null)
          this.UnsetChildCollectionEventHandlers(this._ResolutionObservers);

        this._ResolutionObservers = value;
        this.SetResolutionObserversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers> CreateResolutionObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskResolutionObservers>() { RootEntity = this };
    }

    private void SetResolutionObserversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ResolutionObservers, "ResolutionObservers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ResolutionObservers;
      changeNotifier.Added += this.ResolutionObserversAddedHandler;
      changeNotifier.Deleted += this.ResolutionObserversDeletedHandler;
      changeNotifier.Added += this.ResolutionObserversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ResolutionObserversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ResolutionObserversCollectionUpdateEventHandler;
    }

    private void ResolutionObserversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ResolutionObservers"))
        this.ResolutionObserversChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddressees> _Addressees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddressees> Addressees
    {
      get
      {
        if (this._Addressees == null)
        {
          this._Addressees = this.CreateAddresseesCollection();
          this.SetAddresseesEventHandlers();
        }
        return this._Addressees;
      }

      set
      {
        if (this._Addressees != null)
          this.UnsetChildCollectionEventHandlers(this._Addressees);

        this._Addressees = value;
        this.SetAddresseesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddressees> CreateAddresseesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddressees>() { RootEntity = this };
    }

    private void SetAddresseesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Addressees, "Addressees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Addressees;
      changeNotifier.Added += this.AddresseesAddedHandler;
      changeNotifier.Deleted += this.AddresseesDeletedHandler;
      changeNotifier.Added += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddresseesCollectionUpdateEventHandler;
    }

    private void AddresseesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Addressees"))
        this.AddresseesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddedAddenda> _AddedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddedAddenda> AddedAddenda
    {
      get
      {
        if (this._AddedAddenda == null)
        {
          this._AddedAddenda = this.CreateAddedAddendaCollection();
          this.SetAddedAddendaEventHandlers();
        }
        return this._AddedAddenda;
      }

      set
      {
        if (this._AddedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._AddedAddenda);

        this._AddedAddenda = value;
        this.SetAddedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddedAddenda> CreateAddedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskAddedAddenda>() { RootEntity = this };
    }

    private void SetAddedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddedAddenda, "AddedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddedAddenda;
      changeNotifier.Added += this.AddedAddendaAddedHandler;
      changeNotifier.Deleted += this.AddedAddendaDeletedHandler;
      changeNotifier.Added += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddedAddendaCollectionUpdateEventHandler;
    }

    private void AddedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddedAddenda"))
        this.AddedAddendaChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskRemovedAddenda> _RemovedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskRemovedAddenda> RemovedAddenda
    {
      get
      {
        if (this._RemovedAddenda == null)
        {
          this._RemovedAddenda = this.CreateRemovedAddendaCollection();
          this.SetRemovedAddendaEventHandlers();
        }
        return this._RemovedAddenda;
      }

      set
      {
        if (this._RemovedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._RemovedAddenda);

        this._RemovedAddenda = value;
        this.SetRemovedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskRemovedAddenda> CreateRemovedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskRemovedAddenda>() { RootEntity = this };
    }

    private void SetRemovedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._RemovedAddenda, "RemovedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._RemovedAddenda;
      changeNotifier.Added += this.RemovedAddendaAddedHandler;
      changeNotifier.Deleted += this.RemovedAddendaDeletedHandler;
      changeNotifier.Added += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RemovedAddendaCollectionUpdateEventHandler;
    }

    private void RemovedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("RemovedAddenda"))
        this.RemovedAddendaChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IDocumentReviewTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.RecordManagement.DocumentReviewTaskCreatingFromServerHandler", new object[] { (global::Sungero.RecordManagement.IDocumentReviewTask)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.RecordManagement.DocumentReviewTaskCreatingFromServerHandler((global::Sungero.RecordManagement.IDocumentReviewTask)entitySource, this.Info);
    }

    #region Framework events

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.DocumentReviewTaskAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void DeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Deadline, this.Deadline, this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).DeadlineChanged(args);
    }

    protected void ResolutionTextChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ResolutionText, this.ResolutionText, this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).ResolutionTextChanged(args);
    }

    protected void ResolutionObserversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).ResolutionObserversChanged(args);
    }

    protected void NeedDeleteActionItemsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedDeleteActionItems, this.NeedDeleteActionItems, this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).NeedDeleteActionItemsChanged(args);
    }

    protected void AddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddresseesChanged(args);
    }

    protected void AddedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddedAddendaChanged(args);
    }

    protected void RemovedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).RemovedAddendaChanged(args);
    }




    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers CreateResolutionObserversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers CreateResolutionObserversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ResolutionObserversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ResolutionObserversAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateResolutionObserversAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ResolutionObserversAdded(args);
        }
      }
    }

    protected virtual void ResolutionObserversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskResolutionObserversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ResolutionObserversDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateResolutionObserversDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ResolutionObserversDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers CreateAddresseesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers CreateAddresseesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddresseesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddresseesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddresseesAdded(args);
        }
      }
    }

    protected virtual void AddresseesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddresseesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddresseesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddedAddendaAdded(args);
        }
      }
    }

    protected virtual void AddedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddedAddendaDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RemovedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RemovedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RemovedAddendaAdded(args);
        }
      }
    }

    protected virtual void RemovedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.DocumentReviewTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RemovedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RemovedAddendaDeleted(args);
        }
      }
    }


    #endregion


    public DocumentReviewTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IDocumentReviewTaskDocumentForReviewGroupAttachments DocumentForReviewGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskDocumentForReviewGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewTaskResolutionGroupAttachments ResolutionGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewTaskResolutionGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).DocumentForReviewGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).ResolutionGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).DocumentForReviewGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).ResolutionGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).DocumentForReviewGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewTaskSharedHandlers)this.SharedHandlers).ResolutionGroupDeleted(e);
        return;
      }

    }
    #endregion

    #region Workflow blocks

    public new virtual global::Sungero.RecordManagement.IDocumentReviewTaskBlocksInfo Blocks
    {
      get
      {
        return new global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocksInfo(this);
      }
    }

    #endregion

  }
}

// ==================================================================
// DocumentReviewTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class DocumentReviewTaskAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public DocumentReviewTaskAddresseePropertyFilteringServerHandler(global::Sungero.RecordManagement.IDocumentReviewTask entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentReviewTaskAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DocumentReviewTaskAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class DocumentReviewTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.RecordManagement.IDocumentReviewTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.RecordManagement.IDocumentReviewTaskFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.IDocumentReviewTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public DocumentReviewTaskFilteringServerHandler(global::Sungero.RecordManagement.IDocumentReviewTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected DocumentReviewTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class DocumentReviewTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.RecordManagement.Server.DocumentReviewTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.RecordManagement.Server.DocumentReviewTaskSearchDialogModel)this.Dialog;
       }
     }

     public DocumentReviewTaskSearchDialogServerHandler(global::Sungero.RecordManagement.Server.DocumentReviewTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class DocumentReviewTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Entity; }
    }

    public DocumentReviewTaskServerHandlers(global::Sungero.RecordManagement.IDocumentReviewTask entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentReviewTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.RecordManagement.IDocumentReviewTask _source
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Source; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTaskInfo _info
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTaskInfo)this._Info; }
    }

    public DocumentReviewTaskCreatingFromServerHandler(global::Sungero.RecordManagement.IDocumentReviewTask source, global::Sungero.RecordManagement.IDocumentReviewTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// DocumentReviewTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// DocumentReviewTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class DocumentReviewTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.RecordManagement.IDocumentReviewTaskAccessRights
  {

    public DocumentReviewTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentReviewTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.RecordManagement.IDocumentReviewTaskAccessRights
  {

    public DocumentReviewTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DocumentReviewTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class DocumentReviewTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IDocumentReviewTaskRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IDocumentReviewTask 
    {
       public new global::Sungero.RecordManagement.IDocumentReviewTaskAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IDocumentReviewTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IDocumentReviewTaskInfo Info
       {
          get { return (global::Sungero.RecordManagement.IDocumentReviewTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Server.DocumentReviewTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentReviewTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// DocumentReviewTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Server
{
  public partial class DocumentReviewTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Entity; }
    }

    public DocumentReviewTaskFunctions(global::Sungero.RecordManagement.IDocumentReviewTask entity) : base(entity) { }
  }
}

// ==================================================================
// DocumentReviewTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class DocumentReviewTask
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean CurrentUserIsPerformerOrSubstitute(global::Sungero.CoreEntities.IUser performer)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("CurrentUserIsPerformerOrSubstitute",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { performer });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.CurrentUserIsPerformerOrSubstitute(performer);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetStateViewXml(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateViewXml", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetDocumentReviewStateView(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Nullable<global::System.Boolean> addActionItemExecutionBlocks)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentReviewStateView", new System.Type[] { typeof(global::System.Nullable<global::System.Boolean>) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addActionItemExecutionBlocks });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void AddReviewReworkBlock(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, Sungero.Core.StateBlock parentBlock, global::Sungero.Workflow.IAssignment reworkAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddReviewReworkBlock", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentBlock, reworkAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetLastAssignmentResult(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLastAssignmentResult",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.GetLastAssignmentResult(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::Sungero.Workflow.IAssignment GetLastAssignmentSentForRework(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLastAssignmentSentForRework",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::Sungero.Workflow.IAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.GetLastAssignmentSentForRework(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightForAttachmentsToAssignees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> assignees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightForAttachmentsToAssignees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignees });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsForMainDocumentAndAddendaToAssignees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> assignees, global::System.Boolean getAddendaFromAssignment, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsForMainDocumentAndAddendaToAssignees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(global::System.Boolean), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignees, getAddendaFromAssignment, addenda });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsForDraftResolutionToAssignees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> assignees, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsForDraftResolutionToAssignees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignees, actionItems });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsOnDocumentForReview(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.CoreEntities.IRecipient assignee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsOnDocumentForReview", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsOnAddendaGroup(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.CoreEntities.IRecipient assignee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsOnAddendaGroup", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsOnAddendaGroup(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.CoreEntities.IRecipient assignee, global::System.Boolean getAddendaFromAssignment, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsOnAddendaGroup", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Boolean), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee, getAddendaFromAssignment, addenda });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsOnAddendum(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Domain.Shared.IEntity entity, global::Sungero.CoreEntities.IRecipient recipient, global::Sungero.CoreEntities.IRecipient taskAuthor, global::System.Guid accessRightsType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsOnAddendum", new System.Type[] { typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Guid) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { entity, recipient, taskAuthor, accessRightsType });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void GrantRightsOnTaskForSecretary(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantRightsOnTaskForSecretary", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAdditionalAssignees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void UpdateReviewTaskAfterForward(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Company.IEmployee newAddressee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateReviewTaskAfterForward", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { newAddressee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::Sungero.CoreEntities.IUser GetClerkToSendActionItem(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetClerkToSendActionItem", new System.Type[] {  });
      return (global::Sungero.CoreEntities.IUser)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void StartActionItemsForDraftResolution(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Workflow.IAssignment parentAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("StartActionItemsForDraftResolution", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetChildActionItemsForDraftResolution(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Workflow.IAssignment parentAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetChildActionItemsForDraftResolution", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void AbortDocumentReviewSubTasks(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortDocumentReviewSubTasks", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask> GetCompletedDocumentReviewSubTasks(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCompletedDocumentReviewSubTasks", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetDocumentExecutionState(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentExecutionState", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CanAuthorPrepareResolution(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanAuthorPrepareResolution", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean CanAuthorPrepareResolution(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanAuthorPrepareResolution", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CanAuthorPrepareResolutionForAddressees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanAuthorPrepareResolutionForAddressees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void RelateAddedAddendaToPrimaryDocument(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RelateAddedAddendaToPrimaryDocument", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void ExecuteParentApprovalTaskMonitorings(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ExecuteParentApprovalTaskMonitorings", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void ExecuteParentDocumentReviewTaskMonitorings(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ExecuteParentDocumentReviewTaskMonitorings", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean AllDocumentReviewSubTasksAreCompleted(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AllDocumentReviewSubTasksAreCompleted", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Guid GetCreationContextAttachmentRights(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCreationContextAttachmentRights", new System.Type[] {  });
      return (global::System.Guid)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  void DeleteDraftActionItems(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeleteDraftActionItems", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("GetAddresseesCountExpressionName", "GetAddresseesCountExpressionDescription")]
    internal static  global::System.Int32 GetAddresseesCount(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAddresseesCount",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.GetAddresseesCount(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ReviewWithDraftResolutionExpressionName", "ReviewWithDraftResolutionExpressionDescription")]
    internal static  global::System.Boolean ReviewWithDraftResolution(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("ReviewWithDraftResolution",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.ReviewWithDraftResolution(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("HasDraftResolutionBeenPreparedExpressionName", "HasDraftResolutionBeenPreparedExpressionDescription")]
    internal static  global::System.Boolean DraftResolutionExists(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DraftResolutionExists",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.DraftResolutionExists(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean CouldAuthorPrepareDraftResolutionByNow(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CouldAuthorPrepareDraftResolutionByNow", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("GetDefaultDeadlineExpressionName", "GetDefaultDeadlineExpressionDescription", "", "GetDefaultDeadlineAddressee")]
    internal static  global::System.Nullable<global::System.DateTime> GetDefaultDeadline(global::Sungero.RecordManagement.IDocumentReviewTask task, global::Sungero.Company.IEmployee addressee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDefaultDeadline",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask), typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, addressee });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.GetDefaultDeadline(task, addressee);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("GetActionItemClerkExpressionName", "GetActionItemClerkExpressionDescription")]
    internal static  global::Sungero.CoreEntities.IUser GetActionItemClerk(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemClerk",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::Sungero.CoreEntities.IUser)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.GetActionItemClerk(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.DocumentReviewTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("AreTasksCreatedForAllAddresseesExpressionName", "AreTasksCreatedForAllAddresseesExpressionDescription")]
    internal static  global::System.Boolean AreAllTasksCreated(global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AreAllTasksCreated",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IDocumentReviewTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.DocumentReviewTaskFunctions.AreAllTasksCreated(task);
      }
    }

    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean ValidateDocumentReviewTaskStart(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateDocumentReviewTaskStart", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.DocumentReviewTask.StartValidationMessage> GetStartValidationMessages(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStartValidationMessages", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.Structures.DocumentReviewTask.StartValidationMessage>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean IncomingDocumentRegistered(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IncomingDocumentRegistered",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions.IncomingDocumentRegistered(document);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean IsDocumentReviewTaskCompleted(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsDocumentReviewTaskCompleted", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetDraftOverdueActionItemExecutionTasks(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDraftOverdueActionItemExecutionTasks", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean SchemeVersionSupportsRework(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("SchemeVersionSupportsRework",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions.SchemeVersionSupportsRework(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SynchronizeAddressees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddressees", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SetAddressees(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetAddressees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SetDeadline(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Nullable<global::System.Int32> days, global::System.Nullable<global::System.Int32> hours)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDeadline", new System.Type[] { typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Nullable<global::System.Int32>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { days, hours });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Boolean HasDocumentAndCanRead(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasDocumentAndCanRead", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void FillDraftResolutionProperties(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Docflow.IOfficialDocument primaryDocument, global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> addenda, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> otherAttachments, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillDraftResolutionProperties", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { primaryDocument, addenda, otherAttachments, actionItem });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SynchronizeAddendaAndAttachmentsGroup(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddendaAndAttachmentsGroup", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SynchronizeAddendaToDraftResolution(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddendaToDraftResolution", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void SynchronizeDocumentReviewAddendaToActionItem(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeDocumentReviewAddendaToActionItem", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItem });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddendaGroupAttachments(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddendaGroupAttachments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetAddedAddenda(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetRemovedAddenda(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void AddedAddendaRemove(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void RemovedAddendaRemove(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.DocumentReviewTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentReviewTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }

  }
}

// ==================================================================
// DocumentReviewTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class DocumentReviewTaskServerPublicFunctions : global::Sungero.RecordManagement.Server.IDocumentReviewTaskServerPublicFunctions
  {
    public global::Sungero.Core.StateView GetDocumentReviewStateView(global::Sungero.RecordManagement.IDocumentReviewTask documentReviewTask, global::System.Nullable<global::System.Boolean> addActionItemExecutionBlocks)
    {
      return global::Sungero.RecordManagement.Functions.DocumentReviewTask.GetDocumentReviewStateView(documentReviewTask, addActionItemExecutionBlocks);
    }
  }
}

// ==================================================================
// DocumentReviewTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class DocumentReviewTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.DocumentReviewTask.DocumentReviewTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// DocumentReviewTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class DocumentReviewTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<DocumentReviewTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public DocumentReviewTaskArguments(DocumentReviewTaskBlock block) : base(block) { }
  }

  public class DocumentReviewTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<DocumentReviewTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.RecordManagement.IDocumentReviewTask> 
  {
    public DocumentReviewTaskEndBlockEventArguments(DocumentReviewTaskBlock block) : base(block) { }
  }

  public partial class DocumentReviewTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.DateTime? Deadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("Deadline"); }
      set { this.SetCustomProperty("Deadline", value); }
    }
    public virtual global::System.Boolean? NeedDeleteActionItems
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("NeedDeleteActionItems"); }
      set { this.SetCustomProperty("NeedDeleteActionItems", value); }
    }

    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskResolutionObserversWrapper> _ResolutionObservers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskResolutionObserversWrapper> GetDocumentReviewTaskResolutionObserversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.DocumentReviewTaskResolutionObserversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskResolutionObserversWrapper> ResolutionObservers
    {
      get 
      {
        if(this._ResolutionObservers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("ResolutionObservers"); 
          this._ResolutionObservers = this.GetDocumentReviewTaskResolutionObserversCollectionWrapper(items);
        }

        return this._ResolutionObservers;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddresseesWrapper> _Addressees;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddresseesWrapper> GetDocumentReviewTaskAddresseesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.DocumentReviewTaskAddresseesCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddresseesWrapper> Addressees
    {
      get 
      {
        if(this._Addressees == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("Addressees"); 
          this._Addressees = this.GetDocumentReviewTaskAddresseesCollectionWrapper(items);
        }

        return this._Addressees;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddedAddendaWrapper> _AddedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddedAddendaWrapper> GetDocumentReviewTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.DocumentReviewTaskAddedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskAddedAddendaWrapper> AddedAddenda
    {
      get 
      {
        if(this._AddedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddedAddenda"); 
          this._AddedAddenda = this.GetDocumentReviewTaskAddedAddendaCollectionWrapper(items);
        }

        return this._AddedAddenda;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskRemovedAddendaWrapper> _RemovedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskRemovedAddendaWrapper> GetDocumentReviewTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.DocumentReviewTaskRemovedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.DocumentReviewTaskRemovedAddendaWrapper> RemovedAddenda
    {
      get 
      {
        if(this._RemovedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("RemovedAddenda"); 
          this._RemovedAddenda = this.GetDocumentReviewTaskRemovedAddendaCollectionWrapper(items);
        }

        return this._RemovedAddenda;
      }
    }



    public DocumentReviewTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// DocumentReviewTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class DocumentReviewTaskResolutionObserversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<DocumentReviewTaskResolutionObserversWrapper>
  {
    protected override DocumentReviewTaskResolutionObserversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new DocumentReviewTaskResolutionObserversWrapper(value);
    }

    public DocumentReviewTaskResolutionObserversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class DocumentReviewTaskResolutionObserversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Observer
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Observer"); }
      set { this.SetCustomNavigationProperty("Observer", value); }
    }

    public DocumentReviewTaskResolutionObserversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class DocumentReviewTaskAddresseesCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<DocumentReviewTaskAddresseesWrapper>
  {
    protected override DocumentReviewTaskAddresseesWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new DocumentReviewTaskAddresseesWrapper(value);
    }

    public DocumentReviewTaskAddresseesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class DocumentReviewTaskAddresseesWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Boolean? TaskCreated
        {
          get { return this.GetCustomProperty<global::System.Boolean?>("TaskCreated"); }
          set { this.SetCustomProperty("TaskCreated", value); }
        }


    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }

    public DocumentReviewTaskAddresseesWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class DocumentReviewTaskAddedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<DocumentReviewTaskAddedAddendaWrapper>
  {
    protected override DocumentReviewTaskAddedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new DocumentReviewTaskAddedAddendaWrapper(value);
    }

    public DocumentReviewTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class DocumentReviewTaskAddedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public DocumentReviewTaskAddedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class DocumentReviewTaskRemovedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<DocumentReviewTaskRemovedAddendaWrapper>
  {
    protected override DocumentReviewTaskRemovedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new DocumentReviewTaskRemovedAddendaWrapper(value);
    }

    public DocumentReviewTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class DocumentReviewTaskRemovedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public DocumentReviewTaskRemovedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}

// ==================================================================
// DocumentReviewTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class DocumentReviewTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public DocumentReviewTaskRouteHandlers(global::Sungero.RecordManagement.IDocumentReviewTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Необходимо использовать LayerSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
      public static readonly int V3 = 3;
      public static readonly int V4 = 4;
      public static readonly int V5 = 5;
}

    }
}

// ==================================================================
// DocumentReviewTaskBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server.DocumentReviewTaskBlocks
{
  public partial class PrepareDraftResolutionBlock :  global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> {
    /// <summary>
    /// Назначить права по умолчанию.
    /// </summary>
    public  virtual  global::System.Boolean? GrantRightsByDefault
    {
      get
      {
        return this.GetCustomProperty<global::System.Boolean?>("GrantRightsByDefault");
      }
      set
      {
        this.SetCustomProperty("GrantRightsByDefault", value);
      }
    }

    public PrepareDraftResolutionBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }

  public partial class PrepareDraftResolutionBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.PrepareDraftResolutionBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.PrepareDraftResolutionBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public PrepareDraftResolutionBlockHandlers(global::Sungero.Workflow.AssignmentBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new PrepareDraftResolutionBlock(block);
      this.Task = task;
    }
  }
  public partial class ProcessResolutionBlock :  global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> {
    /// <summary>
    /// Назначить права по умолчанию.
    /// </summary>
    public  virtual  global::System.Boolean? GrantRightsByDefault
    {
      get
      {
        return this.GetCustomProperty<global::System.Boolean?>("GrantRightsByDefault");
      }
      set
      {
        this.SetCustomProperty("GrantRightsByDefault", value);
      }
    }

    public ProcessResolutionBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }

  public partial class ProcessResolutionBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.ProcessResolutionBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.ProcessResolutionBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public ProcessResolutionBlockHandlers(global::Sungero.Workflow.AssignmentBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new ProcessResolutionBlock(block);
      this.Task = task;
    }
  }
  public partial class ReviewReworkBlock :  global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> {
    /// <summary>
    /// Назначить права по умолчанию.
    /// </summary>
    public  virtual  global::System.Boolean? GrantRightsByDefault
    {
      get
      {
        return this.GetCustomProperty<global::System.Boolean?>("GrantRightsByDefault");
      }
      set
      {
        this.SetCustomProperty("GrantRightsByDefault", value);
      }
    }

    public ReviewReworkBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }

  public partial class ReviewReworkBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.ReviewReworkBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.ReviewReworkBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public ReviewReworkBlockHandlers(global::Sungero.Workflow.AssignmentBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new ReviewReworkBlock(block);
      this.Task = task;
    }
  }
  public partial class SendReviewToAddresseeBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public SendReviewToAddresseeBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class SendReviewToAddresseeBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SendReviewToAddresseeBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SendReviewToAddresseeBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public SendReviewToAddresseeBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new SendReviewToAddresseeBlock(block);
      this.Task = task;
    }
  }
  public partial class DeleteObsoleteDraftResolutionsBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    /// <summary>
    /// Кроме подготовленного от имени адресата.
    /// </summary>
    public  virtual  global::System.Collections.Generic.IEnumerable<global::Sungero.Company.IEmployee> ActualFromAddressees
    {
      get { return this.GetCustomNavigationPropertyCollection<global::Sungero.Company.IEmployee>("ActualFromAddressees"); }
      set { this.SetCustomNavigationPropertyCollection("ActualFromAddressees", value); }
    }

    public DeleteObsoleteDraftResolutionsBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class DeleteObsoleteDraftResolutionsBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.DeleteObsoleteDraftResolutionsBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.DeleteObsoleteDraftResolutionsBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public DeleteObsoleteDraftResolutionsBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new DeleteObsoleteDraftResolutionsBlock(block);
      this.Task = task;
    }
  }
  public partial class WaitForAddresseesReviewBlock :  global::Sungero.Workflow.Blocks.MonitoringBlockWrapper {
    public WaitForAddresseesReviewBlock(global::Sungero.Workflow.MonitoringBlock block) : base(block) { }
  }

  public partial class WaitForAddresseesReviewBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.MonitoringBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.WaitForAddresseesReviewBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.WaitForAddresseesReviewBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public WaitForAddresseesReviewBlockHandlers(global::Sungero.Workflow.MonitoringBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new WaitForAddresseesReviewBlock(block);
      this.Task = task;
    }
  }
  public partial class SetNewAddresseeBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    /// <summary>
    /// Адресат.
    /// </summary>
    public  virtual  global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee");
      }
      set
      {
        this.SetCustomNavigationProperty("Addressee", value);
      }
    }
    /// <summary>
    /// Удалить поручения, кроме выданных от имени.
    /// </summary>
    public  virtual  global::Sungero.Company.IEmployee ActualFromAddressees
    {
      get
      {
        return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("ActualFromAddressees");
      }
      set
      {
        this.SetCustomNavigationProperty("ActualFromAddressees", value);
      }
    }

    public SetNewAddresseeBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class SetNewAddresseeBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SetNewAddresseeBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SetNewAddresseeBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public SetNewAddresseeBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new SetNewAddresseeBlock(block);
      this.Task = task;
    }
  }
  public partial class GrantAccessRightsToDocumentsBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public GrantAccessRightsToDocumentsBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class GrantAccessRightsToDocumentsBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.GrantAccessRightsToDocumentsBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.GrantAccessRightsToDocumentsBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }


    public GrantAccessRightsToDocumentsBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new GrantAccessRightsToDocumentsBlock(block);
      this.Task = task;
    }
  }
  public partial class SendReviewTasksToAddresseesBlock :  global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> {
    public SendReviewTasksToAddresseesBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }

  public partial class SendReviewTasksToAddresseesBlockHandlers 
  {
    protected abstract  class Importance  : global::Sungero.Workflow.Enums.TaskBlock.Importance
    {
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SendReviewTasksToAddresseesBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.DocumentReviewTaskBlocks.SendReviewTasksToAddresseesBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IDocumentReviewTask _obj
    {
      get { return (global::Sungero.RecordManagement.IDocumentReviewTask)this.Task; }
    }

    public virtual void SendReviewTasksToAddresseesBlockStart()
    {
    }



    public virtual void SendReviewTasksToAddresseesBlockEnd(System.Collections.Generic.IEnumerable<Sungero.RecordManagement.IDocumentReviewTask> createdTasks)
    {
    }



    public SendReviewTasksToAddresseesBlockHandlers(global::Sungero.Workflow.TaskBlock block, global::Sungero.RecordManagement.IDocumentReviewTask task)
    {
      this.Block = new SendReviewTasksToAddresseesBlock(block);
      this.Task = task;
    }
  }
}

// ==================================================================
// DocumentReviewTaskBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class DocumentReviewTaskBlocksInfo : global::Sungero.RecordManagement.IDocumentReviewTaskBlocksInfo
  {
    private readonly Sungero.Workflow.ITask task;

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block23
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "23");
        }
      }


    public void ExecuteAllMonitoringBlocks()
    {
      new global::Sungero.Workflow.Server.TaskBlocksInfo(this.task).ExecuteAllMonitoringBlocks();
    }

    public DocumentReviewTaskBlocksInfo(Sungero.Workflow.ITask task)
    {
      this.task = task;
    }
  }

}
