
// ==================================================================
// MessageQueueItem.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class MessageQueueItemFilter<T> :
      global::Sungero.ExchangeCore.Server.QueueItemBaseFilter<T>
      where T : class, global::Sungero.ExchangeCore.IMessageQueueItem
    {
      private global::Sungero.ExchangeCore.IMessageQueueItemFilterState filter
      {
        get
        {
          return (Sungero.ExchangeCore.IMessageQueueItemFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public MessageQueueItemFilter(global::Sungero.ExchangeCore.IMessageQueueItemFilterState filter)
      : base(filter)
      {
      }

      protected MessageQueueItemFilter()
      {
      }
    }
      public class MessageQueueItemUiFilter<T> :
        global::Sungero.ExchangeCore.Server.QueueItemBaseUiFilter<T>
        where T : class, global::Sungero.ExchangeCore.IMessageQueueItem
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class MessageQueueItemSearchDialogModel : global::Sungero.ExchangeCore.Server.QueueItemBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.String Name { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.String ExternalId { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Int32? Retries { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.String Note { get; protected set; }


                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBoxBase> Box { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> LastUpdate { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IBusinessUnitBox> RootBox { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ProcessingStatus { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public MessageQueueItemDocumentsModel Documents { get; protected set; }

        }


      public class MessageQueueItemDocumentsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class MessageQueueItemFilterForNoticeTask<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Workflow.ITask
    where TSourceEntity : class, global::Sungero.ExchangeCore.IMessageQueueItem
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemNoticeTaskPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("NoticeTaskFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.MessageQueueItemNoticeTaskPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).NoticeTaskFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MessageQueueItemFilterForNoticeTask(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class MessageQueueItemSearchFilterForNoticeTask<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Workflow.ITask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemNoticeTaskSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("NoticeTaskSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.MessageQueueItemNoticeTaskSearchPropertyFilteringServerHandler<TQueryEntity>().NoticeTaskSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MessageQueueItemSearchFilterForNoticeTask(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class MessageQueueItemFilterForDownloadSession<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession
    where TSourceEntity : class, global::Sungero.ExchangeCore.IMessageQueueItem
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemDownloadSessionPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DownloadSessionFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.MessageQueueItemDownloadSessionPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DownloadSessionFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MessageQueueItemFilterForDownloadSession(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class MessageQueueItemSearchFilterForDownloadSession<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemDownloadSessionSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DownloadSessionSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.MessageQueueItemDownloadSessionSearchPropertyFilteringServerHandler<TQueryEntity>().DownloadSessionSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MessageQueueItemSearchFilterForDownloadSession(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemFilter<global::Sungero.ExchangeCore.IMessageQueueItem>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemUiFilter<global::Sungero.ExchangeCore.IMessageQueueItem>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemFilterForNoticeTask<global::Sungero.Workflow.ITask, global::Sungero.ExchangeCore.IMessageQueueItem>), "NoticeTask")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemSearchFilterForNoticeTask<global::Sungero.Workflow.ITask>), "NoticeTask")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemFilterForDownloadSession<global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession, global::Sungero.ExchangeCore.IMessageQueueItem>), "DownloadSession")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.MessageQueueItemSearchFilterForDownloadSession<global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession>), "DownloadSession")]


  public class MessageQueueItem :
    global::Sungero.ExchangeCore.Server.QueueItemBase, global::Sungero.ExchangeCore.IMessageQueueItem
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f9a3ec37-0fd4-4343-a295-9394ba830a0e");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.MessageQueueItem.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IMessageQueueItem, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.ExchangeCore.IMessageQueueItemState State
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItemState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.MessageQueueItemState(this);
    }

    public new virtual global::Sungero.ExchangeCore.IMessageQueueItemInfo Info
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItemInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.IMessageQueueItemAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItemAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.MessageQueueItemAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.MessageQueueItemFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.MessageQueueItemFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.MessageQueueItemServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.MessageQueueItemSharedHandlers(this);
    }

    private global::System.DateTime? _Created;
    public virtual global::System.DateTime? Created
    {
      get
      {
        return this._Created;
      }

      set
      {
        this.SetPropertyValue("Created", this._Created, value, (propertyValue) => { this._Created = propertyValue; }, this.CreatedChangedHandler);
      }
    }
    private global::System.String _CounterpartyExternalId;
    public virtual global::System.String CounterpartyExternalId
    {
      get
      {
        return this._CounterpartyExternalId;
      }

      set
      {
        this.SetPropertyValue("CounterpartyExternalId", this._CounterpartyExternalId, value, (propertyValue) => { this._CounterpartyExternalId = propertyValue; }, this.CounterpartyExternalIdChangedHandler);
      }
    }
    private global::System.String _RootMessageId;
    public virtual global::System.String RootMessageId
    {
      get
      {
        return this._RootMessageId;
      }

      set
      {
        this.SetPropertyValue("RootMessageId", this._RootMessageId, value, (propertyValue) => { this._RootMessageId = propertyValue; }, this.RootMessageIdChangedHandler);
      }
    }
    private global::System.Boolean? _IsRootMessage;
    public virtual global::System.Boolean? IsRootMessage
    {
      get
      {
        return this._IsRootMessage;
      }

      set
      {
        this.SetPropertyValue("IsRootMessage", this._IsRootMessage, value, (propertyValue) => { this._IsRootMessage = propertyValue; }, this.IsRootMessageChangedHandler);
      }
    }
    private global::System.Boolean? _IsManualRestart;
    public virtual global::System.Boolean? IsManualRestart
    {
      get
      {
        return this._IsManualRestart;
      }

      set
      {
        this.SetPropertyValue("IsManualRestart", this._IsManualRestart, value, (propertyValue) => { this._IsManualRestart = propertyValue; }, this.IsManualRestartChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.ExchangeCore.Server.QueueItemBase.ProcessingStatusItems,
      typeof(global::Sungero.ExchangeCore.MessageQueueItem.ProcessingStatus),
      typeof(global::Sungero.ExchangeCore.Server.MessageQueueItem),
      "ProcessingStatus");

    public static new global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
    {
      get { return global::Sungero.ExchangeCore.Server.MessageQueueItem._ProcessingStatusItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
    {
      get { return global::Sungero.ExchangeCore.Server.MessageQueueItem.ProcessingStatusItems; }
    }



    private global::Sungero.Workflow.ITask _NoticeTask;
    public virtual global::Sungero.Workflow.ITask NoticeTask
    {
      get
      {
        return this._NoticeTask;
      }

      set
      {
        this.SetPropertyValue("NoticeTask", this._NoticeTask, value, (propertyValue) => { this._NoticeTask = propertyValue; }, this.NoticeTaskChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession _DownloadSession;
    public virtual global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession DownloadSession
    {
      get
      {
        return this._DownloadSession;
      }

      set
      {
        this.SetPropertyValue("DownloadSession", this._DownloadSession, value, (propertyValue) => { this._DownloadSession = propertyValue; }, this.DownloadSessionChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IMessageQueueItemDocuments> _Documents;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IMessageQueueItemDocuments> Documents
    {
      get
      {
        if (this._Documents == null)
        {
          this._Documents = this.CreateDocumentsCollection();
          this.SetDocumentsEventHandlers();
        }
        return this._Documents;
      }

      set
      {
        if (this._Documents != null)
          this.UnsetChildCollectionEventHandlers(this._Documents);

        this._Documents = value;
        this.SetDocumentsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IMessageQueueItemDocuments> CreateDocumentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.ExchangeCore.IMessageQueueItemDocuments>() { RootEntity = this };
    }

    private void SetDocumentsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Documents, "Documents");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Documents;
      changeNotifier.Added += this.DocumentsAddedHandler;
      changeNotifier.Deleted += this.DocumentsDeletedHandler;
      changeNotifier.Added += this.DocumentsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.DocumentsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.DocumentsCollectionUpdateEventHandler;
    }

    private void DocumentsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Documents"))
        this.DocumentsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.ExchangeCore.MessageQueueItemCreatingFromServerHandler", new object[] { (global::Sungero.ExchangeCore.IMessageQueueItem)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.ExchangeCore.MessageQueueItemCreatingFromServerHandler((global::Sungero.ExchangeCore.IMessageQueueItem)entitySource, this.Info);
    }

    #region Framework events

    protected void NoticeTaskChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.MessageQueueItemNoticeTaskChangedEventArgs(this.State.Properties.NoticeTask, this.NoticeTask, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).NoticeTaskChanged(args);
    }

    protected void DocumentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).DocumentsChanged(args);
    }

    protected void CreatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Created, this.Created, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).CreatedChanged(args);
    }

    protected void CounterpartyExternalIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.CounterpartyExternalId, this.CounterpartyExternalId, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).CounterpartyExternalIdChanged(args);
    }

    protected void RootMessageIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.RootMessageId, this.RootMessageId, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).RootMessageIdChanged(args);
    }

    protected void IsRootMessageChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsRootMessage, this.IsRootMessage, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).IsRootMessageChanged(args);
    }

    protected void DownloadSessionChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.MessageQueueItemDownloadSessionChangedEventArgs(this.State.Properties.DownloadSession, this.DownloadSession, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).DownloadSessionChanged(args);
    }

    protected void IsManualRestartChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsManualRestart, this.IsManualRestart, this);
     ((global::Sungero.ExchangeCore.IMessageQueueItemSharedHandlers)this.SharedHandlers).IsManualRestartChanged(args);
    }



    protected virtual global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers CreateDocumentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers CreateDocumentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void DocumentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("DocumentsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateDocumentsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.DocumentsAdded(args);
        }
      }
    }

    protected virtual void DocumentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.MessageQueueItemDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("DocumentsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateDocumentsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.DocumentsDeleted(args);
        }
      }
    }


    #endregion


    public MessageQueueItem()
    {
    }

  }
}

// ==================================================================
// MessageQueueItemHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class MessageQueueItemNoticeTaskPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Workflow.ITask
  {
    private global::Sungero.ExchangeCore.IMessageQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItem)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> NoticeTaskFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public MessageQueueItemNoticeTaskPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IMessageQueueItem entity)
      : base(entity)
    {
    }
  }

  public partial class MessageQueueItemNoticeTaskSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Workflow.ITask
  {

    public virtual global::System.Linq.IQueryable<T> NoticeTaskSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public MessageQueueItemNoticeTaskSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class MessageQueueItemDownloadSessionPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession
  {
    private global::Sungero.ExchangeCore.IMessageQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItem)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DownloadSessionFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public MessageQueueItemDownloadSessionPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IMessageQueueItem entity)
      : base(entity)
    {
    }
  }

  public partial class MessageQueueItemDownloadSessionSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession
  {

    public virtual global::System.Linq.IQueryable<T> DownloadSessionSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public MessageQueueItemDownloadSessionSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class MessageQueueItemFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.QueueItemBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.IMessageQueueItem
  {
    private global::Sungero.ExchangeCore.IMessageQueueItemFilterState _filter
    {
      get
      {
        return (Sungero.ExchangeCore.IMessageQueueItemFilterState)this.Filter;
      }
    }

    public MessageQueueItemFilteringServerHandler(global::Sungero.ExchangeCore.IMessageQueueItemFilterState filter)
    : base(filter)
    {
    }

    protected MessageQueueItemFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class MessageQueueItemUiFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.QueueItemBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.ExchangeCore.IMessageQueueItem
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class MessageQueueItemSearchDialogServerHandler : global::Sungero.ExchangeCore.QueueItemBaseSearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.MessageQueueItemSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.MessageQueueItemSearchDialogModel)this.Dialog;
       }
     }

     public MessageQueueItemSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.MessageQueueItemSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class MessageQueueItemServerHandlers : global::Sungero.ExchangeCore.QueueItemBaseServerHandlers
  {
    private global::Sungero.ExchangeCore.IMessageQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItem)this.Entity; }
    }

    public MessageQueueItemServerHandlers(global::Sungero.ExchangeCore.IMessageQueueItem entity)
      : base(entity)
    {
    }
  }

  public partial class MessageQueueItemCreatingFromServerHandler : global::Sungero.ExchangeCore.QueueItemBaseCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.IMessageQueueItem _source
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItem)this.Source; }
    }

    private global::Sungero.ExchangeCore.IMessageQueueItemInfo _info
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItemInfo)this._Info; }
    }

    public MessageQueueItemCreatingFromServerHandler(global::Sungero.ExchangeCore.IMessageQueueItem source, global::Sungero.ExchangeCore.IMessageQueueItemInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// MessageQueueItemEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// MessageQueueItemAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class MessageQueueItemAccessRights : 
    Sungero.ExchangeCore.Server.QueueItemBaseAccessRights, Sungero.ExchangeCore.IMessageQueueItemAccessRights
  {

    public MessageQueueItemAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class MessageQueueItemTypeAccessRights : 
    Sungero.ExchangeCore.Server.QueueItemBaseTypeAccessRights, Sungero.ExchangeCore.IMessageQueueItemAccessRights
  {

    public MessageQueueItemTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// MessageQueueItemRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class MessageQueueItemRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Server.QueueItemBaseRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IMessageQueueItemRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IMessageQueueItem 
    {
       public new global::Sungero.ExchangeCore.IMessageQueueItemAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IMessageQueueItemAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IMessageQueueItemInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IMessageQueueItemInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.MessageQueueItemTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// MessageQueueItemPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// MessageQueueItemServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class MessageQueueItemFunctions : global::Sungero.ExchangeCore.Server.QueueItemBaseFunctions
  {
    private global::Sungero.ExchangeCore.IMessageQueueItem _obj
    {
      get { return (global::Sungero.ExchangeCore.IMessageQueueItem)this.Entity; }
    }

    public MessageQueueItemFunctions(global::Sungero.ExchangeCore.IMessageQueueItem entity) : base(entity) { }
  }
}

// ==================================================================
// MessageQueueItemFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class MessageQueueItem
  {
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.MessageQueueItemFunctions" />
    internal static  global::Sungero.ExchangeCore.IMessageQueueItem GetRootMessageQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)messageQueueItem).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRootMessageQueueItem", new System.Type[] {  });
      return (global::Sungero.ExchangeCore.IMessageQueueItem)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.MessageQueueItemFunctions" />
    internal static  void IncrementRetries(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem, global::System.Int32 maxRetriesCount)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)messageQueueItem).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IncrementRetries", new System.Type[] { typeof(global::System.Int32) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { maxRetriesCount });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.MessageQueueItemFunctions" />
    internal static  global::System.Boolean NeedAbortHistoricalQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)messageQueueItem).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedAbortHistoricalQueueItem", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.MessageQueueItemFunctions" />
    internal static  void AbortHistoricalQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)messageQueueItem).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortHistoricalQueueItem", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.MessageQueueItemFunctions" />
    internal static  global::System.Boolean NeedIncrementRetries(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)messageQueueItem).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedIncrementRetries", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// MessageQueueItemServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class MessageQueueItemServerPublicFunctions : global::Sungero.ExchangeCore.Server.IMessageQueueItemServerPublicFunctions
  {
    public void AbortHistoricalQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
global::Sungero.ExchangeCore.Functions.MessageQueueItem.AbortHistoricalQueueItem(messageQueueItem);
    }
    public global::Sungero.ExchangeCore.IMessageQueueItem GetRootMessageQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      return global::Sungero.ExchangeCore.Functions.MessageQueueItem.GetRootMessageQueueItem(messageQueueItem);
    }
    public void IncrementRetries(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem, global::System.Int32 maxRetriesCount)
    {
global::Sungero.ExchangeCore.Functions.MessageQueueItem.IncrementRetries(messageQueueItem, maxRetriesCount);
    }
    public global::System.Boolean NeedAbortHistoricalQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      return global::Sungero.ExchangeCore.Functions.MessageQueueItem.NeedAbortHistoricalQueueItem(messageQueueItem);
    }
    public global::System.Boolean NeedIncrementRetries(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      return global::Sungero.ExchangeCore.Functions.MessageQueueItem.NeedIncrementRetries(messageQueueItem);
    }
  }
}

// ==================================================================
// MessageQueueItemQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class MessageQueueItem
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.MessageQueueItem.MessageQueueItemQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
