
// ==================================================================
// CancellationAgreementState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Shared
{
  public class CancellationAgreementState : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseState, global::Sungero.Exchange.ICancellationAgreementState
  {
    public CancellationAgreementState(global::Sungero.Exchange.ICancellationAgreement entity) : base(entity) { }

    public new global::Sungero.Exchange.ICancellationAgreementPropertyStates Properties
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementPropertyStates(entity);
    }


    public new global::Sungero.Exchange.ICancellationAgreementControlStates Controls
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementControlStates(entity);
    }

    public new global::Sungero.Exchange.ICancellationAgreementPageStates Pages
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementPageStates(entity);
    }

  }


  public class CancellationAgreementControlStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseControlStates, global::Sungero.Exchange.ICancellationAgreementControlStates
  {

    protected internal CancellationAgreementControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class CancellationAgreementPageStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePageStates, global::Sungero.Exchange.ICancellationAgreementPageStates
  {

    protected internal CancellationAgreementPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class CancellationAgreementPropertyStates : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePropertyStates, global::Sungero.Exchange.ICancellationAgreementPropertyStates
  {
            public new global::Sungero.Exchange.ICancellationAgreementVersionsCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementVersions> Versions
            {
              get { return (global::Sungero.Exchange.ICancellationAgreementVersionsCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Exchange.Shared.CancellationAgreementVersionsCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementVersions>(entity, propertyName);
            }
            public new global::Sungero.Exchange.ICancellationAgreementTrackingCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementTracking> Tracking
            {
              get { return (global::Sungero.Exchange.ICancellationAgreementTrackingCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Exchange.Shared.CancellationAgreementTrackingCollectionPropertyState<global::Sungero.Exchange.ICancellationAgreementTracking>(entity, propertyName);
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Reason 
            {
              get { return this.GetPropertyState<global::System.String>("Reason"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> ServiceDocumentId 
            {
              get { return this.GetPropertyState<global::System.String>("ServiceDocumentId"); }
            }


    protected internal CancellationAgreementPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// CancellationAgreementInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Shared
{
  public class CancellationAgreementInfo : 
    global::Sungero.Docflow.Shared.ContractualDocumentBaseInfo, global::Sungero.Exchange.ICancellationAgreementInfo
  {
    public CancellationAgreementInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Exchange.ICancellationAgreementPropertiesInfo Properties
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementPropertiesInfo(entityType);
    }

  }

  public class CancellationAgreementPropertiesInfo : 
    global::Sungero.Docflow.Shared.ContractualDocumentBasePropertiesInfo, global::Sungero.Exchange.ICancellationAgreementPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Exchange.ICancellationAgreementVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Exchange.ICancellationAgreementVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Exchange.ICancellationAgreementTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Exchange.ICancellationAgreementTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo Reason 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Reason");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IStringPropertyInfo ServiceDocumentId 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("ServiceDocumentId");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }


    protected internal CancellationAgreementPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// CancellationAgreementHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange
{
  public partial class CancellationAgreementSharedHandlers : global::Sungero.Docflow.ContractualDocumentBaseSharedHandlers, ICancellationAgreementSharedHandlers
  {
    private global::Sungero.Exchange.ICancellationAgreement _obj
    {
      get { return (global::Sungero.Exchange.ICancellationAgreement)this.Entity; }
    }
    public virtual void ReasonChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void ServiceDocumentIdChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }




    public CancellationAgreementSharedHandlers(global::Sungero.Exchange.ICancellationAgreement entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// CancellationAgreementResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Shared.CancellationAgreement
{
  /// <summary>
  /// Represents CancellationAgreement resources.
  /// </summary>
  public class CancellationAgreementResources : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseResources, global::Sungero.Exchange.CancellationAgreement.ICancellationAgreementResources
  {
    public virtual global::CommonLibrary.LocalizedString CancellationAgreementNameTemplate
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Exchange.ICancellationAgreement) , "CancellationAgreementNameTemplate");
      }
    }

    public virtual global::CommonLibrary.LocalizedString CancellationAgreementNameTemplateFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Exchange.ICancellationAgreement), "CancellationAgreementNameTemplate", false, args);
    }

  }
}

// ==================================================================
// CancellationAgreementSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Exchange.Shared
{
  public partial class CancellationAgreementFunctions : global::Sungero.Docflow.Shared.ContractualDocumentBaseFunctions
  {
    private global::Sungero.Exchange.ICancellationAgreement _obj
    {
      get { return (global::Sungero.Exchange.ICancellationAgreement)this.Entity; }
    }

    public CancellationAgreementFunctions(global::Sungero.Exchange.ICancellationAgreement entity) : base(entity) { }
  }
}

// ==================================================================
// CancellationAgreementFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static class CancellationAgreement
  {
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Boolean isEnabled, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, repeatRegister });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeRegistrationPaneVisibility", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needShow, repeatRegister });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  global::System.Boolean DefaultRegistrationPaneVisibility(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DefaultRegistrationPaneVisibility", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void FillName(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateLifeCycle", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { registrationState, approvalState, counterpartyApprovalState });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }

  }
}

// ==================================================================
// CancellationAgreementFilterState.g.cs
// ==================================================================

namespace Sungero.Exchange.Shared.CancellationAgreement
{

  public class CancellationAgreementFilterInfo : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterInfo,
    global::Sungero.Exchange.ICancellationAgreementFilterInfo
  {
  }

  public class CancellationAgreementFilterState : global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterState,
    global::Sungero.Exchange.ICancellationAgreementFilterState
  {



    public new Sungero.Exchange.ICancellationAgreementFilterInfo Info
    {
      get
      {
        return (Sungero.Exchange.ICancellationAgreementFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Exchange.Shared.CancellationAgreement.CancellationAgreementFilterInfo();
    }

  }
}

// ==================================================================
// CancellationAgreementSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Shared
{
  public class CancellationAgreementSharedPublicFunctions : global::Sungero.Exchange.Shared.ICancellationAgreementSharedPublicFunctions
  {
  }
}
