
// ==================================================================
// OfficialDocument.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OfficialDocumentFilter<T> :
      global::Sungero.Content.Server.ElectronicDocumentFilter<T>
      where T : class, global::Sungero.Docflow.IOfficialDocument
    {
      protected new global::Sungero.Docflow.IOfficialDocumentFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IOfficialDocumentFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public OfficialDocumentFilter(global::Sungero.Docflow.IOfficialDocumentFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected OfficialDocumentFilter()
      {
      }
    }
    public class OfficialDocumentSearchDialogModel : global::Sungero.Content.Server.ElectronicDocumentSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }


                  public virtual global::System.String Subject { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }


                   public new OfficialDocumentVersionsModel Versions { get { return (OfficialDocumentVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public OfficialDocumentTrackingModel Tracking { get; protected set; }

        }

      public class OfficialDocumentVersionsModel : global::Sungero.Content.Server.ElectronicDocumentVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }


      public class OfficialDocumentTrackingModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class OfficialDocumentFilterForDocumentRegister<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentRegisterPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DocumentRegisterFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentRegisterPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentRegisterFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentRegister<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentRegister
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DocumentRegisterSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentRegisterSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentRegister(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDeliveryMethodPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DeliveryMethodFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveryMethodFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DeliveryMethodSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveryMethodSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForCaseFile<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentCaseFilePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("CaseFileFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentCaseFilePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CaseFileFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForCaseFile<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ICaseFile
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentCaseFileSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("CaseFileSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentCaseFileSearchPropertyFilteringServerHandler<TQueryEntity>().CaseFileSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForCaseFile(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDeliveredTo<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDeliveredToPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DeliveredToFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDeliveredToPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveredToFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDeliveredTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDeliveredTo<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DeliveredToSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveredToSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDeliveredTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForResponsibleForReturnEmployee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ResponsibleForReturnEmployeeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ResponsibleForReturnEmployeeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForResponsibleForReturnEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForResponsibleForReturnEmployee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ResponsibleForReturnEmployeeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler<TQueryEntity>().ResponsibleForReturnEmployeeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForResponsibleForReturnEmployee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDocumentKind<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentKindPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DocumentKindFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentKindPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentKindFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentKind<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentKind
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DocumentKindSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentKindSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentKind(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentBusinessUnitPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("BusinessUnitFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("BusinessUnitSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForOurSignatory<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentOurSignatoryPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("OurSignatoryFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentOurSignatoryPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OurSignatoryFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForOurSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForOurSignatory<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("OurSignatorySearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler<TQueryEntity>().OurSignatorySearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForOurSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDocumentGroup<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentGroupPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DocumentGroupFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentGroupPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DocumentGroupFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDocumentGroup<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DocumentGroupSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler<TQueryEntity>().DocumentGroupSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDocumentGroup(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentAssigneePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AssigneeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentAssigneeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AssigneeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForDepartment<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDepartmentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DepartmentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDepartmentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DepartmentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForDepartment<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentDepartmentSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DepartmentSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentDepartmentSearchPropertyFilteringServerHandler<TQueryEntity>().DepartmentSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForPreparedBy<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentPreparedByPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("PreparedByFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentPreparedByPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).PreparedByFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForPreparedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForPreparedBy<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentPreparedBySearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("PreparedBySearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentPreparedBySearchPropertyFilteringServerHandler<TQueryEntity>().PreparedBySearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForPreparedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForProject<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IProjectBase
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentProjectPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ProjectFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentProjectPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ProjectFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForProject(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForProject<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IProjectBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentProjectSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ProjectSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentProjectSearchPropertyFilteringServerHandler<TQueryEntity>().ProjectSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForProject(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForLeadingDocument<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentLeadingDocumentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("LeadingDocumentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentLeadingDocumentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).LeadingDocumentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForLeadingDocument(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForLeadingDocument<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("LeadingDocumentSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler<TQueryEntity>().LeadingDocumentSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForLeadingDocument(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForStorage<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentStoragePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("StorageFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentStoragePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).StorageFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForStorage<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IStorage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentStorageSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("StorageSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentStorageSearchPropertyFilteringServerHandler<TQueryEntity>().StorageSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForStorage(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForOurSigningReason<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ISignatureSetting
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentOurSigningReasonPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("OurSigningReasonFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentOurSigningReasonPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OurSigningReasonFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForOurSigningReason(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForOurSigningReason<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ISignatureSetting
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentOurSigningReasonSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("OurSigningReasonSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentOurSigningReasonSearchPropertyFilteringServerHandler<TQueryEntity>().OurSigningReasonSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForOurSigningReason(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForTopic<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentTopicPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("TopicFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentTopicPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).TopicFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForTopic(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForTopic<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentTopicSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("TopicSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentTopicSearchPropertyFilteringServerHandler<TQueryEntity>().TopicSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForTopic(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentFilterForSubtopic<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
    where TSourceEntity : class, global::Sungero.Docflow.IOfficialDocument
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentSubtopicPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("SubtopicFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentSubtopicPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).SubtopicFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentFilterForSubtopic(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OfficialDocumentSearchFilterForSubtopic<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentSubtopicSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("SubtopicSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OfficialDocumentSubtopicSearchPropertyFilteringServerHandler<TQueryEntity>().SubtopicSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OfficialDocumentSearchFilterForSubtopic(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilter<global::Sungero.Docflow.IOfficialDocument>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister, global::Sungero.Docflow.IOfficialDocument>), "DocumentRegister")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentRegister<global::Sungero.Docflow.IDocumentRegister>), "DocumentRegister")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IOfficialDocument>), "DeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "DeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForCaseFile<global::Sungero.Docflow.ICaseFile, global::Sungero.Docflow.IOfficialDocument>), "CaseFile")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForCaseFile<global::Sungero.Docflow.ICaseFile>), "CaseFile")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDeliveredTo<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "DeliveredTo")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDeliveredTo<global::Sungero.CoreEntities.IRecipient>), "DeliveredTo")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForResponsibleForReturnEmployee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "ResponsibleForReturnEmployee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForResponsibleForReturnEmployee<global::Sungero.CoreEntities.IRecipient>), "ResponsibleForReturnEmployee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentKind<global::Sungero.Docflow.IDocumentKind, global::Sungero.Docflow.IOfficialDocument>), "DocumentKind")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentKind<global::Sungero.Docflow.IDocumentKind>), "DocumentKind")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.Docflow.IOfficialDocument>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForOurSignatory<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "OurSignatory")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForOurSignatory<global::Sungero.CoreEntities.IRecipient>), "OurSignatory")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase, global::Sungero.Docflow.IOfficialDocument>), "DocumentGroup")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDocumentGroup<global::Sungero.Docflow.IDocumentGroupBase>), "DocumentGroup")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForDepartment<global::Sungero.Company.IDepartment, global::Sungero.Docflow.IOfficialDocument>), "Department")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForDepartment<global::Sungero.Company.IDepartment>), "Department")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForPreparedBy<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IOfficialDocument>), "PreparedBy")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForPreparedBy<global::Sungero.CoreEntities.IRecipient>), "PreparedBy")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForProject<global::Sungero.Docflow.IProjectBase, global::Sungero.Docflow.IOfficialDocument>), "Project")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForProject<global::Sungero.Docflow.IProjectBase>), "Project")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForLeadingDocument<global::Sungero.Docflow.IOfficialDocument, global::Sungero.Docflow.IOfficialDocument>), "LeadingDocument")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForLeadingDocument<global::Sungero.Docflow.IOfficialDocument>), "LeadingDocument")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForStorage<global::Sungero.CoreEntities.IStorage, global::Sungero.Docflow.IOfficialDocument>), "Storage")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForStorage<global::Sungero.CoreEntities.IStorage>), "Storage")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForOurSigningReason<global::Sungero.Docflow.ISignatureSetting, global::Sungero.Docflow.IOfficialDocument>), "OurSigningReason")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForOurSigningReason<global::Sungero.Docflow.ISignatureSetting>), "OurSigningReason")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForTopic<global::Sungero.Docflow.ITopic, global::Sungero.Docflow.IOfficialDocument>), "Topic")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForTopic<global::Sungero.Docflow.ITopic>), "Topic")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentFilterForSubtopic<global::Sungero.Docflow.ITopic, global::Sungero.Docflow.IOfficialDocument>), "Subtopic")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OfficialDocumentSearchFilterForSubtopic<global::Sungero.Docflow.ITopic>), "Subtopic")]


  public class OfficialDocument :
    global::Sungero.Content.Server.ElectronicDocument, global::Sungero.Docflow.IOfficialDocument, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("58cca102-1e97-4f07-b6ac-fd866a8b7cb1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IOfficialDocument, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentState State
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentState(this);
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentInfo Info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.OfficialDocumentAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.OfficialDocumentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.OfficialDocumentFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.OfficialDocumentSharedHandlers(this);
    }

    private global::System.String _RegistrationNumber;
    public virtual global::System.String RegistrationNumber
    {
      get
      {
        return this._RegistrationNumber;
      }

      set
      {
        this.SetPropertyValue("RegistrationNumber", this._RegistrationNumber, value, (propertyValue) => { this._RegistrationNumber = propertyValue; }, this.RegistrationNumberChangedHandler);
      }
    }
    private global::System.Int32? _Index;
    public virtual global::System.Int32? Index
    {
      get
      {
        return this._Index;
      }

      set
      {
        this.SetPropertyValue("Index", this._Index, value, (propertyValue) => { this._Index = propertyValue; }, this.IndexChangedHandler);
      }
    }
    private global::System.DateTime? _RegistrationDate;
    public virtual global::System.DateTime? RegistrationDate
    {
      get
      {
        return this._RegistrationDate;
      }

      set
      {
        this.SetPropertyValue("RegistrationDate", this._RegistrationDate, value, (propertyValue) => { this._RegistrationDate = propertyValue; }, this.RegistrationDateChangedHandler);
      }
    }
    private global::System.DateTime? _PlacedToCaseFileDate;
    public virtual global::System.DateTime? PlacedToCaseFileDate
    {
      get
      {
        return this._PlacedToCaseFileDate;
      }

      set
      {
        this.SetPropertyValue("PlacedToCaseFileDate", this._PlacedToCaseFileDate, value, (propertyValue) => { this._PlacedToCaseFileDate = propertyValue; }, this.PlacedToCaseFileDateChangedHandler);
      }
    }
    private global::System.Boolean? _IsReturnRequired;
    public virtual global::System.Boolean? IsReturnRequired
    {
      get
      {
        return this._IsReturnRequired;
      }

      set
      {
        this.SetPropertyValue("IsReturnRequired", this._IsReturnRequired, value, (propertyValue) => { this._IsReturnRequired = propertyValue; }, this.IsReturnRequiredChangedHandler);
      }
    }
    private global::System.Boolean? _IsHeldByCounterParty;
    public virtual global::System.Boolean? IsHeldByCounterParty
    {
      get
      {
        return this._IsHeldByCounterParty;
      }

      set
      {
        this.SetPropertyValue("IsHeldByCounterParty", this._IsHeldByCounterParty, value, (propertyValue) => { this._IsHeldByCounterParty = propertyValue; }, this.IsHeldByCounterPartyChangedHandler);
      }
    }
    private global::System.DateTime? _ReturnDeadline;
    public virtual global::System.DateTime? ReturnDeadline
    {
      get
      {
        return this._ReturnDeadline;
      }

      set
      {
        this.SetPropertyValue("ReturnDeadline", this._ReturnDeadline, value, (propertyValue) => { this._ReturnDeadline = propertyValue; }, this.ReturnDeadlineChangedHandler);
      }
    }
    private global::System.DateTime? _ReturnDate;
    public virtual global::System.DateTime? ReturnDate
    {
      get
      {
        return this._ReturnDate;
      }

      set
      {
        this.SetPropertyValue("ReturnDate", this._ReturnDate, value, (propertyValue) => { this._ReturnDate = propertyValue; }, this.ReturnDateChangedHandler);
      }
    }
    private global::System.DateTime? _ScheduledReturnDateFromCounterparty;
    public virtual global::System.DateTime? ScheduledReturnDateFromCounterparty
    {
      get
      {
        return this._ScheduledReturnDateFromCounterparty;
      }

      set
      {
        this.SetPropertyValue("ScheduledReturnDateFromCounterparty", this._ScheduledReturnDateFromCounterparty, value, (propertyValue) => { this._ScheduledReturnDateFromCounterparty = propertyValue; }, this.ScheduledReturnDateFromCounterpartyChangedHandler);
      }
    }
    private global::System.String _Subject;
    public virtual global::System.String Subject
    {
      get
      {
        return this._Subject;
      }

      set
      {
        this.SetPropertyValue("Subject", this._Subject, value, (propertyValue) => { this._Subject = propertyValue; }, this.SubjectChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.DateTime? _DocumentDate;
    public virtual global::System.DateTime? DocumentDate
    {
      get
      {
        return this._DocumentDate;
      }

      set
      {
        this.SetPropertyValue("DocumentDate", this._DocumentDate, value, (propertyValue) => { this._DocumentDate = propertyValue; }, this.DocumentDateChangedHandler);
      }
    }
    private global::System.String _ExternalId;
    public virtual global::System.String ExternalId
    {
      get
      {
        return this._ExternalId;
      }

      set
      {
        this.SetPropertyValue("ExternalId", this._ExternalId, value, (propertyValue) => { this._ExternalId = propertyValue; }, this.ExternalIdChangedHandler);
      }
    }
    private global::System.Int32? _PaperCount;
    public virtual global::System.Int32? PaperCount
    {
      get
      {
        return this._PaperCount;
      }

      set
      {
        this.SetPropertyValue("PaperCount", this._PaperCount, value, (propertyValue) => { this._PaperCount = propertyValue; }, this.PaperCountChangedHandler);
      }
    }
    private global::System.DateTime? _LastVersionChanged;
    public virtual global::System.DateTime? LastVersionChanged
    {
      get
      {
        return this._LastVersionChanged;
      }

      set
      {
        this.SetPropertyValue("LastVersionChanged", this._LastVersionChanged, value, (propertyValue) => { this._LastVersionChanged = propertyValue; }, this.LastVersionChangedChangedHandler);
      }
    }
    private global::System.Int32? _AddendaPaperCount;
    public virtual global::System.Int32? AddendaPaperCount
    {
      get
      {
        return this._AddendaPaperCount;
      }

      set
      {
        this.SetPropertyValue("AddendaPaperCount", this._AddendaPaperCount, value, (propertyValue) => { this._AddendaPaperCount = propertyValue; }, this.AddendaPaperCountChangedHandler);
      }
    }
    private global::System.String _StoredIn;
    public virtual global::System.String StoredIn
    {
      get
      {
        return this._StoredIn;
      }

      set
      {
        this.SetPropertyValue("StoredIn", this._StoredIn, value, (propertyValue) => { this._StoredIn = propertyValue; }, this.StoredInChangedHandler);
      }
    }



    private global::System.String _LocationState;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String LocationState
    {
      get
      {
        return this._LocationState;
      }

      set
      {
        this.SetPropertyValue("LocationState", this._LocationState, value, (propertyValue) => { this._LocationState = propertyValue; }, this.LocationStateChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _LifeCycleStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.LifeCycleState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "LifeCycleState");

    public static global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._LifeCycleStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.LifeCycleStateItems; }
    }

    private global::Sungero.Core.Enumeration? _LifeCycleState;

    public virtual global::Sungero.Core.Enumeration? LifeCycleState
    {
      get { return this._LifeCycleState; }
      set { this.SetEnumPropertyValue("LifeCycleState", this._LifeCycleState, value, (propertyValue) => { this._LifeCycleState = propertyValue; }, this.LifeCycleStateChangedHandler, this.LifeCycleStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _RegistrationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.RegistrationState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "RegistrationState");

    public static global::Sungero.Domain.Shared.EnumerationItems RegistrationStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._RegistrationStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RegistrationStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.RegistrationStateItems; }
    }

    private global::Sungero.Core.Enumeration? _RegistrationState;

    public virtual global::Sungero.Core.Enumeration? RegistrationState
    {
      get { return this._RegistrationState; }
      set { this.SetEnumPropertyValue("RegistrationState", this._RegistrationState, value, (propertyValue) => { this._RegistrationState = propertyValue; }, this.RegistrationStateChangedHandler, this.RegistrationStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _InternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.InternalApprovalState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "InternalApprovalState");

    public static global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._InternalApprovalStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.InternalApprovalStateItems; }
    }

    private global::Sungero.Core.Enumeration? _InternalApprovalState;

    public virtual global::Sungero.Core.Enumeration? InternalApprovalState
    {
      get { return this._InternalApprovalState; }
      set { this.SetEnumPropertyValue("InternalApprovalState", this._InternalApprovalState, value, (propertyValue) => { this._InternalApprovalState = propertyValue; }, this.InternalApprovalStateChangedHandler, this.InternalApprovalStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExternalApprovalState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExternalApprovalState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExternalApprovalStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExternalApprovalStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExternalApprovalState;

    public virtual global::Sungero.Core.Enumeration? ExternalApprovalState
    {
      get { return this._ExternalApprovalState; }
      set { this.SetEnumPropertyValue("ExternalApprovalState", this._ExternalApprovalState, value, (propertyValue) => { this._ExternalApprovalState = propertyValue; }, this.ExternalApprovalStateChangedHandler, this.ExternalApprovalStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExecutionState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExecutionState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExecutionStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExecutionStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExecutionStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExecutionStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExecutionState;

    public virtual global::Sungero.Core.Enumeration? ExecutionState
    {
      get { return this._ExecutionState; }
      set { this.SetEnumPropertyValue("ExecutionState", this._ExecutionState, value, (propertyValue) => { this._ExecutionState = propertyValue; }, this.ExecutionStateChangedHandler, this.ExecutionStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ControlExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ControlExecutionState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ControlExecutionState");

    public static global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ControlExecutionStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ControlExecutionStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ControlExecutionStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ControlExecutionState;

    public virtual global::Sungero.Core.Enumeration? ControlExecutionState
    {
      get { return this._ControlExecutionState; }
      set { this.SetEnumPropertyValue("ControlExecutionState", this._ControlExecutionState, value, (propertyValue) => { this._ControlExecutionState = propertyValue; }, this.ControlExecutionStateChangedHandler, this.ControlExecutionStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ExchangeStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.ExchangeState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "ExchangeState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExchangeStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._ExchangeStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExchangeStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.ExchangeStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExchangeState;

    public virtual global::Sungero.Core.Enumeration? ExchangeState
    {
      get { return this._ExchangeState; }
      set { this.SetEnumPropertyValue("ExchangeState", this._ExchangeState, value, (propertyValue) => { this._ExchangeState = propertyValue; }, this.ExchangeStateChangedHandler, this.ExchangeStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _VerificationStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.OfficialDocument.VerificationState),
      typeof(global::Sungero.Docflow.Server.OfficialDocument),
      "VerificationState");

    public static global::Sungero.Domain.Shared.EnumerationItems VerificationStateItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument._VerificationStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems VerificationStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.OfficialDocument.VerificationStateItems; }
    }

    private global::Sungero.Core.Enumeration? _VerificationState;

    public virtual global::Sungero.Core.Enumeration? VerificationState
    {
      get { return this._VerificationState; }
      set { this.SetEnumPropertyValue("VerificationState", this._VerificationState, value, (propertyValue) => { this._VerificationState = propertyValue; }, this.VerificationStateChangedHandler, this.VerificationStateAllowedItems); }
    }


    private global::Sungero.Docflow.IDocumentRegister _DocumentRegister;
    public virtual global::Sungero.Docflow.IDocumentRegister DocumentRegister
    {
      get
      {
        return this._DocumentRegister;
      }

      set
      {
        this.SetPropertyValue("DocumentRegister", this._DocumentRegister, value, (propertyValue) => { this._DocumentRegister = propertyValue; }, this.DocumentRegisterChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _DeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get
      {
        return this._DeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("DeliveryMethod", this._DeliveryMethod, value, (propertyValue) => { this._DeliveryMethod = propertyValue; }, this.DeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.Docflow.ICaseFile _CaseFile;
    public virtual global::Sungero.Docflow.ICaseFile CaseFile
    {
      get
      {
        return this._CaseFile;
      }

      set
      {
        this.SetPropertyValue("CaseFile", this._CaseFile, value, (propertyValue) => { this._CaseFile = propertyValue; }, this.CaseFileChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _DeliveredTo;
    public virtual global::Sungero.Company.IEmployee DeliveredTo
    {
      get
      {
        return this._DeliveredTo;
      }

      set
      {
        this.SetPropertyValue("DeliveredTo", this._DeliveredTo, value, (propertyValue) => { this._DeliveredTo = propertyValue; }, this.DeliveredToChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _ResponsibleForReturnEmployee;
    public virtual global::Sungero.Company.IEmployee ResponsibleForReturnEmployee
    {
      get
      {
        return this._ResponsibleForReturnEmployee;
      }

      set
      {
        this.SetPropertyValue("ResponsibleForReturnEmployee", this._ResponsibleForReturnEmployee, value, (propertyValue) => { this._ResponsibleForReturnEmployee = propertyValue; }, this.ResponsibleForReturnEmployeeChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentKind _DocumentKind;
    public virtual global::Sungero.Docflow.IDocumentKind DocumentKind
    {
      get
      {
        return this._DocumentKind;
      }

      set
      {
        this.SetPropertyValue("DocumentKind", this._DocumentKind, value, (propertyValue) => { this._DocumentKind = propertyValue; }, this.DocumentKindChangedHandler);
      }
    }
    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _OurSignatory;
    public virtual global::Sungero.Company.IEmployee OurSignatory
    {
      get
      {
        return this._OurSignatory;
      }

      set
      {
        this.SetPropertyValue("OurSignatory", this._OurSignatory, value, (propertyValue) => { this._OurSignatory = propertyValue; }, this.OurSignatoryChangedHandler);
      }
    }
    private global::Sungero.Docflow.IDocumentGroupBase _DocumentGroup;
    public virtual global::Sungero.Docflow.IDocumentGroupBase DocumentGroup
    {
      get
      {
        return this._DocumentGroup;
      }

      set
      {
        this.SetPropertyValue("DocumentGroup", this._DocumentGroup, value, (propertyValue) => { this._DocumentGroup = propertyValue; }, this.DocumentGroupChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _Department;
    public virtual global::Sungero.Company.IDepartment Department
    {
      get
      {
        return this._Department;
      }

      set
      {
        this.SetPropertyValue("Department", this._Department, value, (propertyValue) => { this._Department = propertyValue; }, this.DepartmentChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _PreparedBy;
    public virtual global::Sungero.Company.IEmployee PreparedBy
    {
      get
      {
        return this._PreparedBy;
      }

      set
      {
        this.SetPropertyValue("PreparedBy", this._PreparedBy, value, (propertyValue) => { this._PreparedBy = propertyValue; }, this.PreparedByChangedHandler);
      }
    }
    private global::Sungero.Docflow.IProjectBase _Project;
    public virtual global::Sungero.Docflow.IProjectBase Project
    {
      get
      {
        return this._Project;
      }

      set
      {
        this.SetPropertyValue("Project", this._Project, value, (propertyValue) => { this._Project = propertyValue; }, this.ProjectChangedHandler);
      }
    }
    private global::Sungero.Docflow.IOfficialDocument _LeadingDocument;
    public virtual global::Sungero.Docflow.IOfficialDocument LeadingDocument
    {
      get
      {
        return this._LeadingDocument;
      }

      set
      {
        this.SetPropertyValue("LeadingDocument", this._LeadingDocument, value, (propertyValue) => { this._LeadingDocument = propertyValue; }, this.LeadingDocumentChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.IStorage _Storage;
    public virtual global::Sungero.CoreEntities.IStorage Storage
    {
      get
      {
        return this._Storage;
      }

      set
      {
        this.SetPropertyValue("Storage", this._Storage, value, (propertyValue) => { this._Storage = propertyValue; }, this.StorageChangedHandler);
      }
    }
    private global::Sungero.Docflow.ISignatureSetting _OurSigningReason;
    public virtual global::Sungero.Docflow.ISignatureSetting OurSigningReason
    {
      get
      {
        return this._OurSigningReason;
      }

      set
      {
        this.SetPropertyValue("OurSigningReason", this._OurSigningReason, value, (propertyValue) => { this._OurSigningReason = propertyValue; }, this.OurSigningReasonChangedHandler);
      }
    }
    private global::Sungero.Docflow.ITopic _Topic;
    public virtual global::Sungero.Docflow.ITopic Topic
    {
      get
      {
        return this._Topic;
      }

      set
      {
        this.SetPropertyValue("Topic", this._Topic, value, (propertyValue) => { this._Topic = propertyValue; }, this.TopicChangedHandler);
      }
    }
    private global::Sungero.Docflow.ITopic _Subtopic;
    public virtual global::Sungero.Docflow.ITopic Subtopic
    {
      get
      {
        return this._Subtopic;
      }

      set
      {
        this.SetPropertyValue("Subtopic", this._Subtopic, value, (propertyValue) => { this._Subtopic = propertyValue; }, this.SubtopicChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> _Tracking;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> Tracking
    {
      get
      {
        if (this._Tracking == null)
        {
          this._Tracking = this.CreateTrackingCollection();
          this.SetTrackingEventHandlers();
        }
        return this._Tracking;
      }

      set
      {
        if (this._Tracking != null)
          this.UnsetChildCollectionEventHandlers(this._Tracking);

        this._Tracking = value;
        this.SetTrackingEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking>() { RootEntity = this };
    }

    private void SetTrackingEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Tracking, "Tracking");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Tracking;
      changeNotifier.Added += this.TrackingAddedHandler;
      changeNotifier.Deleted += this.TrackingDeletedHandler;
      changeNotifier.Added += this.TrackingCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.TrackingCollectionUpdateEventHandler;
      changeNotifier.Updated += this.TrackingCollectionUpdateEventHandler;
    }

    private void TrackingCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Tracking"))
        this.TrackingChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentVersions>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.OfficialDocumentCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IOfficialDocument)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.OfficialDocumentCreatingFromServerHandler((global::Sungero.Docflow.IOfficialDocument)entitySource, this.Info);
    }

    #region Framework events

    protected void RegistrationNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.RegistrationNumber, this.RegistrationNumber, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationNumberChanged(args);
    }

    protected void IndexChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Index, this.Index, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).IndexChanged(args);
    }

    protected void RegistrationDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.RegistrationDate, this.RegistrationDate, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationDateChanged(args);
    }

    protected void DocumentRegisterChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentRegisterChangedEventArgs(this.State.Properties.DocumentRegister, this.DocumentRegister, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DocumentRegisterChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void CaseFileChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentCaseFileChangedEventArgs(this.State.Properties.CaseFile, this.CaseFile, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).CaseFileChanged(args);
    }

    protected void PlacedToCaseFileDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.PlacedToCaseFileDate, this.PlacedToCaseFileDate, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).PlacedToCaseFileDateChanged(args);
    }

    protected void TrackingChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).TrackingChanged(args);
    }

    protected void IsReturnRequiredChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsReturnRequired, this.IsReturnRequired, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).IsReturnRequiredChanged(args);
    }

    protected void IsHeldByCounterPartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsHeldByCounterParty, this.IsHeldByCounterParty, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).IsHeldByCounterPartyChanged(args);
    }

    protected void DeliveredToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDeliveredToChangedEventArgs(this.State.Properties.DeliveredTo, this.DeliveredTo, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DeliveredToChanged(args);
    }

    protected void ReturnDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDeadline, this.ReturnDeadline, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDeadlineChanged(args);
    }

    protected void ReturnDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ReturnDate, this.ReturnDate, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ReturnDateChanged(args);
    }

    protected void LifeCycleStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.LifeCycleState, this.LifeCycleState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).LifeCycleStateChanged(args);
    }

    protected void RegistrationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RegistrationState, this.RegistrationState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).RegistrationStateChanged(args);
    }

    protected void InternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.InternalApprovalState, this.InternalApprovalState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).InternalApprovalStateChanged(args);
    }

    protected void ExternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExternalApprovalState, this.ExternalApprovalState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ExternalApprovalStateChanged(args);
    }

    protected void ExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExecutionState, this.ExecutionState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ExecutionStateChanged(args);
    }

    protected void ControlExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ControlExecutionState, this.ControlExecutionState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ControlExecutionStateChanged(args);
    }

    protected void LocationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.LocationState, this.LocationState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).LocationStateChanged(args);
    }

    protected void ResponsibleForReturnEmployeeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentResponsibleForReturnEmployeeChangedEventArgs(this.State.Properties.ResponsibleForReturnEmployee, this.ResponsibleForReturnEmployee, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ResponsibleForReturnEmployeeChanged(args);
    }

    protected void ScheduledReturnDateFromCounterpartyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ScheduledReturnDateFromCounterparty, this.ScheduledReturnDateFromCounterparty, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ScheduledReturnDateFromCounterpartyChanged(args);
    }

    protected void DocumentKindChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs(this.State.Properties.DocumentKind, this.DocumentKind, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DocumentKindChanged(args);
    }

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void SubjectChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Subject, this.Subject, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).SubjectChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void OurSignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentOurSignatoryChangedEventArgs(this.State.Properties.OurSignatory, this.OurSignatory, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).OurSignatoryChanged(args);
    }

    protected void DocumentGroupChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDocumentGroupChangedEventArgs(this.State.Properties.DocumentGroup, this.DocumentGroup, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DocumentGroupChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DepartmentChanged(args);
    }

    protected void PreparedByChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentPreparedByChangedEventArgs(this.State.Properties.PreparedBy, this.PreparedBy, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).PreparedByChanged(args);
    }

    protected void ProjectChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentProjectChangedEventArgs(this.State.Properties.Project, this.Project, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ProjectChanged(args);
    }

    protected void ExchangeStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExchangeState, this.ExchangeState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ExchangeStateChanged(args);
    }

    protected void LeadingDocumentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentLeadingDocumentChangedEventArgs(this.State.Properties.LeadingDocument, this.LeadingDocument, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).LeadingDocumentChanged(args);
    }

    protected void VerificationStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.VerificationState, this.VerificationState, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).VerificationStateChanged(args);
    }

    protected void DocumentDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.DocumentDate, this.DocumentDate, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).DocumentDateChanged(args);
    }

    protected void StorageChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentStorageChangedEventArgs(this.State.Properties.Storage, this.Storage, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).StorageChanged(args);
    }

    protected void OurSigningReasonChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentOurSigningReasonChangedEventArgs(this.State.Properties.OurSigningReason, this.OurSigningReason, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).OurSigningReasonChanged(args);
    }

    protected void ExternalIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ExternalId, this.ExternalId, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).ExternalIdChanged(args);
    }

    protected void PaperCountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.PaperCount, this.PaperCount, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).PaperCountChanged(args);
    }

    protected void LastVersionChangedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.LastVersionChanged, this.LastVersionChanged, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).LastVersionChangedChanged(args);
    }

    protected void AddendaPaperCountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.AddendaPaperCount, this.AddendaPaperCount, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).AddendaPaperCountChanged(args);
    }

    protected void StoredInChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.StoredIn, this.StoredIn, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).StoredInChanged(args);
    }

    protected void TopicChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentTopicChangedEventArgs(this.State.Properties.Topic, this.Topic, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).TopicChanged(args);
    }

    protected void SubtopicChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OfficialDocumentSubtopicChangedEventArgs(this.State.Properties.Subtopic, this.Subtopic, this);
     ((global::Sungero.Docflow.IOfficialDocumentSharedHandlers)this.SharedHandlers).SubtopicChanged(args);
    }



    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected override global::Sungero.Content.ElectronicDocumentVersionsSharedCollectionHandlers CreateVersionsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentVersionsSharedCollectionHandlers(this, null, e.Value, null);
    }



    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers CreateTrackingDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void TrackingAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("TrackingAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateTrackingAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.TrackingAdded(args);
        }
      }
    }

    protected virtual void TrackingDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OfficialDocumentTrackingSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("TrackingDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateTrackingDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.TrackingDeleted(args);
        }
      }
    }


    #endregion


    public OfficialDocument()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.OfficialDocumentConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Docflow.OfficialDocumentConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// OfficialDocumentHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OfficialDocumentDocumentRegisterPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentRegisterPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentRegister
  {

    public virtual global::System.Linq.IQueryable<T> DocumentRegisterSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDocumentRegisterSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentCaseFilePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentCaseFilePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentCaseFileSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ICaseFile
  {

    public virtual global::System.Linq.IQueryable<T> CaseFileSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentCaseFileSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDeliveredToPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveredToFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveredToPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> DeliveredToSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDeliveredToSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ResponsibleForReturnEmployeeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentResponsibleForReturnEmployeePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ResponsibleForReturnEmployeeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentResponsibleForReturnEmployeeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDocumentKindPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentKindPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentKind
  {

    public OfficialDocumentDocumentKindSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentBusinessUnitPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentOurSignatoryPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentOurSignatoryPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> OurSignatorySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentOurSignatorySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDocumentGroupPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentDocumentGroupPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IDocumentGroupBase
  {

    public virtual global::System.Linq.IQueryable<T> DocumentGroupSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDocumentGroupSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentAssigneePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentDepartmentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DepartmentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDepartmentPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentDepartmentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> DepartmentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentDepartmentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentPreparedByPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> PreparedByFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentPreparedByPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentPreparedBySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> PreparedBySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentPreparedBySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentProjectPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IProjectBase
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentProjectPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentProjectSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IProjectBase
  {

    public virtual global::System.Linq.IQueryable<T> ProjectSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentProjectSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentLeadingDocumentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> LeadingDocumentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentLeadingDocumentPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {

    public virtual global::System.Linq.IQueryable<T> LeadingDocumentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentLeadingDocumentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentStoragePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> StorageFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentStoragePropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentStorageSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IStorage
  {

    public virtual global::System.Linq.IQueryable<T> StorageSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentStorageSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentOurSigningReasonPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ISignatureSetting
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentOurSigningReasonPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentOurSigningReasonSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ISignatureSetting
  {

    public virtual global::System.Linq.IQueryable<T> OurSigningReasonSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentOurSigningReasonSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentTopicPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentTopicPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentTopicSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {

    public virtual global::System.Linq.IQueryable<T> TopicSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentTopicSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OfficialDocumentSubtopicPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentSubtopicPropertyFilteringServerHandler(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentSubtopicSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {

    public virtual global::System.Linq.IQueryable<T> SubtopicSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OfficialDocumentSubtopicSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class OfficialDocumentFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IOfficialDocumentFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IOfficialDocumentFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public OfficialDocumentFilteringServerHandler(global::Sungero.Docflow.IOfficialDocumentFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected OfficialDocumentFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class OfficialDocumentSearchDialogServerHandler : global::Sungero.Content.ElectronicDocumentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel)this.Dialog;
       }
     }

     public OfficialDocumentSearchDialogServerHandler(global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class OfficialDocumentServerHandlers : global::Sungero.Content.ElectronicDocumentServerHandlers
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentServerHandlers(global::Sungero.Docflow.IOfficialDocument entity)
      : base(entity)
    {
    }
  }

  public partial class OfficialDocumentCreatingFromServerHandler : global::Sungero.Content.ElectronicDocumentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IOfficialDocument _source
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Source; }
    }

    private global::Sungero.Docflow.IOfficialDocumentInfo _info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)this._Info; }
    }

    public OfficialDocumentCreatingFromServerHandler(global::Sungero.Docflow.IOfficialDocument source, global::Sungero.Docflow.IOfficialDocumentInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// OfficialDocumentEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// OfficialDocumentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OfficialDocumentAccessRights : 
    Sungero.Content.Server.ElectronicDocumentAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OfficialDocumentTypeAccessRights : 
    Sungero.Content.Server.ElectronicDocumentTypeAccessRights, Sungero.Docflow.IOfficialDocumentAccessRights
  {
           public bool CanRegister(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, recipient);
           }
           public bool CanRegister()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanRegister()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.Register);
           }
           public bool CanSendByExchange(global::Sungero.CoreEntities.IRecipient recipient)
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, recipient);
           }
           public bool CanSendByExchange()
           {
              return this.IsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange, null);
           }
           public global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> GetSubstitutedWhoCanSendByExchange()
           {
              return this.GetSubstitutedWhoIsGranted(global::Sungero.Docflow.OfficialDocumentOperations.SendByExchange);
           }


    public OfficialDocumentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// OfficialDocumentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OfficialDocumentRepositoryImplementer<T> : 
      global::Sungero.Content.Server.ElectronicDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IOfficialDocumentRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IOfficialDocument 
    {
       public new global::Sungero.Docflow.IOfficialDocumentAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IOfficialDocumentInfo Info
       {
          get { return (global::Sungero.Docflow.IOfficialDocumentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.OfficialDocumentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OfficialDocumentPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// OfficialDocumentServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class OfficialDocumentFunctions : global::Sungero.Content.Server.ElectronicDocumentFunctions
  {
    private global::Sungero.Docflow.IOfficialDocument _obj
    {
      get { return (global::Sungero.Docflow.IOfficialDocument)this.Entity; }
    }

    public OfficialDocumentFunctions(global::Sungero.Docflow.IOfficialDocument entity) : base(entity) { }
  }
}

// ==================================================================
// OfficialDocumentFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class OfficialDocument
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateViewXml(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateViewXml", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Content.IElectronicDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStateView",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) }, null);
        return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetStateView(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentSummary", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetTotalAmountDocumentSummary(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::System.Double> totalAmount)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTotalAmountDocumentSummary", new System.Type[] { typeof(global::System.Nullable<global::System.Double>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { totalAmount });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void AddUserActionBlock(System.Object stateView, global::Sungero.CoreEntities.IUser user, global::System.String text, global::System.DateTime date, global::Sungero.Domain.Shared.IEntity entity, global::System.String comment, global::Sungero.CoreEntities.IUser substituted)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddUserActionBlock",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(System.Object), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String), typeof(global::System.DateTime), typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { stateView, user, text, date, entity, comment, substituted });
      }
      else
      {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.AddUserActionBlock(stateView, user, text, date, entity, comment, substituted);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetAuthor(global::Sungero.CoreEntities.IUser author, global::Sungero.CoreEntities.IUser startedBy)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAuthor",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.CoreEntities.IUser), typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { author, startedBy });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetAuthor(author, startedBy);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetUserActionText(global::Sungero.CoreEntities.IUser user, global::System.String text, global::Sungero.CoreEntities.IUser substituted)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetUserActionText",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { user, text, substituted });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetUserActionText(user, text, substituted);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Int32 DurationInWorkdays(global::System.DateTime startDate, global::System.DateTime endDate, global::Sungero.CoreEntities.IUser user)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DurationInWorkdays",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { startDate, endDate, user });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.DurationInWorkdays(startDate, endDate, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void AddDeadlineHeaderToRight(Sungero.Core.StateBlock block, global::System.DateTime deadline, global::Sungero.CoreEntities.IUser user)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddDeadlineHeaderToRight",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { block, deadline, user });
      }
      else
      {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.AddDeadlineHeaderToRight(block, deadline, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetPerformersInText(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetPerformersInText",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employees });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetPerformersInText(employees);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Company.IEmployee employee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("FullName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employee });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Parties.IContact contact)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("FullName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IContact) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { contact });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(contact);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName FullName(global::Sungero.Parties.IPerson person)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("FullName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IPerson) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { person });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.FullName(person);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Company.IEmployee employee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("LastNameAndInitials",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employee });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Parties.IContact contact)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("LastNameAndInitials",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IContact) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { contact });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(contact);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName LastNameAndInitials(global::Sungero.Parties.IPerson counterparty)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("LastNameAndInitials",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IPerson) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { counterparty });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.LastNameAndInitials(counterparty);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Company.IEmployee employee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("InitialsAndLastName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employee });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Parties.IContact contact)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("InitialsAndLastName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IContact) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { contact });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(contact);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::CommonLibrary.PersonFullName InitialsAndLastName(global::Sungero.Parties.IPerson person)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("InitialsAndLastName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Parties.IPerson) }, null);
        return (global::CommonLibrary.PersonFullName)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { person });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.InitialsAndLastName(person);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String Addenda(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("Addenda",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.Addenda(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String PerformerNotes(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("PerformerNotes",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.PerformerNotes(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.CoreEntities.IRelationType GetRelationTypeByName(global::System.String relationName)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRelationTypeByName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String) }, null);
        return (global::Sungero.CoreEntities.IRelationType)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { relationName });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRelationTypeByName(relationName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetRelatedDocumentsByRelationType(global::Sungero.Docflow.IOfficialDocument document, global::System.String relationTypeName, global::System.Boolean withVersion)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRelatedDocumentsByRelationType",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.String), typeof(global::System.Boolean) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, relationTypeName, withVersion });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRelatedDocumentsByRelationType(document, relationTypeName, withVersion);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void RelateDocumentsToPrimaryDocumentAsAddenda(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RelateDocumentsToPrimaryDocumentAsAddenda", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { documents });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void PreparePreview(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("PreparePreview", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.IDialogParamsLite GetRegistrationDialogParams(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Core.Enumeration operation)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRegistrationDialogParams",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Core.Enumeration) }, null);
        return (global::Sungero.Docflow.Structures.OfficialDocument.IDialogParamsLite)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, operation });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetRegistrationDialogParams(document, operation);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean IsNumberValidationDisabled(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsNumberValidationDisabled", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetLocationState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLocationState", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsOnlyVersionChanged(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsOnlyVersionChanged", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetExchangeLocation(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExchangeLocation", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Exchange.Structures.Module.IOrganizationInfo GetSigningOrganizationFromExchangeInfo(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Domain.Shared.ISignature signature)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSigningOrganizationFromExchangeInfo", new System.Type[] { typeof(Sungero.Domain.Shared.ISignature) });
      return (global::Sungero.Exchange.Structures.Module.IOrganizationInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signature });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetTaskIdsWhereDocumentInRequredGroup(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskIdsWhereDocumentInRequredGroup", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSignatureForApprovalSheetReport(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasSignatureForApprovalSheetReport", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask> GetAcquaintanceTasks(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAcquaintanceTasks", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IAcquaintanceTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasAcquaintanceTasks(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::System.Int32> versionNumber, global::System.Boolean includeCompleted, global::System.Boolean includeAborted)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasAcquaintanceTasks", new System.Type[] { typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionNumber, includeCompleted, includeAborted });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IDocumentReviewTask> GetDocumentReviewTasks(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentReviewTasks", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IDocumentReviewTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetBusinessUnitCEO(global::Sungero.Company.IEmployee employee, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetBusinessUnitCEO",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employee, document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetBusinessUnitCEO(employee, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetSignatoriesIdsForCancellationAgreement(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatoriesIdsForCancellationAgreement", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsForCancellationAgreement(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsForCancellationAgreement", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetSignatoriesIds(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatoriesIds", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> ExpandSignatoriesBySignatureSettings(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ExpandSignatoriesBySignatureSettings", new System.Type[] { typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>) });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { settings });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean SignatorySettingWithAllUsersExist(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SignatorySettingWithAllUsersExist", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDefaultSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDefaultSignatory", new System.Type[] {  });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetAllRecipientMembersIdsInGroup(global::System.Int64 groupId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAllRecipientMembersIdsInGroup",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { groupId });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetAllRecipientMembersIdsInGroup(groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CanSignByEmployee(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanSignByEmployee", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.ISignatureSetting GetDefaultSignatureSetting(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee signatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDefaultSignatureSetting", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::Sungero.Docflow.ISignatureSetting)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsWithCertificateByEmployee(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsWithCertificateByEmployee", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsByEmployee(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsByEmployee", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsQuery(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsQuery", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsQuery(global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> businessUnits, global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> kinds, global::Sungero.Company.IDepartment department, global::System.Nullable<global::Sungero.Core.Enumeration> docflow)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetSignatureSettingsQuery",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind>), typeof(global::Sungero.Company.IDepartment), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) }, null);
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { businessUnits, kinds, department, docflow });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetSignatureSettingsQuery(businessUnits, kinds, department, docflow);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetBusinessUnits(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetBusinessUnits", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind> GetDocumentKinds(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentKinds", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentKind>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettings(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettings", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetInternalApprovalStateToSigned(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetInternalApprovalStateToSigned", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetDocumentSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentSignatory", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetOurSigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, Sungero.Domain.BeforeSigningEventArgs e, global::System.Boolean changedSignatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetOurSigningReason", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Domain.BeforeSigningEventArgs), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, e, changedSignatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.ISignatureSetting GetSuitableOurSigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean changedSignatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSuitableOurSigningReason", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean) });
      return (global::Sungero.Docflow.ISignatureSetting)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, certificate, changedSignatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetUnifiedRegistrationNumber(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, Sungero.Domain.Shared.ISignature signature, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetUnifiedRegistrationNumber", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Domain.Shared.ISignature), typeof(global::Sungero.CoreEntities.ICertificate) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, signature, certificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetUnifiedRegistrationNumber(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.ISignatureSetting ourSigningReason, Sungero.Domain.Shared.ISignature signature, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetUnifiedRegistrationNumber", new System.Type[] { typeof(global::Sungero.Docflow.ISignatureSetting), typeof(Sungero.Domain.Shared.ISignature), typeof(global::Sungero.CoreEntities.ICertificate) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { ourSigningReason, signature, certificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean OurSigningReasonIsValid(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.ISignatureSetting ourSigningReason, global::Sungero.CoreEntities.ICertificate certificate, global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("OurSigningReasonIsValid", new System.Type[] { typeof(global::Sungero.Docflow.ISignatureSetting), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { ourSigningReason, certificate, settings });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IFormalizedPowerOfAttorney GetFormalizedPoA(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFormalizedPoA", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.CoreEntities.ICertificate) });
      return (global::Sungero.Docflow.IFormalizedPowerOfAttorney)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, certificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String GetFormalizedPoAUnifiedRegNo(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFormalizedPoAUnifiedRegNo", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.CoreEntities.ICertificate) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, certificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetReturnAssignments(global::Sungero.Workflow.ITask returnTask)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetReturnAssignments",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { returnTask });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetReturnAssignments(returnTask);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetReturnAssignments(global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> returnTasks)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetReturnAssignments",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.ITask>) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { returnTasks });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetReturnAssignments(returnTasks);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.String> GetApprovalValidationErrors(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean checkSignatureSettings)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetApprovalValidationErrors", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { checkSignatureSettings });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.String> GetDocumentLockErrors(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentLockErrors", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.Structures.OfficialDocument.HistoryOperation> StatusChangeHistoryOperations(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Content.DocumentHistoryEventArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("StatusChangeHistoryOperations", new System.Type[] { typeof(Sungero.Content.DocumentHistoryEventArgs) });
      return (System.Collections.Generic.IEnumerable<global::Sungero.Docflow.Structures.OfficialDocument.HistoryOperation>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetHistoryOperationByLifeCycleState(global::System.Nullable<global::Sungero.Core.Enumeration> state, global::System.String statePrefix, global::System.Boolean isUpdateAction)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetHistoryOperationByLifeCycleState",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.String), typeof(global::System.Boolean) }, null);
        return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { state, statePrefix, isUpdateAction });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetHistoryOperationByLifeCycleState(state, statePrefix, isUpdateAction);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetHistoryOperationTextByLifeCycleState(global::System.Nullable<global::Sungero.Core.Enumeration> state, global::System.String statePrefix, global::System.Boolean isUpdateAction)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetHistoryOperationTextByLifeCycleState",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.String), typeof(global::System.Boolean) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { state, statePrefix, isUpdateAction });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetHistoryOperationTextByLifeCycleState(state, statePrefix, isUpdateAction);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void WriteStatusChangeHistory(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Content.DocumentHistoryEventArgs e, System.Collections.Generic.IEnumerable<global::Sungero.Docflow.Structures.OfficialDocument.HistoryOperation> operations, global::System.Boolean historyRecordOverwritten)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("WriteStatusChangeHistory", new System.Type[] { typeof(Sungero.Content.DocumentHistoryEventArgs), typeof(System.Collections.Generic.IEnumerable<global::Sungero.Docflow.Structures.OfficialDocument.HistoryOperation>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e, operations, historyRecordOverwritten });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRules(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetApprovalRules", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IApprovalRuleBase GetDefaultApprovalRule(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDefaultApprovalRule", new System.Type[] {  });
      return (global::Sungero.Docflow.IApprovalRuleBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IDocumentKind GetDefaultDocumentKind(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDefaultDocumentKind", new System.Type[] {  });
      return (global::Sungero.Docflow.IDocumentKind)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CanChangeAssignee(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanChangeAssignee", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.IOfficialDocumentParams GetOfficialDocumentParams(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetOfficialDocumentParams", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.OfficialDocument.IOfficialDocumentParams)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedValidateOurSignatorySignatureSetting(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedValidateOurSignatorySignatureSetting", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean IsExchangeDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsExchangeDocument", new System.Type[] { typeof(global::System.Int64) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean CanSendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanSendAnswer", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Parties.ICounterparty party, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendAnswer", new System.Type[] { typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { box, party, certificate, isAgent });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean TryExternalRegister(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("TryExternalRegister", new System.Type[] { typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { number, date });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.IOfficialDocument GetOfficialDocument(global::System.Int64 id)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetOfficialDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { id });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetOfficialDocument(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IOfficialDocument CreateReplyDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateReplyDocument", new System.Type[] {  });
      return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void GrantAccessRightsToActionItemAttachment(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToActionItemAttachment", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void CreatePdfPublicBodyFromHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String sourceHtml)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreatePdfPublicBodyFromHtml", new System.Type[] { typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { sourceHtml });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void DeleteDocument(global::System.Int64 documentId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DeleteDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { documentId });
      }
      else
      {
    global::Sungero.Docflow.Server.OfficialDocumentFunctions.DeleteDocument(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void StartActionItemTasksFromDialog(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("StartActionItemTasksFromDialog", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItems });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean TryDeleteActionItemTask(global::System.Int64 actionItemId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("TryDeleteActionItemTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { actionItemId });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.TryDeleteActionItemTask(actionItemId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionTask> GetCreatedActionItems(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCreatedActionItems", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetFirstLevelActionItems(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFirstLevelActionItems", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> CreateActionItemsFromDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateActionItemsFromDocument", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IMinutesActionItem> GetActionItemsProperties(global::Sungero.Docflow.IOfficialDocument officialDocument, System.IO.Stream stream)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemsProperties", new System.Type[] { typeof(System.IO.Stream) });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IMinutesActionItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stream });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.String> GetDocumentActionItemTableTags(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentActionItemTableTags", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckAllPropertiesFilled(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.Structures.Module.IMinutesActionItem actionItemProperties)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckAllPropertiesFilled", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.IMinutesActionItem) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemProperties });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillActionItemExecutionTaskCommonProperties(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillActionItemExecutionTaskCommonProperties", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItem });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemFromProperties(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.Structures.Module.IMinutesActionItem actionItemProperties)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateActionItemFromProperties", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.IMinutesActionItem) });
      return (global::Sungero.RecordManagement.IActionItemExecutionTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemProperties });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillActionItemProperty(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem, global::System.String propertyName, global::System.String propertyValue)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillActionItemProperty", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.String), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItem, propertyName, propertyValue });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetDateFromText(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String dateTimeText)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDateFromText", new System.Type[] { typeof(global::System.String) });
      return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { dateTimeText });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromText(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String employeesText)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetEmployeesFromText", new System.Type[] { typeof(global::System.String) });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employeesText });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillActionItemExecutionTaskOnCreatedFromDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillActionItemExecutionTaskOnCreatedFromDocument", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItem });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsExecutionTasks(global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemsExecutionTasks",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Collections.Generic.List<global::System.Int64>) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { ids });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.GetActionItemsExecutionTasks(ids);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult ConvertToPdfWithSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ConvertToPdfWithSignatureMark", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void CreateConvertToPdfAndAddSignatureMarkAsyncHandler(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateConvertToPdfAndAddSignatureMarkAsyncHandler", new System.Type[] { typeof(global::System.Int64) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult ConvertToPdfAndAddSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ConvertToPdfAndAddSignatureMark", new System.Type[] { typeof(global::System.Int64) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult ValidateDocumentBeforeConvertion(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateDocumentBeforeConvertion", new System.Type[] { typeof(global::System.Int64) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult GeneratePublicBodyWithSignatureMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId, global::System.String signatureMark)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GeneratePublicBodyWithSignatureMark", new System.Type[] { typeof(global::System.Int64), typeof(global::System.String) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId, signatureMark });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureMarkAsHtml", new System.Type[] { typeof(global::System.Int64) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.IVersionBody GetBodyToConvertToPdf(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Content.IElectronicDocumentVersions version, global::System.Boolean isSignatureMark)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetBodyToConvertToPdf", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::System.Boolean) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.IVersionBody)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { version, isSignatureMark });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureForMark", new System.Type[] { typeof(global::System.Int64) });
      return (Sungero.Domain.Shared.ISignature)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId, global::System.Boolean includeExternalSignature)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureForMark", new System.Type[] { typeof(global::System.Int64), typeof(global::System.Boolean) });
      return (Sungero.Domain.Shared.ISignature)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId, includeExternalSignature });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  Sungero.Domain.Shared.ISignature GetSignatureFromOurSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureFromOurSignatory", new System.Type[] { typeof(global::System.Int64) });
      return (Sungero.Domain.Shared.ISignature)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetStampSettings(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStampSettings", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanConvertToPdfInteractively(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanConvertToPdfInteractively", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckPdfConvertibilityByExtension(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String extension)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckPdfConvertibilityByExtension", new System.Type[] { typeof(global::System.String) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { extension });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult ConvertToPdfAndAddRegistrationStamp(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId, global::System.String registrationStamp, global::System.Double rightIndent, global::System.Double bottomIndent)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ConvertToPdfAndAddRegistrationStamp", new System.Type[] { typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Double), typeof(global::System.Double) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionId, registrationStamp, rightIndent, bottomIndent });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetRegistrationStampAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRegistrationStampAsHtml", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void StoreVerifiedPropertiesValues(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("StoreVerifiedPropertiesValues", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillPropertyStatus(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Commons.IEntityRecognitionInfo recognitionInfo, global::System.String propertyName)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillPropertyStatus", new System.Type[] { typeof(global::Sungero.Commons.IEntityRecognitionInfo), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { recognitionInfo, propertyName });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetPropertyValue(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String propertyName)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPropertyValue", new System.Type[] { typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { propertyName });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<Sungero.Domain.Shared.IPropertyInfo> GetSmartProcessingSupportedProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSmartProcessingSupportedProperties", new System.Type[] {  });
      return (global::System.Collections.Generic.List<Sungero.Domain.Shared.IPropertyInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Boolean HasApprovalTasksWithCurrentDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasApprovalTasksWithCurrentDocument", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasActionItemExecutionTasks(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasActionItemExecutionTasks", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> CaseFileFiltering(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CaseFileFiltering", new System.Type[] { typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>) });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { query });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetLifeCycleStateDraft(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetLifeCycleStateDraft", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsSupportedLifeCycleState(global::Sungero.Content.IElectronicDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsSupportedLifeCycleState",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OfficialDocumentFunctions.IsSupportedLifeCycleState(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetControlExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetControlExecutionState", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetExecutionState", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { state });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetControlExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetControlExecutionState", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { state });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.Guid GetAvailableAccessRights(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAvailableAccessRights", new System.Type[] {  });
      return (global::System.Guid)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void CopyAccessRightsToDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.IOfficialDocument document, global::System.Guid accessRightsLimit)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CopyAccessRightsToDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Guid) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, accessRightsLimit });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSpecifiedTypeRelations(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasSpecifiedTypeRelations", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentComparisonInfo> GetComparisonResults(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetComparisonResults", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentComparisonInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetNoteWithCounterpartySigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetNoteWithCounterpartySigningReason", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String GetVersionBodyHash(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Content.IElectronicDocumentVersions version)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetVersionBodyHash", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocumentVersions) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { version });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  global::System.String ValidateBodyAndSignature(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateBodyAndSignature", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void WriteBytesToDocumentLastVersionBody(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.Structures.Module.IByteArray bytes, global::System.String extension)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("WriteBytesToDocumentLastVersionBody", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.IByteArray), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { bytes, extension });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void FillSentDate(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Parties.ICounterparty correspondent)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillSentDate", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { correspondent });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    internal static  void SetDocumentAssignee(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee assignee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentAssignee", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ICancellationAgreementCreatingResult CreateCancellationAgreement(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee ourSignatory, global::System.String reason)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCancellationAgreement", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::System.String) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ICancellationAgreementCreatingResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { ourSignatory, reason });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OfficialDocumentFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SendDocuments(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendDocuments", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Int64 GetLeadDocumentId(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLeadDocumentId", new System.Type[] {  });
      return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetLeadDocumentNumber(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLeadDocumentNumber", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RegisterDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IDocumentRegister documentRegister, global::System.Nullable<global::System.DateTime> registrationDate, global::System.String registrationNumber, global::System.Nullable<global::System.Boolean> numberReservation, global::System.Boolean needSaveDocument)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("RegisterDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Docflow.IDocumentRegister), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.String), typeof(global::System.Nullable<global::System.Boolean>), typeof(global::System.Boolean) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, documentRegister, registrationDate, registrationNumber, numberReservation, needSaveDocument });
      }
      else
      {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.RegisterDocument(document, documentRegister, registrationDate, registrationNumber, numberReservation, needSaveDocument);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillCaseFileAndDeliveryMethod(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("FillCaseFileAndDeliveryMethod",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Docflow.IDocumentRegister) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, documentRegister });
      }
      else
      {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.FillCaseFileAndDeliveryMethod(document, documentRegister);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckRegistrationNumberUnique(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckRegistrationNumberUnique", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetCancelRegistrationDialogDescription(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCancelRegistrationDialogDescription", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { settingType });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetRegistrationOperation()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRegistrationOperation",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetRegistrationOperation();
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetDeletedTrackingRecords(global::Sungero.Docflow.IOfficialDocument entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDeletedTrackingRecords",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDeletedTrackingRecords(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetTrackingRecordsWithEmployeeChanged(global::Sungero.Docflow.IOfficialDocument entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetTrackingRecordsWithEmployeeChanged",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetTrackingRecordsWithEmployeeChanged(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetChangedTrackingRecordsWithTasksInProcess(global::Sungero.Docflow.IOfficialDocument entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetChangedTrackingRecordsWithTasksInProcess",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetChangedTrackingRecordsWithTasksInProcess(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking> GetTrackingRecordsWithDeadlineChanged(global::Sungero.Docflow.IOfficialDocument entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetTrackingRecordsWithDeadlineChanged",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IOfficialDocumentTracking>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetTrackingRecordsWithDeadlineChanged(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetDocumentRegistersByDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDocumentRegistersByDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDocumentRegistersByDocument(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetDocumentRegistersIdsByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDocumentRegistersIdsByDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) }, null);
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, settingType });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetDocumentRegistersIdsByDocument(document, settingType);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean HasDocumentRegistersByDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> settingType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasDocumentRegistersByDocument", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { settingType });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanChangeRequisitesOrCancelRegistration(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanChangeRequisitesOrCancelRegistration", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetSettingType(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetSettingType",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.GetSettingType(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RefreshDocumentForm(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshDocumentForm", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedShowRegistrationPane(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean additionalCondition)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedShowRegistrationPane", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { additionalCondition });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, repeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void CreateParamsCache(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateParamsCache", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCounterpartyPropertyAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, counterpartyCodeInNumber });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber, global::System.Boolean enabledState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCounterpartyPropertyAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, counterpartyCodeInNumber, enabledState });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeRegistrationPaneVisibility", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needShow, repeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean DefaultRegistrationPaneVisibility(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DefaultRegistrationPaneVisibility", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeOurSigningReasonVisibility(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeOurSigningReasonVisibility", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean GetShowOurSigningReasonParam(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetShowOurSigningReasonParam", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateLifeCycle", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { registrationState, approvalState, counterpartyApprovalState });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsLifeCycleMustBeActive(global::System.Nullable<global::Sungero.Core.Enumeration> direction, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsLifeCycleMustBeActive",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { direction, approvalState, counterpartyApprovalState });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.IsLifeCycleMustBeActive(direction, approvalState, counterpartyApprovalState);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetLifeCycleState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetLifeCycleState", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void SetObsolete(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isActive)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetObsolete", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isActive });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsObsolete(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> lifeCycleState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsObsolete", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { lifeCycleState });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsObsolete(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsObsolete", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IDocumentGroupBase GetDocumentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentGroup", new System.Type[] {  });
      return (global::Sungero.Docflow.IDocumentGroupBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetCounterparties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterparties", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetCounterpartyCode(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyCode", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDocumentResponsibleEmployee(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentResponsibleEmployee", new System.Type[] {  });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationGroup GetRegistrationGroup(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRegistrationGroup", new System.Type[] {  });
      return (global::Sungero.Docflow.IRegistrationGroup)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAddressees(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddressees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee> GetEmailAddressees(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetEmailAddressees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.IProjectBase GetProject(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetProject", new System.Type[] {  });
      return (global::Sungero.Docflow.IProjectBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetCounterpartySigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartySigningReason", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillCounterpartySignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Parties.IContact signatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillCounterpartySignatory", new System.Type[] { typeof(global::Sungero.Parties.IContact) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signatory });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillCounterpartySigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String signingReason)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillCounterpartySigningReason", new System.Type[] { typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signingReason });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillLeadingDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillLeadingDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { leadingDocument });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillOrganizationStructure(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillOrganizationStructure", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillName(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String GetGeneratedDocumentName(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetGeneratedDocumentName", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String AddClosingQuote(global::System.String name, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddClosingQuote",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { name, document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.AddClosingQuote(name, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.String AddClosingQuoteToSubject(global::System.String subject, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddClosingQuoteToSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { subject, document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OfficialDocumentFunctions.AddClosingQuoteToSubject(subject, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillRequiredProperties(global::Sungero.Docflow.IOfficialDocument officialDocument, System.Collections.Generic.IDictionary<global::System.String, System.Object> properties)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillRequiredProperties", new System.Type[] { typeof(System.Collections.Generic.IDictionary<global::System.String, System.Object>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { properties });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void FillDocumentNamePropertyByGenerateSetting(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String name)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillDocumentNamePropertyByGenerateSetting", new System.Type[] { typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { name });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult GetExtensionValidationError(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String extension)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExtensionValidationError", new System.Type[] { typeof(global::System.String) });
      return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { extension });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void DocumentAttachedInMainGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Workflow.ITask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DocumentAttachedInMainGroup", new System.Type[] { typeof(global::Sungero.Workflow.ITask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableLeadingDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedDisableLeadingDocument", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableBusinessUnit(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedDisableBusinessUnit", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedDisableDepartment(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedDisableDepartment", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Nullable<global::System.Boolean> NeedDisablePropertyByRegistration(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedDisablePropertyByRegistration", new System.Type[] {  });
      return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetAddenda(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void RemoveRelatedDocumentsFromAttachmentGroup(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemoveRelatedDocumentsFromAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void CopyProjects(global::Sungero.Docflow.IOfficialDocument mainDocument, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OfficialDocumentFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("CopyProjects",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { mainDocument, document });
      }
      else
      {
    global::Sungero.Docflow.Shared.OfficialDocumentFunctions.CopyProjects(mainDocument, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedClearProject(global::Sungero.Docflow.IOfficialDocument officialDocument, Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedClearProject", new System.Type[] { typeof(Sungero.Docflow.Shared.OfficialDocumentDocumentKindChangedEventArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CheckDeleteEntityAccessRights(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckDeleteEntityAccessRights", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ClearBusinessUnit(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.IDocumentKind documentKind)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ClearBusinessUnit", new System.Type[] { typeof(global::Sungero.Docflow.IDocumentKind) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { documentKind });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsProjectDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::System.Int64> leadingDocumentIds)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsProjectDocument", new System.Type[] { typeof(global::System.Collections.Generic.List<global::System.Int64>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { leadingDocumentIds });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanSignLockedDocument(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanSignLockedDocument", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanDeleteVersion(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::System.Int32> versionNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanDeleteVersion", new System.Type[] { typeof(global::System.Nullable<global::System.Int32>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionNumber });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean CanHideVersion(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::System.Int32> versionNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanHideVersion", new System.Type[] { typeof(global::System.Nullable<global::System.Int32>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionNumber });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean NeedCounterpartySign(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.Boolean isPrimaryDocument, global::System.Boolean needSign)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedCounterpartySign", new System.Type[] { typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { senderBox, isPrimaryDocument, needSign });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsVerificationModeSupported", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean IsNumerationSucceed(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsNumerationSucceed", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void EnableRequisitesForVerification(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("EnableRequisitesForVerification", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void EnableRegistrationNumberAndDate(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("EnableRegistrationNumberAndDate", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Boolean isEnabled)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCounterpartyPropertyAccess", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OfficialDocumentFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)officialDocument).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasEmptyRequiredProperties", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// OfficialDocumentServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OfficialDocumentServerPublicFunctions : global::Sungero.Docflow.Server.IOfficialDocumentServerPublicFunctions
  {
    public void AddDeadlineHeaderToRight(Sungero.Core.StateBlock block, global::System.DateTime deadline, global::Sungero.CoreEntities.IUser user)
    {
global::Sungero.Docflow.Functions.OfficialDocument.AddDeadlineHeaderToRight(block, deadline, user);
    }
    public void AddUserActionBlock(System.Object stateView, global::Sungero.CoreEntities.IUser user, global::System.String text, global::System.DateTime date, global::Sungero.Domain.Shared.IEntity entity, global::System.String comment, global::Sungero.CoreEntities.IUser substituted)
    {
global::Sungero.Docflow.Functions.OfficialDocument.AddUserActionBlock(stateView, user, text, date, entity, comment, substituted);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> CaseFileFiltering(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.CaseFileFiltering(officialDocument, query);
    }
    public global::System.Boolean CheckPdfConvertibilityByExtension(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String extension)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.CheckPdfConvertibilityByExtension(officialDocument, extension);
    }
    public void CopyAccessRightsToDocument(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.IOfficialDocument document, global::System.Guid accessRightsLimit)
    {
global::Sungero.Docflow.Functions.OfficialDocument.CopyAccessRightsToDocument(officialDocument, document, accessRightsLimit);
    }
    public void CreatePdfPublicBodyFromHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String sourceHtml)
    {
global::Sungero.Docflow.Functions.OfficialDocument.CreatePdfPublicBodyFromHtml(officialDocument, sourceHtml);
    }
    public global::System.Int32 DurationInWorkdays(global::System.DateTime startDate, global::System.DateTime endDate, global::Sungero.CoreEntities.IUser user)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.DurationInWorkdays(startDate, endDate, user);
    }
    public void FillSentDate(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Parties.ICounterparty correspondent)
    {
global::Sungero.Docflow.Functions.OfficialDocument.FillSentDate(officialDocument, correspondent);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetAllRecipientMembersIdsInGroup(global::System.Int64 groupId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetAllRecipientMembersIdsInGroup(groupId);
    }
    public global::System.String GetAuthor(global::Sungero.CoreEntities.IUser author, global::Sungero.CoreEntities.IUser startedBy)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetAuthor(author, startedBy);
    }
    public global::System.Guid GetAvailableAccessRights(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetAvailableAccessRights(officialDocument);
    }
    public global::Sungero.Docflow.Structures.OfficialDocument.IVersionBody GetBodyToConvertToPdf(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Content.IElectronicDocumentVersions version, global::System.Boolean isSignatureMark)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetBodyToConvertToPdf(officialDocument, version, isSignatureMark);
    }
    public global::System.Nullable<global::Sungero.Core.Enumeration> GetControlExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetControlExecutionState(officialDocument);
    }
    public global::Sungero.Docflow.IDocumentKind GetDefaultDocumentKind(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetDefaultDocumentKind(officialDocument);
    }
    public global::System.Collections.Generic.List<global::Sungero.RecordManagement.IDocumentReviewTask> GetDocumentReviewTasks(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetDocumentReviewTasks(officialDocument);
    }
    public global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetFirstLevelActionItems(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetFirstLevelActionItems(officialDocument);
    }
    public global::Sungero.Docflow.IFormalizedPowerOfAttorney GetFormalizedPoA(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee, global::Sungero.CoreEntities.ICertificate certificate)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetFormalizedPoA(officialDocument, employee, certificate);
    }
    public global::System.String GetNoteWithCounterpartySigningReason(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetNoteWithCounterpartySigningReason(officialDocument);
    }
    public global::System.String GetPerformersInText(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetPerformersInText(employees);
    }
    public global::System.String GetRegistrationStampAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetRegistrationStampAsHtml(officialDocument);
    }
    public Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureForMark(officialDocument, versionId);
    }
    public Sungero.Domain.Shared.ISignature GetSignatureForMark(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId, global::System.Boolean includeExternalSignature)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureForMark(officialDocument, versionId, includeExternalSignature);
    }
    public Sungero.Domain.Shared.ISignature GetSignatureFromOurSignatory(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureFromOurSignatory(officialDocument, versionId);
    }
    public global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Int64 versionId)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureMarkAsHtml(officialDocument, versionId);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsForCancellationAgreement(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSignatureSettingsForCancellationAgreement(officialDocument);
    }
    public global::System.Collections.Generic.List<Sungero.Domain.Shared.IPropertyInfo> GetSmartProcessingSupportedProperties(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetSmartProcessingSupportedProperties(officialDocument);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetStampSettings(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetStampSettings(officialDocument);
    }
    public global::Sungero.Core.StateView GetStateView(global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetStateView(document);
    }
    public global::System.String GetUserActionText(global::Sungero.CoreEntities.IUser user, global::System.String text, global::Sungero.CoreEntities.IUser substituted)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetUserActionText(user, text, substituted);
    }
    public global::System.String GetVersionBodyHash(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Content.IElectronicDocumentVersions version)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.GetVersionBodyHash(officialDocument, version);
    }
    public void GrantAccessRightsToActionItemAttachment(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee employee)
    {
global::Sungero.Docflow.Functions.OfficialDocument.GrantAccessRightsToActionItemAttachment(officialDocument, employee);
    }
    public global::System.Boolean IsSupportedLifeCycleState(global::Sungero.Content.IElectronicDocument document)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.IsSupportedLifeCycleState(document);
    }
    public global::System.Boolean OurSigningReasonIsValid(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.ISignatureSetting ourSigningReason, global::Sungero.CoreEntities.ICertificate certificate, global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.OurSigningReasonIsValid(officialDocument, ourSigningReason, certificate, settings);
    }
    public void PreparePreview(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
global::Sungero.Docflow.Functions.OfficialDocument.PreparePreview(officialDocument);
    }
    public void RelateDocumentsToPrimaryDocumentAsAddenda(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents)
    {
global::Sungero.Docflow.Functions.OfficialDocument.RelateDocumentsToPrimaryDocumentAsAddenda(officialDocument, documents);
    }
    public void SendAnswer(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Parties.ICounterparty party, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Docflow.Functions.OfficialDocument.SendAnswer(officialDocument, box, party, certificate, isAgent);
    }
    public void SetControlExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
global::Sungero.Docflow.Functions.OfficialDocument.SetControlExecutionState(officialDocument, state);
    }
    public void SetDocumentAssignee(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Company.IEmployee assignee)
    {
global::Sungero.Docflow.Functions.OfficialDocument.SetDocumentAssignee(officialDocument, assignee);
    }
    public void SetExecutionState(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
global::Sungero.Docflow.Functions.OfficialDocument.SetExecutionState(officialDocument, state);
    }
    public void StartActionItemTasksFromDialog(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItems)
    {
global::Sungero.Docflow.Functions.OfficialDocument.StartActionItemTasksFromDialog(officialDocument, actionItems);
    }
    public void StoreVerifiedPropertiesValues(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
global::Sungero.Docflow.Functions.OfficialDocument.StoreVerifiedPropertiesValues(officialDocument);
    }
    public global::System.Boolean TryExternalRegister(global::Sungero.Docflow.IOfficialDocument officialDocument, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.TryExternalRegister(officialDocument, number, date);
    }
    public global::System.String ValidateBodyAndSignature(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      return global::Sungero.Docflow.Functions.OfficialDocument.ValidateBodyAndSignature(officialDocument);
    }
    public void WriteBytesToDocumentLastVersionBody(global::Sungero.Docflow.IOfficialDocument officialDocument, global::Sungero.Docflow.Structures.Module.IByteArray bytes, global::System.String extension)
    {
global::Sungero.Docflow.Functions.OfficialDocument.WriteBytesToDocumentLastVersionBody(officialDocument, bytes, extension);
    }
  }
}

// ==================================================================
// OfficialDocumentQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class OfficialDocument
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.OfficialDocument.OfficialDocumentQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// OfficialDocumentServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OfficialDocumentConvertingFromServerHandler : global::Sungero.Content.ElectronicDocumentConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IOfficialDocumentInfo _info
    {
      get { return (global::Sungero.Docflow.IOfficialDocumentInfo)this._Info; }
    }

    public OfficialDocumentConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IOfficialDocumentInfo info)
      : base(source, info)
    {
    }
  }
}
