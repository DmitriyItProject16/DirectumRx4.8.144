
// ==================================================================
// OutgoingInvoiceState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class OutgoingInvoiceState : 
    global::Sungero.Docflow.Shared.AccountingDocumentBaseState, global::Sungero.Contracts.IOutgoingInvoiceState
  {
    public OutgoingInvoiceState(global::Sungero.Contracts.IOutgoingInvoice entity) : base(entity) { }

    public new global::Sungero.Contracts.IOutgoingInvoicePropertyStates Properties
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoicePropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoicePropertyStates(entity);
    }


    public new global::Sungero.Contracts.IOutgoingInvoiceControlStates Controls
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoiceControlStates(entity);
    }

    public new global::Sungero.Contracts.IOutgoingInvoicePageStates Pages
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoicePageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoicePageStates(entity);
    }

  }


  public class OutgoingInvoiceControlStates : 
    global::Sungero.Docflow.Shared.AccountingDocumentBaseControlStates, global::Sungero.Contracts.IOutgoingInvoiceControlStates
  {

    protected internal OutgoingInvoiceControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class OutgoingInvoicePageStates : 
    global::Sungero.Docflow.Shared.AccountingDocumentBasePageStates, global::Sungero.Contracts.IOutgoingInvoicePageStates
  {

    protected internal OutgoingInvoicePageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class OutgoingInvoicePropertyStates : 
    global::Sungero.Docflow.Shared.AccountingDocumentBasePropertyStates, global::Sungero.Contracts.IOutgoingInvoicePropertyStates
  {
            public new global::Sungero.Contracts.IOutgoingInvoiceVersionsCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceVersions> Versions
            {
              get { return (global::Sungero.Contracts.IOutgoingInvoiceVersionsCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.OutgoingInvoiceVersionsCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceVersions>(entity, propertyName);
            }
            public new global::Sungero.Contracts.IOutgoingInvoiceTrackingCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceTracking> Tracking
            {
              get { return (global::Sungero.Contracts.IOutgoingInvoiceTrackingCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.OutgoingInvoiceTrackingCollectionPropertyState<global::Sungero.Contracts.IOutgoingInvoiceTracking>(entity, propertyName);
            }


    protected internal OutgoingInvoicePropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// OutgoingInvoiceInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class OutgoingInvoiceInfo : 
    global::Sungero.Docflow.Shared.AccountingDocumentBaseInfo, global::Sungero.Contracts.IOutgoingInvoiceInfo
  {
    public OutgoingInvoiceInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.IOutgoingInvoicePropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoicePropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoicePropertiesInfo(entityType);
    }

  }

  public class OutgoingInvoicePropertiesInfo : 
    global::Sungero.Docflow.Shared.AccountingDocumentBasePropertiesInfo, global::Sungero.Contracts.IOutgoingInvoicePropertiesInfo
  {
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IOutgoingInvoiceVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IOutgoingInvoiceVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.IOutgoingInvoiceTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.IOutgoingInvoiceTrackingPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal OutgoingInvoicePropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// OutgoingInvoiceHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class OutgoingInvoiceSharedHandlers : global::Sungero.Docflow.AccountingDocumentBaseSharedHandlers, IOutgoingInvoiceSharedHandlers
  {
    private global::Sungero.Contracts.IOutgoingInvoice _obj
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoice)this.Entity; }
    }


    public OutgoingInvoiceSharedHandlers(global::Sungero.Contracts.IOutgoingInvoice entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// OutgoingInvoiceResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.OutgoingInvoice
{
  /// <summary>
  /// Represents OutgoingInvoice resources.
  /// </summary>
  public class OutgoingInvoiceResources : global::Sungero.Docflow.Shared.AccountingDocumentBase.AccountingDocumentBaseResources, global::Sungero.Contracts.OutgoingInvoice.IOutgoingInvoiceResources
  {
    public override global::CommonLibrary.LocalizedString NamePartForContractor
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IOutgoingInvoice) , "NamePartForContractor");
      }
    }

    public override global::CommonLibrary.LocalizedString NamePartForContractorFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.IOutgoingInvoice), "NamePartForContractor", false, args);
    }

  }
}

// ==================================================================
// OutgoingInvoiceSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class OutgoingInvoiceFunctions : global::Sungero.Docflow.Shared.AccountingDocumentBaseFunctions
  {
    private global::Sungero.Contracts.IOutgoingInvoice _obj
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoice)this.Entity; }
    }

    public OutgoingInvoiceFunctions(global::Sungero.Contracts.IOutgoingInvoice entity) : base(entity) { }
  }
}

// ==================================================================
// OutgoingInvoiceFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class OutgoingInvoice
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  void FillName(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateLifeCycle", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { registrationState, approvalState, counterpartyApprovalState });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee> GetEmailAddressees(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetEmailAddressees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  global::System.Boolean NeedCounterpartySign(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.Boolean isPrimaryDocument, global::System.Boolean needSign)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedCounterpartySign", new System.Type[] { typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { senderBox, isPrimaryDocument, needSign });
    }

  }
}

// ==================================================================
// OutgoingInvoiceFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.OutgoingInvoice
{

  public class OutgoingInvoiceFilterInfo : global::Sungero.Docflow.Shared.AccountingDocumentBase.AccountingDocumentBaseFilterInfo,
    global::Sungero.Contracts.IOutgoingInvoiceFilterInfo
  {
    public global::Sungero.Domain.Shared.IFilterControlInfo PaidState
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("PaidState");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Last7daysInvoice
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Last7daysInvoice");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo Last30daysInvoice
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("Last30daysInvoice");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo ManualPeriodInvoice
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("ManualPeriodInvoice");
      }
    }

    public global::Sungero.Domain.Shared.IFilterControlInfo DateRangeInvoiceFrom
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DateRangeInvoiceFrom");
      }
    }
    public global::Sungero.Domain.Shared.IFilterControlInfo DateRangeInvoiceTo
    {
      get
      {
        return new global::Sungero.Domain.Shared.FilterControlInfo("DateRangeInvoiceTo");
      }
    }


  }

  public class OutgoingInvoiceFilterState : global::Sungero.Docflow.Shared.AccountingDocumentBase.AccountingDocumentBaseFilterState,
    global::Sungero.Contracts.IOutgoingInvoiceFilterState
  {
    public bool PaidState
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Last7daysInvoice
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool Last30daysInvoice
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }

    public bool ManualPeriodInvoice
    {
      get { return this.GetValue<bool>(); }
      set { this.SetValue(value); }
    }




    public global::System.DateTime? DateRangeInvoiceFrom
    {
      get { return this.GetValue<global::System.DateTime?>(); }
      set { this.SetValue(value); }
    }
    public global::System.DateTime? DateRangeInvoiceTo
    {
      get { return this.GetValue<global::System.DateTime?>(); }
      set { this.SetValue(value); }
    }



    public new Sungero.Contracts.IOutgoingInvoiceFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.IOutgoingInvoiceFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.OutgoingInvoice.OutgoingInvoiceFilterInfo();
    }

  }
}

// ==================================================================
// OutgoingInvoiceSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class OutgoingInvoiceSharedPublicFunctions : global::Sungero.Contracts.Shared.IOutgoingInvoiceSharedPublicFunctions
  {
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee> GetEmailAddressees(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice)
    {
      return global::Sungero.Contracts.Functions.OutgoingInvoice.GetEmailAddressees(outgoingInvoice);
    }
    public global::System.Boolean NeedCounterpartySign(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.Boolean isPrimaryDocument, global::System.Boolean needSign)
    {
      return global::Sungero.Contracts.Functions.OutgoingInvoice.NeedCounterpartySign(outgoingInvoice, senderBox, isPrimaryDocument, needSign);
    }
  }
}
