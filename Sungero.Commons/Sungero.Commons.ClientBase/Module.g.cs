
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Commons.ClientBase" type="Sungero.Commons.Client.ModuleFunctions" />
    internal static void CreateNewCity()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateNewCity", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Commons.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateNewCity();
      }
    }

    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.String GetValueAsString(System.Object propertyValue)
    {
      var __typeName = "Sungero.Commons.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetValueAsString", new global::System.Type[]{typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{propertyValue});
      }
      else
      {
        return global::Sungero.Commons.Shared.ModuleFunctions.GetValueAsString(propertyValue);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.Boolean EntityParamsContainsKey(global::Sungero.Domain.Shared.IEntity entity, global::System.String paramName)
    {
      var __typeName = "Sungero.Commons.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EntityParamsContainsKey", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, paramName});
      }
      else
      {
        return global::Sungero.Commons.Shared.ModuleFunctions.EntityParamsContainsKey(entity, paramName);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.Double GetVatAmountFromTotal(global::System.Double totalAmount, global::Sungero.Commons.IVatRate vatRate)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVatAmountFromTotal", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.IVatRate)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{totalAmount, vatRate});
      }
      else
      {
        return ((global::Sungero.Commons.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetVatAmountFromTotal(totalAmount, vatRate);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.String GetTypeDisplayValue(global::Sungero.Domain.Shared.IEntity entity, CommonLibrary.DeclensionCase declension)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTypeDisplayValue", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(CommonLibrary.DeclensionCase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, declension});
      }
      else
      {
        return ((global::Sungero.Commons.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetTypeDisplayValue(entity, declension);
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
      internal static global::Sungero.Commons.ICity CreateNewCity()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Commons.ICity>(
          global::System.Guid.Parse("459fa497-ee5b-49a4-9980-de00cada9b7a"),
          "CreateNewCity()");
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Commons.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Commons.Client.IModuleClientPublicFunctions
  {
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{

}

