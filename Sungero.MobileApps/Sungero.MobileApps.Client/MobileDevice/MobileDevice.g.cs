
// ==================================================================
// MobileDevice.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileDevice :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.MobileApps.IMobileDevice
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("2856cdf1-671b-41d1-a442-d1e0badff032");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.MobileApps.Client.MobileDevice.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.MobileApps.IMobileDevice, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.MobileApps.IMobileDeviceState State
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileDeviceState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.MobileApps.Shared.MobileDeviceState(this);
    }

    public new global::Sungero.MobileApps.IMobileDeviceInfo Info
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileDeviceInfo)base.Info;
      }
    }

    public new global::Sungero.MobileApps.IMobileDeviceAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileDeviceAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DeviceId;

        public virtual global::System.String DeviceId
        {
          get { return this._DeviceId.Value; }
          set { this._DeviceId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _OsVersion;

        public virtual global::System.String OsVersion
        {
          get { return this._OsVersion.Value; }
          set { this._OsVersion.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _AppVersion;

        public virtual global::System.String AppVersion
        {
          get { return this._AppVersion.Value; }
          set { this._AppVersion.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _DeviceStatus;

        public virtual global::Sungero.Core.Enumeration? DeviceStatus
        {
          get { return this._DeviceStatus.Value; }
          set { this._DeviceStatus.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DeviceName;

        public virtual global::System.String DeviceName
        {
          get { return this._DeviceName.Value; }
          set { this._DeviceName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _LastActivity;

        public virtual global::System.DateTime? LastActivity
        {
          get { return this._LastActivity.Value; }
          set { this._LastActivity.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _DeviceStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.MobileApps.MobileDevice.DeviceStatus),
          typeof(global::Sungero.MobileApps.Client.MobileDevice),
          "DeviceStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems DeviceStatusItems
        {
          get { return global::Sungero.MobileApps.Client.MobileDevice._DeviceStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems DeviceStatusAllowedItems
        {
          get { return global::Sungero.MobileApps.Client.MobileDevice.DeviceStatusItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Employee;

              public virtual global::Sungero.Company.IEmployee Employee
              {
              get
              {
                return this._Employee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Employee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.MobileApps.Client.MobileDeviceFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.MobileApps.Shared.MobileDeviceFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.MobileApps.MobileDeviceClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.MobileApps.MobileDeviceSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void EmployeeChangedHandler()
    {
      var args = new global::Sungero.MobileApps.Shared.MobileDeviceEmployeeChangedEventArgs(this.State.Properties.Employee, this.Employee, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).EmployeeChanged(args);
    }

    protected void DeviceIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DeviceId, this.DeviceId, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).DeviceIdChanged(args);
    }

    protected void OsVersionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OsVersion, this.OsVersion, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).OsVersionChanged(args);
    }

    protected void AppVersionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.AppVersion, this.AppVersion, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).AppVersionChanged(args);
    }

    protected void DeviceStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DeviceStatus, this.DeviceStatus, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).DeviceStatusChanged(args);
    }

    protected void DeviceNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DeviceName, this.DeviceName, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).DeviceNameChanged(args);
    }

    protected void LastActivityChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.LastActivity, this.LastActivity, this);
     ((global::Sungero.MobileApps.IMobileDeviceSharedHandlers)this.SharedHandlers).LastActivityChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Company.IEmployee EmployeeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.MobileApps.Client.MobileDeviceEmployeeValueInputEventArgs(this.Employee, value, this, this.Info.Properties.Employee);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).EmployeeValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DeviceIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DeviceId, value, this, this.Info.Properties.DeviceId);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).DeviceIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String OsVersionValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.OsVersion, value, this, this.Info.Properties.OsVersion);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).OsVersionValueInput(args);
    return args.NewValue;
  }

  protected global::System.String AppVersionValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.AppVersion, value, this, this.Info.Properties.AppVersion);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).AppVersionValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? DeviceStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.DeviceStatus, value, this, this.Info.Properties.DeviceStatus);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).DeviceStatusValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DeviceNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DeviceName, value, this, this.Info.Properties.DeviceName);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).DeviceNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? LastActivityValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.LastActivity, value, this, this.Info.Properties.LastActivity);
    ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).LastActivityValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> DeviceStatusFilteringHandler()
  {
    return ((global::Sungero.MobileApps.MobileDeviceClientHandlers)this.Handlers).DeviceStatusFiltering(this.DeviceStatusAllowedItems);
  }




    #endregion

    #region Constructors



              protected virtual void InitEmployeeNavigationProperty()
              {
                this._Employee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Employee", this);
                this._Employee.ValueChanged += (sender, e) => { this.EmployeeChangedHandler(); };
                this.AddProperty(this._Employee as global::Sungero.Domain.Client.IProperty);
              }




    public MobileDevice()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._DeviceId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DeviceId", this);
            this._DeviceId.ValueChanged += (sender, e) => { this.DeviceIdChangedHandler(); };
            this.AddProperty(this._DeviceId);

            this._OsVersion = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("OsVersion", this);
            this._OsVersion.ValueChanged += (sender, e) => { this.OsVersionChangedHandler(); };
            this.AddProperty(this._OsVersion);

            this._AppVersion = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("AppVersion", this);
            this._AppVersion.ValueChanged += (sender, e) => { this.AppVersionChangedHandler(); };
            this.AddProperty(this._AppVersion);

            this._DeviceStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("DeviceStatus", this);
            this._DeviceStatus.ValueChanged += (sender, e) => { this.DeviceStatusChangedHandler(); };
            this.AddProperty(this._DeviceStatus);

            this._DeviceName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DeviceName", this);
            this._DeviceName.ValueChanged += (sender, e) => { this.DeviceNameChangedHandler(); };
            this.AddProperty(this._DeviceName);

            this._LastActivity = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("LastActivity", this);
            this._LastActivity.ValueChanged += (sender, e) => { this.LastActivityChangedHandler(); };
            this.AddProperty(this._LastActivity);

            this.InitEmployeeNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// MobileDevicePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileDevicePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.MobileApps.IMobileDevice
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _RequestLogsCommand;

          public global::System.Windows.Input.ICommand RequestLogsCommand
          {
            get
            {
              if (this._RequestLogsCommand == null)
                  this._RequestLogsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("RequestLogs", this, this.RequestLogs, this.CanRequestLogs) { IsEmptyParameterAllowed = true };
              return this._RequestLogsCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DeleteDataCommand;

          public global::System.Windows.Input.ICommand DeleteDataCommand
          {
            get
            {
              if (this._DeleteDataCommand == null)
                  this._DeleteDataCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("DeleteData", this, this.DeleteData, this.CanDeleteData) { IsEmptyParameterAllowed = true };
              return this._DeleteDataCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ResetSessionCommand;

          public global::System.Windows.Input.ICommand ResetSessionCommand
          {
            get
            {
              if (this._ResetSessionCommand == null)
                  this._ResetSessionCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ResetSession", this, this.ResetSession, this.CanResetSession) { IsEmptyParameterAllowed = true };
              return this._ResetSessionCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanRequestLogs(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanRequestLogs(args);
              }

              private void RequestLogs(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.RequestLogs);
                ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).RequestLogs(args);
              }
              private bool CanDeleteData(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanDeleteData(args);
              }

              private void DeleteData(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.DeleteData);
                ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).DeleteData(args);
              }
              private bool CanResetSession(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanResetSession(args);
              }

              private void ResetSession(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.ResetSession);
                ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).ResetSession(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _EmployeeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter EmployeeCollectionPresenter
              {
          get { return this._EmployeeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._EmployeeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("7f57554c-3560-4eb8-b8a3-d115e25e3648"));
              this._EmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Employee");


    }

    public MobileDevicePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// MobileDeviceCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileDeviceCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.MobileApps.IMobileDevice
  {
    #region Actions

          private global::System.Windows.Input.ICommand _RequestLogsCommand;  

          public global::System.Windows.Input.ICommand RequestLogsCommand 
          { 
            get
            { 
              if (this._RequestLogsCommand == null)
                this._RequestLogsCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("RequestLogs", this, this.RequestLogs, this.CanRequestLogs) { IsEmptyParameterAllowed = true };
              return this._RequestLogsCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _DeleteDataCommand;  

          public global::System.Windows.Input.ICommand DeleteDataCommand 
          { 
            get
            { 
              if (this._DeleteDataCommand == null)
                this._DeleteDataCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("DeleteData", this, this.DeleteData, this.CanDeleteData) { IsEmptyParameterAllowed = true };
              return this._DeleteDataCommand; 
            }
          }
          private global::System.Windows.Input.ICommand _ResetSessionCommand;  

          public global::System.Windows.Input.ICommand ResetSessionCommand 
          { 
            get
            { 
              if (this._ResetSessionCommand == null)
                this._ResetSessionCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("ResetSession", this, this.ResetSession, this.CanResetSession) { IsEmptyParameterAllowed = true };
              return this._ResetSessionCommand; 
            }
          }



    #endregion

    #region Methods

        private bool CanRequestLogs(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanRequestLogs(args);
        }

        private void RequestLogs(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.RequestLogs);
          ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).RequestLogs(args);
        }

        private bool CanDeleteData(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanDeleteData(args);
        }

        private void DeleteData(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.DeleteData);
          ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).DeleteData(args);
        }

        private bool CanResetSession(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this);
          return ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).CanResetSession(args);
        }

        private void ResetSession(T entity)
        {
          var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Collection, entity, this, entity.Info.Actions.ResetSession);
          ((Sungero.MobileApps.Client.MobileDeviceActions)(entity as Sungero.MobileApps.Client.MobileDevice).ActionsHandlers).ResetSession(args);
        }



    #endregion

    public MobileDeviceCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public MobileDeviceCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public MobileDeviceCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public MobileDeviceCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// MobileDeviceRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{ 
  public class MobileDeviceRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.MobileApps.IMobileDeviceRepositoryImplementer<T>
      where T : global::Sungero.MobileApps.IMobileDevice
    {
       public new global::Sungero.MobileApps.IMobileDeviceAccessRights AccessRights
       {
          get { return (global::Sungero.MobileApps.IMobileDeviceAccessRights)base.AccessRights; }
       }

       public new global::Sungero.MobileApps.IMobileDeviceInfo Info
       {
          get { return (global::Sungero.MobileApps.IMobileDeviceInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.MobileApps.Client.MobileDeviceTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// MobileDeviceAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileDeviceAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.MobileApps.IMobileDeviceAccessRights
  {

    public MobileDeviceAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class MobileDeviceTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.MobileApps.IMobileDeviceAccessRights
  {

    public MobileDeviceTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
