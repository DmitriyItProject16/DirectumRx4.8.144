
// ==================================================================
// Memo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class MemoFilter<T> :
      global::Sungero.Docflow.Server.InternalDocumentBaseFilter<T>
      where T : class, global::Sungero.Docflow.IMemo
    {
      private global::Sungero.Docflow.IMemoFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IMemoFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public MemoFilter(global::Sungero.Docflow.IMemoFilterState filter)
      : base(filter)
      {
      }

      protected MemoFilter()
      {
      }
    }
    public class MemoSearchDialogModel : global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }




                   public new MemoVersionsModel Versions { get { return (MemoVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new MemoTrackingModel Tracking { get { return (MemoTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }
                   public MemoAddresseesModel Addressees { get; protected set; }

        }

      public class MemoVersionsModel : global::Sungero.Docflow.Server.InternalDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class MemoTrackingModel : global::Sungero.Docflow.Server.InternalDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class MemoAddresseesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }

         }



  public class MemoFilterForOurSignatory<TQueryEntity, TSourceEntity>
    : global::Sungero.Docflow.Server.OfficialDocumentFilterForOurSignatory<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IMemo
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.MemoOurSignatoryPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("OurSignatoryFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.MemoOurSignatoryPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).OurSignatoryFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MemoFilterForOurSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class MemoFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IMemo
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.MemoAddresseePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AddresseeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.MemoAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MemoFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class MemoSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.MemoAddresseeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.MemoAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public MemoSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.MemoFilter<global::Sungero.Docflow.IMemo>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.MemoFilterForOurSignatory<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IMemo>), "OurSignatory")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.MemoFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IMemo>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.MemoSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]


  public class Memo :
    global::Sungero.Docflow.Server.InternalDocumentBase, global::Sungero.Docflow.IMemo, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("95af409b-83fe-4697-a805-5a86ceec33f5");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.Memo.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IMemo, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IMemoState State
    {
      get { return (global::Sungero.Docflow.IMemoState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.MemoState(this);
    }

    public new virtual global::Sungero.Docflow.IMemoInfo Info
    {
      get { return (global::Sungero.Docflow.IMemoInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IMemoAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IMemoAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.MemoAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.MemoFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.MemoFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.MemoServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.MemoSharedHandlers(this);
    }

    private global::System.Boolean? _IsManyAddressees;
    public virtual global::System.Boolean? IsManyAddressees
    {
      get
      {
        return this._IsManyAddressees;
      }

      set
      {
        this.SetPropertyValue("IsManyAddressees", this._IsManyAddressees, value, (propertyValue) => { this._IsManyAddressees = propertyValue; }, this.IsManyAddresseesChangedHandler);
      }
    }
    private global::System.String _ManyAddresseesPlaceholder;
    public virtual global::System.String ManyAddresseesPlaceholder
    {
      get
      {
        return this._ManyAddresseesPlaceholder;
      }

      set
      {
        this.SetPropertyValue("ManyAddresseesPlaceholder", this._ManyAddresseesPlaceholder, value, (propertyValue) => { this._ManyAddresseesPlaceholder = propertyValue; }, this.ManyAddresseesPlaceholderChangedHandler);
      }
    }
    private global::System.String _ManyAddresseesLabel;
    public virtual global::System.String ManyAddresseesLabel
    {
      get
      {
        return this._ManyAddresseesLabel;
      }

      set
      {
        this.SetPropertyValue("ManyAddresseesLabel", this._ManyAddresseesLabel, value, (propertyValue) => { this._ManyAddresseesLabel = propertyValue; }, this.ManyAddresseesLabelChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _InternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Docflow.Server.InternalDocumentBase.InternalApprovalStateItems,
      typeof(global::Sungero.Docflow.Memo.InternalApprovalState),
      typeof(global::Sungero.Docflow.Server.Memo),
      "InternalApprovalState");

    public static new global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.Memo._InternalApprovalStateItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems InternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.Memo.InternalApprovalStateItems; }
    }



    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IMemoAddressees> _Addressees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IMemoAddressees> Addressees
    {
      get
      {
        if (this._Addressees == null)
        {
          this._Addressees = this.CreateAddresseesCollection();
          this.SetAddresseesEventHandlers();
        }
        return this._Addressees;
      }

      set
      {
        if (this._Addressees != null)
          this.UnsetChildCollectionEventHandlers(this._Addressees);

        this._Addressees = value;
        this.SetAddresseesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IMemoAddressees> CreateAddresseesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IMemoAddressees>() { RootEntity = this };
    }

    private void SetAddresseesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Addressees, "Addressees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Addressees;
      changeNotifier.Added += this.AddresseesAddedHandler;
      changeNotifier.Deleted += this.AddresseesDeletedHandler;
      changeNotifier.Added += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddresseesCollectionUpdateEventHandler;
    }

    private void AddresseesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Addressees"))
        this.AddresseesChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IMemoVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IMemoTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.MemoCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IMemo)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.MemoCreatingFromServerHandler((global::Sungero.Docflow.IMemo)entitySource, this.Info);
    }

    #region Framework events

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.MemoAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IMemoSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void AddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IMemoSharedHandlers)this.SharedHandlers).AddresseesChanged(args);
    }

    protected void IsManyAddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsManyAddressees, this.IsManyAddressees, this);
     ((global::Sungero.Docflow.IMemoSharedHandlers)this.SharedHandlers).IsManyAddresseesChanged(args);
    }

    protected void ManyAddresseesPlaceholderChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ManyAddresseesPlaceholder, this.ManyAddresseesPlaceholder, this);
     ((global::Sungero.Docflow.IMemoSharedHandlers)this.SharedHandlers).ManyAddresseesPlaceholderChanged(args);
    }

    protected void ManyAddresseesLabelChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ManyAddresseesLabel, this.ManyAddresseesLabel, this);
     ((global::Sungero.Docflow.IMemoSharedHandlers)this.SharedHandlers).ManyAddresseesLabelChanged(args);
    }





    protected virtual global::Sungero.Docflow.MemoAddresseesSharedCollectionHandlers CreateAddresseesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.MemoAddresseesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.MemoAddresseesSharedCollectionHandlers CreateAddresseesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.MemoAddresseesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddresseesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.MemoAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddresseesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddresseesAdded(args);
        }
      }
    }

    protected virtual void AddresseesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.MemoAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddresseesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddresseesDeleted(args);
        }
      }
    }


    #endregion


    public Memo()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.MemoConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Docflow.MemoConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// MemoHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class MemoOurSignatoryPropertyFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentOurSignatoryPropertyFilteringServerHandler<T>
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }

    public MemoOurSignatoryPropertyFilteringServerHandler(global::Sungero.Docflow.IMemo entity)
      : base(entity)
    {
    }
  }

  public partial class MemoAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public MemoAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IMemo entity)
      : base(entity)
    {
    }
  }

  public partial class MemoAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public MemoAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class MemoFilteringServerHandler<T>
    : global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IMemo
  {
    private global::Sungero.Docflow.IMemoFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IMemoFilterState)this.Filter;
      }
    }

    public MemoFilteringServerHandler(global::Sungero.Docflow.IMemoFilterState filter)
    : base(filter)
    {
    }

    protected MemoFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> DocumentRegisterFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentRegisterFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> DocumentKindFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentKindFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }


  }

  public partial class MemoSearchDialogServerHandler : global::Sungero.Docflow.InternalDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.MemoSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.MemoSearchDialogModel)this.Dialog;
       }
     }

     public MemoSearchDialogServerHandler(global::Sungero.Docflow.Server.MemoSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class MemoServerHandlers : global::Sungero.Docflow.InternalDocumentBaseServerHandlers
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }

    public MemoServerHandlers(global::Sungero.Docflow.IMemo entity)
      : base(entity)
    {
    }
  }

  public partial class MemoCreatingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IMemo _source
    {
      get { return (global::Sungero.Docflow.IMemo)this.Source; }
    }

    private global::Sungero.Docflow.IMemoInfo _info
    {
      get { return (global::Sungero.Docflow.IMemoInfo)this._Info; }
    }

    public MemoCreatingFromServerHandler(global::Sungero.Docflow.IMemo source, global::Sungero.Docflow.IMemoInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// MemoEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// MemoAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class MemoAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseAccessRights, Sungero.Docflow.IMemoAccessRights
  {

    public MemoAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class MemoTypeAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseTypeAccessRights, Sungero.Docflow.IMemoAccessRights
  {

    public MemoTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// MemoRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class MemoRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IMemoRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IMemo 
    {
       public new global::Sungero.Docflow.IMemoAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IMemoAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IMemoInfo Info
       {
          get { return (global::Sungero.Docflow.IMemoInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.MemoTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// MemoPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class MemoDocumentRegisterPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentRegisterPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IMemo
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IMemoFilterState)this.State;
        var handlers = new global::Sungero.Docflow.MemoFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IMemo>(query);
      }
    }

    public class MemoDocumentKindPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentKindPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IMemo
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IMemoFilterState)this.State;
        var handlers = new global::Sungero.Docflow.MemoFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IMemo>(query);
      }
    }

    public class MemoBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IMemo
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Docflow.IMemoFilterState)this.State;
        var handlers = new global::Sungero.Docflow.MemoFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IMemo>(query);
      }
    }

    public class MemoDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IMemo
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IMemoFilterState)this.State;
        var handlers = new global::Sungero.Docflow.MemoFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IMemo>(query);
      }
    }

}

// ==================================================================
// MemoServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class MemoFunctions : global::Sungero.Docflow.Server.InternalDocumentBaseFunctions
  {
    private global::Sungero.Docflow.IMemo _obj
    {
      get { return (global::Sungero.Docflow.IMemo)this.Entity; }
    }

    public MemoFunctions(global::Sungero.Docflow.IMemo entity) : base(entity) { }
  }
}

// ==================================================================
// MemoFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class Memo
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetDocumentSignatory(global::Sungero.Docflow.IMemo memo, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentSignatory", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  void SetOurSigningReason(global::Sungero.Docflow.IMemo memo, global::Sungero.Company.IEmployee employee, Sungero.Domain.BeforeSigningEventArgs e, global::System.Boolean changedSignatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetOurSigningReason", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Domain.BeforeSigningEventArgs), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, e, changedSignatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  void SetUnifiedRegistrationNumber(global::Sungero.Docflow.IMemo memo, global::Sungero.Company.IEmployee employee, Sungero.Domain.Shared.ISignature signature, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetUnifiedRegistrationNumber", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Domain.Shared.ISignature), typeof(global::Sungero.CoreEntities.ICertificate) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee, signature, certificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  global::System.Boolean NeedValidateOurSignatorySignatureSetting(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedValidateOurSignatorySignatureSetting", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  void SetManyAddresseesLabel(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetManyAddresseesLabel", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  global::System.String AddresseesShortList(global::Sungero.Docflow.IMemo document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.MemoFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddresseesShortList",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IMemo) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.MemoFunctions.AddresseesShortList(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  global::System.String GetAddresseesShortList(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddresseesShortList", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  global::System.String AddresseesFullList(global::Sungero.Docflow.IMemo document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.MemoFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddresseesFullList",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IMemo) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.MemoFunctions.AddresseesFullList(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.MemoFunctions" />
    internal static  global::System.String GetAddresseesFullList(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddresseesFullList", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAddressees(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddressees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IMemo memo, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, isRepeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void ClearAndFillFirstAddressee(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ClearAndFillFirstAddressee", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void FillAddresseeFromAddressees(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillAddresseeFromAddressees", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void SetManyAddresseesPlaceholder(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetManyAddresseesPlaceholder", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  void ChangeAddresseePropertiesAccess(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeAddresseePropertiesAccess", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  global::System.String TryFillFromAcquaintanceList(global::Sungero.Docflow.IMemo memo, global::Sungero.RecordManagement.IAcquaintanceList acquaintanceList)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("TryFillFromAcquaintanceList", new System.Type[] { typeof(global::Sungero.RecordManagement.IAcquaintanceList) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { acquaintanceList });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.MemoFunctions" />
    internal static  global::System.Int32 GetAddresseesLimit(global::Sungero.Docflow.IMemo memo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)memo).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddresseesLimit", new System.Type[] {  });
      return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// MemoServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class MemoServerPublicFunctions : global::Sungero.Docflow.Server.IMemoServerPublicFunctions
  {
  }
}

// ==================================================================
// MemoQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class Memo
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.Memo.MemoQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// MemoServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class MemoConvertingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IMemoInfo _info
    {
      get { return (global::Sungero.Docflow.IMemoInfo)this._Info; }
    }

    public MemoConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IMemoInfo info)
      : base(source, info)
    {
    }
  }
}
