
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void GoToWebsite(global::System.String website, Sungero.Domain.Client.ExecuteActionArgs e)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GoToWebsite", new global::System.Type[]{typeof(global::System.String), typeof(Sungero.Domain.Client.ExecuteActionArgs)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{website, e});
      }
      else
      {
    global::Sungero.Parties.Client.ModuleFunctions.GoToWebsite(website, e);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static global::System.Boolean CanGoToWebsite(global::System.String website)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CanGoToWebsite", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{website});
      }
      else
      {
        return global::Sungero.Parties.Client.ModuleFunctions.CanGoToWebsite(website);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void WriteLetter(global::System.String email)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteLetter", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{email});
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).WriteLetter(email);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void CreateCompany()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCompany", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateCompany();
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void CreateContact()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateContact", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateContact();
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void CreatePerson()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePerson", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreatePerson();
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> ShowCounterpartiesAvailableForExchange()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCounterpartiesAvailableForExchange", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowCounterpartiesAvailableForExchange();
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void InviteCounterpartyToExchange()
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("InviteCounterpartyToExchange", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).InviteCounterpartyToExchange();
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static global::System.String ConvertCounterpartyToString(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService counterparty)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertCounterpartyToString", new global::System.Type[]{typeof(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty});
      }
      else
      {
        return global::Sungero.Parties.Client.ModuleFunctions.ConvertCounterpartyToString(counterparty);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService ConvertStringToCounterparty(global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService> counterparties, global::System.String counterpartyString, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertStringToCounterparty", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService>), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparties, counterpartyString, box});
      }
      else
      {
        return ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ConvertStringToCounterparty(counterparties, counterpartyString, box);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void ShowCounterpartyCard(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService counterparty)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowCounterpartyCard", new global::System.Type[]{typeof(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty});
      }
      else
      {
    global::Sungero.Parties.Client.ModuleFunctions.ShowCounterpartyCard(counterparty);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static global::Sungero.ExchangeCore.IBusinessUnitBox[] GetAvailableBoxes(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService foundCompany, global::Sungero.ExchangeCore.IBusinessUnitBox[] connectedBoxes)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAvailableBoxes", new global::System.Type[]{typeof(global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox[])});
        return (global::Sungero.ExchangeCore.IBusinessUnitBox[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{foundCompany, connectedBoxes});
      }
      else
      {
        return global::Sungero.Parties.Client.ModuleFunctions.GetAvailableBoxes(foundCompany, connectedBoxes);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    internal static void CreateInvitationEmail(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String recipientEMail)
    {
      var __typeName = "Sungero.Parties.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateInvitationEmail", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, recipientEMail});
      }
      else
      {
    global::Sungero.Parties.Client.ModuleFunctions.CreateInvitationEmail(box, recipientEMail);
      }
    }
    /// <redirect project="Sungero.Parties.ClientBase" type="Sungero.Parties.Client.ModuleFunctions" />
    [global::Sungero.Core.HyperlinkAttribute()]
    internal static void FindCounterparty(global::System.String cuuid, global::System.String ctin, global::System.String ctrrc, global::System.String sysid)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FindCounterparty", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cuuid, ctin, ctrrc, sysid});
      }
      else
      {
    ((global::Sungero.Parties.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).FindCounterparty(cuuid, ctin, ctrrc, sysid);
      }
    }

    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.Boolean EmailIsValid(global::System.String emailAddress)
    {
      var __typeName = "Sungero.Parties.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EmailIsValid", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{emailAddress});
      }
      else
      {
        return global::Sungero.Parties.Shared.ModuleFunctions.EmailIsValid(emailAddress);
      }
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.String GetSurnameAndInitialsInTenantCulture(global::System.String firstName, global::System.String middleName, global::System.String lastName)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSurnameAndInitialsInTenantCulture", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstName, middleName, lastName});
      }
      else
      {
        return ((global::Sungero.Parties.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSurnameAndInitialsInTenantCulture(firstName, middleName, lastName);
      }
    }
    /// <redirect project="Sungero.Parties.Shared" type="Sungero.Parties.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsRegularExpresionValid(global::System.String expression)
    {
      var __moduleId = new global::System.Guid("243b34ec-8425-4c7e-b66f-27f7b9c8f38d");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Parties.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRegularExpresionValid", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expression});
      }
      else
      {
        return ((global::Sungero.Parties.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsRegularExpresionValid(expression);
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::Sungero.Parties.ICompany CreateCompany()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Parties.ICompany>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CreateCompany()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::Sungero.Parties.IContact CreateContact()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Parties.IContact>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CreateContact()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::Sungero.Parties.IPerson CreatePerson()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Parties.IPerson>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CreatePerson()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> CounterpartiesAvailableForExchange()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CounterpartiesAvailableForExchange()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.IContact> GetContactsFromCompany(global::Sungero.Parties.ICompanyBase company)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.IContact>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetContactsFromCompany(global::Sungero.Parties.ICompanyBase)", company);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.String GetEmailByTinTrrc(global::System.String tin, global::System.String trrc)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetEmailByTinTrrc(global::System.String,global::System.String)", tin, trrc);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService> FindCompanyInExchangeServices(global::System.String tin, global::System.String trrc, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> boxes)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.Structures.Module.CounterpartyFromExchangeService>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "FindCompanyInExchangeServices(global::System.String,global::System.String,global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>)", tin, trrc, boxes);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::Sungero.Parties.ICounterparty FindCounterpartyByOrganizationId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String organizationId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Parties.ICounterparty>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "FindCounterpartyByOrganizationId(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String)", box, organizationId);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Boolean CheckAnyBusinessUnitBoxes()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CheckAnyBusinessUnitBoxes()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterpartiesFromList(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties, global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetDuplicateCounterpartiesFromList(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>,global::System.String,global::System.String,global::System.String,global::System.Boolean)", counterparties, tin, trrc, name, excludeClosed);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Boolean excludeClosed)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetDuplicateCounterparties(global::System.String,global::System.String,global::System.String,global::System.Boolean)", tin, trrc, name, excludeClosed);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetDuplicateCounterparties(global::System.String tin, global::System.String trrc, global::System.String name, global::System.Nullable<global::System.Int64> excludedCounterpartyId, global::System.Boolean excludeClosed)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetDuplicateCounterparties(global::System.String,global::System.String,global::System.String,global::System.Nullable<global::System.Int64>,global::System.Boolean)", tin, trrc, name, excludedCounterpartyId, excludeClosed);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> FindCounterparty(global::System.String uuid, global::System.String tin, global::System.String trrc, global::System.String sysid)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "FindCounterparty(global::System.String,global::System.String,global::System.String,global::System.String)", uuid, tin, trrc, sysid);
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.String GetCompanyDataServiceURL()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "GetCompanyDataServiceURL()");
      }
      /// <redirect project="Sungero.Parties.Server" type="Sungero.Parties.Server.ModuleFunctions" />
      internal static global::System.Boolean CanEditIdentityDocuments()
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("243b34ec-8425-4c7e-b66f-27f7b9c8f38d"),
          "CanEditIdentityDocuments()");
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Parties.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Parties.Client.IModuleClientPublicFunctions
  {
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Client
{

  public partial class BlockedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState Filter { get; private set; }

    private global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void BlockedCounterpartiesValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public BlockedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IBlockedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }

  }

  public partial class InvitedCounterpartiesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState Filter { get; private set; }

    private global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void InvitedCounterpartiesValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public InvitedCounterpartiesFolderHandlers(global::Sungero.Parties.FolderFilterState.IInvitedCounterpartiesFilterState filter)
    {
      this.Filter = filter;
    }

  }

}

