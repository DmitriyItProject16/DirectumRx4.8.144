
// ==================================================================
// CounterpartyKind.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
    public class CounterpartyKindFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Parties.ICounterpartyKind
    {
      protected new global::Sungero.Parties.ICounterpartyKindFilterState Filter { get; private set; }

      private global::Sungero.Parties.ICounterpartyKindFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CounterpartyKindFilter(global::Sungero.Parties.ICounterpartyKindFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected CounterpartyKindFilter()
      {
      }
    }
      public class CounterpartyKindUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Parties.ICounterpartyKind
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class CounterpartyKindSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }


        }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Parties.Server.CounterpartyKindFilter<global::Sungero.Parties.ICounterpartyKind>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Parties.Server.CounterpartyKindUiFilter<global::Sungero.Parties.ICounterpartyKind>))]

  public class CounterpartyKind :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Parties.ICounterpartyKind, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("1bd10cb0-bfb3-4c74-b07e-67c9e34188c7");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Parties.Server.CounterpartyKind.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Parties.ICounterpartyKind, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Parties.ICounterpartyKindState State
    {
      get { return (global::Sungero.Parties.ICounterpartyKindState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Parties.Shared.CounterpartyKindState(this);
    }

    public new virtual global::Sungero.Parties.ICounterpartyKindInfo Info
    {
      get { return (global::Sungero.Parties.ICounterpartyKindInfo)base.Info; }
    }

    public new virtual global::Sungero.Parties.ICounterpartyKindAccessRights AccessRights
    {
      get { return (global::Sungero.Parties.ICounterpartyKindAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Parties.Server.CounterpartyKindAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Parties.Server.CounterpartyKindFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Parties.Shared.CounterpartyKindFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Parties.CounterpartyKindServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Parties.CounterpartyKindSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Sid;
    public virtual global::System.String Sid
    {
      get
      {
        return this._Sid;
      }

      set
      {
        this.SetPropertyValue("Sid", this._Sid, value, (propertyValue) => { this._Sid = propertyValue; }, this.SidChangedHandler);
      }
    }



    private global::System.String _Note;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }








    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Parties.CounterpartyKindCreatingFromServerHandler", new object[] { (global::Sungero.Parties.ICounterpartyKind)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Parties.CounterpartyKindCreatingFromServerHandler((global::Sungero.Parties.ICounterpartyKind)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Parties.ICounterpartyKindSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Parties.ICounterpartyKindSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void SidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Sid, this.Sid, this);
     ((global::Sungero.Parties.ICounterpartyKindSharedHandlers)this.SharedHandlers).SidChanged(args);
    }



    #endregion


    public CounterpartyKind()
    {
    }

  }
}

// ==================================================================
// CounterpartyKindHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties
{

  public partial class CounterpartyKindFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Parties.ICounterpartyKind
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Parties.ICounterpartyKindFilterState Filter { get; private set; }

    private global::Sungero.Parties.ICounterpartyKindFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public CounterpartyKindFilteringServerHandler(global::Sungero.Parties.ICounterpartyKindFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected CounterpartyKindFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class CounterpartyKindUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Parties.ICounterpartyKind
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class CounterpartyKindSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Parties.Server.CounterpartyKindSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Parties.Server.CounterpartyKindSearchDialogModel)this.Dialog;
       }
     }

     public CounterpartyKindSearchDialogServerHandler(global::Sungero.Parties.Server.CounterpartyKindSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CounterpartyKindServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Parties.ICounterpartyKind _obj
    {
      get { return (global::Sungero.Parties.ICounterpartyKind)this.Entity; }
    }

    public CounterpartyKindServerHandlers(global::Sungero.Parties.ICounterpartyKind entity)
      : base(entity)
    {
    }
  }

  public partial class CounterpartyKindCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Parties.ICounterpartyKind _source
    {
      get { return (global::Sungero.Parties.ICounterpartyKind)this.Source; }
    }

    private global::Sungero.Parties.ICounterpartyKindInfo _info
    {
      get { return (global::Sungero.Parties.ICounterpartyKindInfo)this._Info; }
    }

    public CounterpartyKindCreatingFromServerHandler(global::Sungero.Parties.ICounterpartyKind source, global::Sungero.Parties.ICounterpartyKindInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CounterpartyKindEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
}

// ==================================================================
// CounterpartyKindAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public class CounterpartyKindAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Parties.ICounterpartyKindAccessRights
  {

    public CounterpartyKindAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CounterpartyKindTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Parties.ICounterpartyKindAccessRights
  {

    public CounterpartyKindTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CounterpartyKindRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
    public class CounterpartyKindRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Parties.ICounterpartyKindRepositoryImplementer<T>
      where T : global::Sungero.Parties.ICounterpartyKind 
    {
       public new global::Sungero.Parties.ICounterpartyKindAccessRights AccessRights
       {
          get { return (global::Sungero.Parties.ICounterpartyKindAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Parties.ICounterpartyKindInfo Info
       {
          get { return (global::Sungero.Parties.ICounterpartyKindInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Parties.Server.CounterpartyKindTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CounterpartyKindPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
}

// ==================================================================
// CounterpartyKindServerFunctions.g.cs
// ==================================================================

namespace Sungero.Parties.Server
{
  public partial class CounterpartyKindFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Parties.ICounterpartyKind _obj
    {
      get { return (global::Sungero.Parties.ICounterpartyKind)this.Entity; }
    }

    public CounterpartyKindFunctions(global::Sungero.Parties.ICounterpartyKind entity) : base(entity) { }
  }
}

// ==================================================================
// CounterpartyKindFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Functions
{
  internal static class CounterpartyKind
  {
  }
}

// ==================================================================
// CounterpartyKindServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Server
{
  public class CounterpartyKindServerPublicFunctions : global::Sungero.Parties.Server.ICounterpartyKindServerPublicFunctions
  {
  }
}

// ==================================================================
// CounterpartyKindQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Parties.Queries
{
  public class CounterpartyKind
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Parties.Server.CounterpartyKind.CounterpartyKindQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
