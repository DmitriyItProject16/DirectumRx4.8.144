
// ==================================================================
// DocumentComparisonInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentComparisonInfoFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IDocumentComparisonInfo
    {
      protected new global::Sungero.Docflow.IDocumentComparisonInfoFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IDocumentComparisonInfoFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public DocumentComparisonInfoFilter(global::Sungero.Docflow.IDocumentComparisonInfoFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected DocumentComparisonInfoFilter()
      {
      }
    }
      public class DocumentComparisonInfoUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IDocumentComparisonInfo
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class DocumentComparisonInfoSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Int64? Id { get; protected set; }





        }




  public class DocumentComparisonInfoFilterForAuthor<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IUser
    where TSourceEntity : class, global::Sungero.Docflow.IDocumentComparisonInfo
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.DocumentComparisonInfoAuthorPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AuthorFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.DocumentComparisonInfoAuthorPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AuthorFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentComparisonInfoFilterForAuthor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class DocumentComparisonInfoSearchFilterForAuthor<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.DocumentComparisonInfoAuthorSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AuthorSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.DocumentComparisonInfoAuthorSearchPropertyFilteringServerHandler<TQueryEntity>().AuthorSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public DocumentComparisonInfoSearchFilterForAuthor(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.DocumentComparisonInfoFilter<global::Sungero.Docflow.IDocumentComparisonInfo>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.DocumentComparisonInfoUiFilter<global::Sungero.Docflow.IDocumentComparisonInfo>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.DocumentComparisonInfoFilterForAuthor<global::Sungero.CoreEntities.IUser, global::Sungero.Docflow.IDocumentComparisonInfo>), "Author")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.DocumentComparisonInfoSearchFilterForAuthor<global::Sungero.CoreEntities.IRecipient>), "Author")]


  public class DocumentComparisonInfo :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IDocumentComparisonInfo, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("0af2153a-ef3e-47fc-aa8a-aa995031019b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.DocumentComparisonInfo.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IDocumentComparisonInfo, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IDocumentComparisonInfoState State
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfoState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.DocumentComparisonInfoState(this);
    }

    public new virtual global::Sungero.Docflow.IDocumentComparisonInfoInfo Info
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfoInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IDocumentComparisonInfoAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfoAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.DocumentComparisonInfoAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.DocumentComparisonInfoFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.DocumentComparisonInfoFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.DocumentComparisonInfoServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.DocumentComparisonInfoSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Int64? _FirstDocumentId;
    public virtual global::System.Int64? FirstDocumentId
    {
      get
      {
        return this._FirstDocumentId;
      }

      set
      {
        this.SetPropertyValue("FirstDocumentId", this._FirstDocumentId, value, (propertyValue) => { this._FirstDocumentId = propertyValue; }, this.FirstDocumentIdChangedHandler);
      }
    }
    private global::System.Int64? _SecondDocumentId;
    public virtual global::System.Int64? SecondDocumentId
    {
      get
      {
        return this._SecondDocumentId;
      }

      set
      {
        this.SetPropertyValue("SecondDocumentId", this._SecondDocumentId, value, (propertyValue) => { this._SecondDocumentId = propertyValue; }, this.SecondDocumentIdChangedHandler);
      }
    }
    private global::System.String _FirstVersionExtension;
    public virtual global::System.String FirstVersionExtension
    {
      get
      {
        return this._FirstVersionExtension;
      }

      set
      {
        this.SetPropertyValue("FirstVersionExtension", this._FirstVersionExtension, value, (propertyValue) => { this._FirstVersionExtension = propertyValue; }, this.FirstVersionExtensionChangedHandler);
      }
    }
    private global::System.String _SecondVersionExtension;
    public virtual global::System.String SecondVersionExtension
    {
      get
      {
        return this._SecondVersionExtension;
      }

      set
      {
        this.SetPropertyValue("SecondVersionExtension", this._SecondVersionExtension, value, (propertyValue) => { this._SecondVersionExtension = propertyValue; }, this.SecondVersionExtensionChangedHandler);
      }
    }
    private global::System.Int32? _FirstArioTaskId;
    public virtual global::System.Int32? FirstArioTaskId
    {
      get
      {
        return this._FirstArioTaskId;
      }

      set
      {
        this.SetPropertyValue("FirstArioTaskId", this._FirstArioTaskId, value, (propertyValue) => { this._FirstArioTaskId = propertyValue; }, this.FirstArioTaskIdChangedHandler);
      }
    }
    private global::System.Int32? _SecondArioTaskId;
    public virtual global::System.Int32? SecondArioTaskId
    {
      get
      {
        return this._SecondArioTaskId;
      }

      set
      {
        this.SetPropertyValue("SecondArioTaskId", this._SecondArioTaskId, value, (propertyValue) => { this._SecondArioTaskId = propertyValue; }, this.SecondArioTaskIdChangedHandler);
      }
    }
    private global::System.Int32? _DifferencesCount;
    public virtual global::System.Int32? DifferencesCount
    {
      get
      {
        return this._DifferencesCount;
      }

      set
      {
        this.SetPropertyValue("DifferencesCount", this._DifferencesCount, value, (propertyValue) => { this._DifferencesCount = propertyValue; }, this.DifferencesCountChangedHandler);
      }
    }
    private global::System.String _ErrorMessage;
    public virtual global::System.String ErrorMessage
    {
      get
      {
        return this._ErrorMessage;
      }

      set
      {
        this.SetPropertyValue("ErrorMessage", this._ErrorMessage, value, (propertyValue) => { this._ErrorMessage = propertyValue; }, this.ErrorMessageChangedHandler);
      }
    }
    private global::System.DateTime? _DeletionDate;
    public virtual global::System.DateTime? DeletionDate
    {
      get
      {
        return this._DeletionDate;
      }

      set
      {
        this.SetPropertyValue("DeletionDate", this._DeletionDate, value, (propertyValue) => { this._DeletionDate = propertyValue; }, this.DeletionDateChangedHandler);
      }
    }
    private global::System.Int32? _FirstVersionNumber;
    public virtual global::System.Int32? FirstVersionNumber
    {
      get
      {
        return this._FirstVersionNumber;
      }

      set
      {
        this.SetPropertyValue("FirstVersionNumber", this._FirstVersionNumber, value, (propertyValue) => { this._FirstVersionNumber = propertyValue; }, this.FirstVersionNumberChangedHandler);
      }
    }
    private global::System.Int32? _SecondVersionNumber;
    public virtual global::System.Int32? SecondVersionNumber
    {
      get
      {
        return this._SecondVersionNumber;
      }

      set
      {
        this.SetPropertyValue("SecondVersionNumber", this._SecondVersionNumber, value, (propertyValue) => { this._SecondVersionNumber = propertyValue; }, this.SecondVersionNumberChangedHandler);
      }
    }
    private global::System.String _FirstVersionHash;
    public virtual global::System.String FirstVersionHash
    {
      get
      {
        return this._FirstVersionHash;
      }

      set
      {
        this.SetPropertyValue("FirstVersionHash", this._FirstVersionHash, value, (propertyValue) => { this._FirstVersionHash = propertyValue; }, this.FirstVersionHashChangedHandler);
      }
    }
    private global::System.String _SecondVersionHash;
    public virtual global::System.String SecondVersionHash
    {
      get
      {
        return this._SecondVersionHash;
      }

      set
      {
        this.SetPropertyValue("SecondVersionHash", this._SecondVersionHash, value, (propertyValue) => { this._SecondVersionHash = propertyValue; }, this.SecondVersionHashChangedHandler);
      }
    }





    private global::Sungero.Domain.Shared.IBinaryData _FirstPdfVersion;

    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::Sungero.Domain.Shared.IBinaryData FirstPdfVersion
    {
      get { return this._FirstPdfVersion; }
      set { this.SetComponentPropertyValue("FirstPdfVersion", this._FirstPdfVersion, value, (propertyValue) => { this._FirstPdfVersion = propertyValue; }, this.FirstPdfVersionChangedHandler, this.InitFirstPdfVersion); }
    }
    private global::Sungero.Domain.Shared.IBinaryData _SecondPdfVersion;

    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::Sungero.Domain.Shared.IBinaryData SecondPdfVersion
    {
      get { return this._SecondPdfVersion; }
      set { this.SetComponentPropertyValue("SecondPdfVersion", this._SecondPdfVersion, value, (propertyValue) => { this._SecondPdfVersion = propertyValue; }, this.SecondPdfVersionChangedHandler, this.InitSecondPdfVersion); }
    }
    private global::Sungero.Domain.Shared.IBinaryData _ResultPdf;

    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::Sungero.Domain.Shared.IBinaryData ResultPdf
    {
      get { return this._ResultPdf; }
      set { this.SetComponentPropertyValue("ResultPdf", this._ResultPdf, value, (propertyValue) => { this._ResultPdf = propertyValue; }, this.ResultPdfChangedHandler, this.InitResultPdf); }
    }


    private static global::Sungero.Domain.Shared.EnumerationItems _ProcessingStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.DocumentComparisonInfo.ProcessingStatus),
      typeof(global::Sungero.Docflow.Server.DocumentComparisonInfo),
      "ProcessingStatus");

    public static global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusItems
    {
      get { return global::Sungero.Docflow.Server.DocumentComparisonInfo._ProcessingStatusItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ProcessingStatusAllowedItems
    {
      get { return global::Sungero.Docflow.Server.DocumentComparisonInfo.ProcessingStatusItems; }
    }

    private global::Sungero.Core.Enumeration? _ProcessingStatus;

    public virtual global::Sungero.Core.Enumeration? ProcessingStatus
    {
      get { return this._ProcessingStatus; }
      set { this.SetEnumPropertyValue("ProcessingStatus", this._ProcessingStatus, value, (propertyValue) => { this._ProcessingStatus = propertyValue; }, this.ProcessingStatusChangedHandler, this.ProcessingStatusAllowedItems); }
    }


    private global::Sungero.CoreEntities.IUser _Author;
    public virtual global::Sungero.CoreEntities.IUser Author
    {
      get
      {
        return this._Author;
      }

      set
      {
        this.SetPropertyValue("Author", this._Author, value, (propertyValue) => { this._Author = propertyValue; }, this.AuthorChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.DocumentComparisonInfoCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IDocumentComparisonInfo)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.DocumentComparisonInfoCreatingFromServerHandler((global::Sungero.Docflow.IDocumentComparisonInfo)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void AuthorChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.DocumentComparisonInfoAuthorChangedEventArgs(this.State.Properties.Author, this.Author, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).AuthorChanged(args);
    }

    protected void FirstDocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.FirstDocumentId, this.FirstDocumentId, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstDocumentIdChanged(args);
    }

    protected void SecondDocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.SecondDocumentId, this.SecondDocumentId, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondDocumentIdChanged(args);
    }

    protected void FirstVersionExtensionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FirstVersionExtension, this.FirstVersionExtension, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstVersionExtensionChanged(args);
    }

    protected void SecondVersionExtensionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.SecondVersionExtension, this.SecondVersionExtension, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondVersionExtensionChanged(args);
    }

    protected void FirstArioTaskIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.FirstArioTaskId, this.FirstArioTaskId, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstArioTaskIdChanged(args);
    }

    protected void SecondArioTaskIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.SecondArioTaskId, this.SecondArioTaskId, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondArioTaskIdChanged(args);
    }

    protected void FirstPdfVersionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BinaryDataPropertyChangedEventArgs(this.State.Properties.FirstPdfVersion, this.FirstPdfVersion, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstPdfVersionChanged(args);
    }

    protected void SecondPdfVersionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BinaryDataPropertyChangedEventArgs(this.State.Properties.SecondPdfVersion, this.SecondPdfVersion, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondPdfVersionChanged(args);
    }

    protected void ResultPdfChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BinaryDataPropertyChangedEventArgs(this.State.Properties.ResultPdf, this.ResultPdf, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).ResultPdfChanged(args);
    }

    protected void DifferencesCountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DifferencesCount, this.DifferencesCount, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).DifferencesCountChanged(args);
    }

    protected void ErrorMessageChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ErrorMessage, this.ErrorMessage, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).ErrorMessageChanged(args);
    }

    protected void ProcessingStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ProcessingStatus, this.ProcessingStatus, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).ProcessingStatusChanged(args);
    }

    protected void DeletionDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.DeletionDate, this.DeletionDate, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).DeletionDateChanged(args);
    }

    protected void FirstVersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.FirstVersionNumber, this.FirstVersionNumber, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstVersionNumberChanged(args);
    }

    protected void SecondVersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.SecondVersionNumber, this.SecondVersionNumber, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondVersionNumberChanged(args);
    }

    protected void FirstVersionHashChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FirstVersionHash, this.FirstVersionHash, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).FirstVersionHashChanged(args);
    }

    protected void SecondVersionHashChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.SecondVersionHash, this.SecondVersionHash, this);
     ((global::Sungero.Docflow.IDocumentComparisonInfoSharedHandlers)this.SharedHandlers).SecondVersionHashChanged(args);
    }



    #endregion

    private void InitFirstPdfVersion(global::Sungero.Domain.Shared.IBinaryData value)
    {
      if (value != null)
      {
        this._FirstPdfVersion = (global::Sungero.Domain.Shared.IBinaryData)value.Clone();
        this._FirstPdfVersion.RootEntity = this;
        ((global::Sungero.Domain.Shared.IExtendedBinaryData)this._FirstPdfVersion).PropertyName = "FirstPdfVersion";
        ((global::Sungero.Domain.Shared.IInternalComponent)this._FirstPdfVersion).ComponentChanged += (sender, e) =>
        {
          if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("FirstPdfVersion"))
            this.FirstPdfVersionChangedHandler();
          this.OnComponentPropertyChanged("FirstPdfVersion", e.PropertyNames);
        };
        ((global::Sungero.Domain.Shared.IInternalComponent)this._FirstPdfVersion).ComponentChanging += (sender, e) =>
          this.OnComponentPropertyChanging("FirstPdfVersion", e.PropertyName);
      }
      else
        this._FirstPdfVersion = null;
    }
    private void InitSecondPdfVersion(global::Sungero.Domain.Shared.IBinaryData value)
    {
      if (value != null)
      {
        this._SecondPdfVersion = (global::Sungero.Domain.Shared.IBinaryData)value.Clone();
        this._SecondPdfVersion.RootEntity = this;
        ((global::Sungero.Domain.Shared.IExtendedBinaryData)this._SecondPdfVersion).PropertyName = "SecondPdfVersion";
        ((global::Sungero.Domain.Shared.IInternalComponent)this._SecondPdfVersion).ComponentChanged += (sender, e) =>
        {
          if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("SecondPdfVersion"))
            this.SecondPdfVersionChangedHandler();
          this.OnComponentPropertyChanged("SecondPdfVersion", e.PropertyNames);
        };
        ((global::Sungero.Domain.Shared.IInternalComponent)this._SecondPdfVersion).ComponentChanging += (sender, e) =>
          this.OnComponentPropertyChanging("SecondPdfVersion", e.PropertyName);
      }
      else
        this._SecondPdfVersion = null;
    }
    private void InitResultPdf(global::Sungero.Domain.Shared.IBinaryData value)
    {
      if (value != null)
      {
        this._ResultPdf = (global::Sungero.Domain.Shared.IBinaryData)value.Clone();
        this._ResultPdf.RootEntity = this;
        ((global::Sungero.Domain.Shared.IExtendedBinaryData)this._ResultPdf).PropertyName = "ResultPdf";
        ((global::Sungero.Domain.Shared.IInternalComponent)this._ResultPdf).ComponentChanged += (sender, e) =>
        {
          if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ResultPdf"))
            this.ResultPdfChangedHandler();
          this.OnComponentPropertyChanged("ResultPdf", e.PropertyNames);
        };
        ((global::Sungero.Domain.Shared.IInternalComponent)this._ResultPdf).ComponentChanging += (sender, e) =>
          this.OnComponentPropertyChanging("ResultPdf", e.PropertyName);
      }
      else
        this._ResultPdf = null;
    }


    public DocumentComparisonInfo()
    {
      this.InitFirstPdfVersion(new global::Sungero.Domain.BinaryData());
      this.InitSecondPdfVersion(new global::Sungero.Domain.BinaryData());
      this.InitResultPdf(new global::Sungero.Domain.BinaryData());

    }

  }
}

// ==================================================================
// DocumentComparisonInfoHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class DocumentComparisonInfoAuthorPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IUser
  {
    private global::Sungero.Docflow.IDocumentComparisonInfo _obj
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfo)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AuthorFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public DocumentComparisonInfoAuthorPropertyFilteringServerHandler(global::Sungero.Docflow.IDocumentComparisonInfo entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentComparisonInfoAuthorSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AuthorSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public DocumentComparisonInfoAuthorSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class DocumentComparisonInfoFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IDocumentComparisonInfo
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IDocumentComparisonInfoFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IDocumentComparisonInfoFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public DocumentComparisonInfoFilteringServerHandler(global::Sungero.Docflow.IDocumentComparisonInfoFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected DocumentComparisonInfoFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class DocumentComparisonInfoUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IDocumentComparisonInfo
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class DocumentComparisonInfoSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.DocumentComparisonInfoSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.DocumentComparisonInfoSearchDialogModel)this.Dialog;
       }
     }

     public DocumentComparisonInfoSearchDialogServerHandler(global::Sungero.Docflow.Server.DocumentComparisonInfoSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class DocumentComparisonInfoServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IDocumentComparisonInfo _obj
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfo)this.Entity; }
    }

    public DocumentComparisonInfoServerHandlers(global::Sungero.Docflow.IDocumentComparisonInfo entity)
      : base(entity)
    {
    }
  }

  public partial class DocumentComparisonInfoCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IDocumentComparisonInfo _source
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfo)this.Source; }
    }

    private global::Sungero.Docflow.IDocumentComparisonInfoInfo _info
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfoInfo)this._Info; }
    }

    public DocumentComparisonInfoCreatingFromServerHandler(global::Sungero.Docflow.IDocumentComparisonInfo source, global::Sungero.Docflow.IDocumentComparisonInfoInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// DocumentComparisonInfoEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentComparisonInfoAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentComparisonInfoAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IDocumentComparisonInfoAccessRights
  {

    public DocumentComparisonInfoAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentComparisonInfoTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IDocumentComparisonInfoAccessRights
  {

    public DocumentComparisonInfoTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DocumentComparisonInfoRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class DocumentComparisonInfoRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IDocumentComparisonInfoRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IDocumentComparisonInfo 
    {
       public new global::Sungero.Docflow.IDocumentComparisonInfoAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IDocumentComparisonInfoAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IDocumentComparisonInfoInfo Info
       {
          get { return (global::Sungero.Docflow.IDocumentComparisonInfoInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.DocumentComparisonInfoTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentComparisonInfoPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// DocumentComparisonInfoServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class DocumentComparisonInfoFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IDocumentComparisonInfo _obj
    {
      get { return (global::Sungero.Docflow.IDocumentComparisonInfo)this.Entity; }
    }

    public DocumentComparisonInfoFunctions(global::Sungero.Docflow.IDocumentComparisonInfo entity) : base(entity) { }
  }
}

// ==================================================================
// DocumentComparisonInfoFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class DocumentComparisonInfo
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IDocumentComparisonInfo GetLastDocumentComparisonInfo(global::System.String firstVersionHash, global::System.String secondVersionHash, global::Sungero.CoreEntities.IUser author)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.DocumentComparisonInfoFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLastDocumentComparisonInfo",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::Sungero.Docflow.IDocumentComparisonInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { firstVersionHash, secondVersionHash, author });
      }
      else
      {
        return global::Sungero.Docflow.Server.DocumentComparisonInfoFunctions.GetLastDocumentComparisonInfo(firstVersionHash, secondVersionHash, author);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> FillPdfVersionsFromArio(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillPdfVersionsFromArio", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> ConvertVersionsToPdf(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ConvertVersionsToPdf", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  global::Sungero.Docflow.Structures.Module.IPdfConversionResult GetConvertedPdfVersion(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo, System.Byte[] body, global::System.String versionHash, global::System.String extension)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetConvertedPdfVersion", new System.Type[] { typeof(System.Byte[]), typeof(global::System.String), typeof(global::System.String) });
      return (global::Sungero.Docflow.Structures.Module.IPdfConversionResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { body, versionHash, extension });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.String> GetSupportedExtensionsForDocumentComparison(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSupportedExtensionsForDocumentComparison", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> ComparePdfVersions(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ComparePdfVersions", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.DocumentComparisonInfoFunctions" />
    internal static  System.Byte[] GetCachedPdfVersion(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo, global::System.String versionHash)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)documentComparisonInfo).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCachedPdfVersion", new System.Type[] { typeof(global::System.String) });
      return (System.Byte[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { versionHash });
    }

  }
}

// ==================================================================
// DocumentComparisonInfoServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class DocumentComparisonInfoServerPublicFunctions : global::Sungero.Docflow.Server.IDocumentComparisonInfoServerPublicFunctions
  {
    public global::System.Nullable<global::Sungero.Core.Enumeration> ComparePdfVersions(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      return global::Sungero.Docflow.Functions.DocumentComparisonInfo.ComparePdfVersions(documentComparisonInfo);
    }
    public global::System.Nullable<global::Sungero.Core.Enumeration> ConvertVersionsToPdf(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      return global::Sungero.Docflow.Functions.DocumentComparisonInfo.ConvertVersionsToPdf(documentComparisonInfo);
    }
    public global::System.Nullable<global::Sungero.Core.Enumeration> FillPdfVersionsFromArio(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo)
    {
      return global::Sungero.Docflow.Functions.DocumentComparisonInfo.FillPdfVersionsFromArio(documentComparisonInfo);
    }
    public System.Byte[] GetCachedPdfVersion(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo, global::System.String versionHash)
    {
      return global::Sungero.Docflow.Functions.DocumentComparisonInfo.GetCachedPdfVersion(documentComparisonInfo, versionHash);
    }
    public global::Sungero.Docflow.Structures.Module.IPdfConversionResult GetConvertedPdfVersion(global::Sungero.Docflow.IDocumentComparisonInfo documentComparisonInfo, System.Byte[] body, global::System.String versionHash, global::System.String extension)
    {
      return global::Sungero.Docflow.Functions.DocumentComparisonInfo.GetConvertedPdfVersion(documentComparisonInfo, body, versionHash, extension);
    }
  }
}

// ==================================================================
// DocumentComparisonInfoQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class DocumentComparisonInfo
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.DocumentComparisonInfo.DocumentComparisonInfoQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
