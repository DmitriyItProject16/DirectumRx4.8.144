
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class DocflowModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("df83a2ea-8d43-4ec4-a34a-2e61863014df"); }
    }

    public override string Name
    {
      get { return "Sungero.Docflow"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IModuleServerInitializationFunctions, global::Sungero.Docflow.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("11c9727d-9fa1-4a08-8737-e3d174de5223"), new Sungero.Docflow.Shared.AccessRightsBulkQueueItemInfo(typeof(global::Sungero.Docflow.IAccessRightsBulkQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAccessRightsBulkQueueItemServerPublicFunctions, global::Sungero.Docflow.Server.AccessRightsBulkQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAccessRightsBulkQueueItemSharedPublicFunctions, global::Sungero.Docflow.Shared.AccessRightsBulkQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6b57117e-0253-4a46-a3dc-4ed0d5b512ec"), new Sungero.Docflow.Shared.AccessRightsRuleInfo(typeof(global::Sungero.Docflow.IAccessRightsRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAccessRightsRuleServerPublicFunctions, global::Sungero.Docflow.Server.AccessRightsRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAccessRightsRuleSharedPublicFunctions, global::Sungero.Docflow.Shared.AccessRightsRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4620e695-a132-44e6-8d01-d946f7b8775a"), new Sungero.Docflow.Shared.AccessRightsRuleBusinessUnitsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("69cd7eee-b6e6-4f00-9562-5a3281c166f6"), new Sungero.Docflow.Shared.AccessRightsRuleDepartmentsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c7de5a86-53fe-44b2-b6a9-7703aab6c48b"), new Sungero.Docflow.Shared.AccessRightsRuleDocumentGroupsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("81f24b4f-47ee-455e-bd98-80aa839c3f12"), new Sungero.Docflow.Shared.AccessRightsRuleDocumentKindsInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f6f931a8-3f7f-4532-aee6-47aa4ce7f0e4"), new Sungero.Docflow.Shared.AccessRightsRuleMembersInfo(typeof(global::Sungero.Docflow.IAccessRightsRuleMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("96c4f4f3-dc74-497a-b347-e8faf4afe320"), new Sungero.Docflow.Shared.AccountingDocumentBaseInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAccountingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.AccountingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAccountingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.AccountingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dd454376-144f-461f-a2a5-4b1684ff5c4a"), new Sungero.Docflow.Shared.AccountingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fd8ac5de-440e-451f-9d12-0213f4fd59ba"), new Sungero.Docflow.Shared.AccountingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IAccountingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("58b9ed35-9c84-46cd-aa79-9b5ef5a82f5d"), new Sungero.Docflow.Shared.AddendumInfo(typeof(global::Sungero.Docflow.IAddendum)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IAddendumServerPublicFunctions, global::Sungero.Docflow.Server.AddendumServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IAddendumSharedPublicFunctions, global::Sungero.Docflow.Shared.AddendumSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("70e550a3-63c2-4166-bd4b-256718e014ec"), new Sungero.Docflow.Shared.AddendumTrackingInfo(typeof(global::Sungero.Docflow.IAddendumTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c8333ee7-aa39-4ccf-9fac-0ef0429db167"), new Sungero.Docflow.Shared.AddendumVersionsInfo(typeof(global::Sungero.Docflow.IAddendumVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("daf1900f-e66b-4368-b724-a073266145d7"), new Sungero.Docflow.Shared.ApprovalAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c09f0ae4-c959-4a57-9895-ae9aaf1f1855"), new Sungero.Docflow.Shared.ApprovalCheckingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalCheckingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalCheckingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalCheckingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalCheckingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalCheckingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f40f1e48-b0f7-4c53-9658-ebefa07fe094"), new Sungero.Docflow.Shared.ApprovalCheckReturnAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalCheckReturnAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalCheckReturnAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalCheckReturnAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalCheckReturnAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalCheckReturnAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("77fe4545-9220-4cde-9cf7-a254d28b3ba5"), new Sungero.Docflow.Shared.ApprovalConvertPdfStageInfo(typeof(global::Sungero.Docflow.IApprovalConvertPdfStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalConvertPdfStageServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalConvertPdfStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalConvertPdfStageSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalConvertPdfStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("495600a5-5f7a-49aa-ac49-9351c9af1109"), new Sungero.Docflow.Shared.ApprovalExecutionAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalExecutionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalExecutionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalExecutionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalExecutionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalExecutionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5043014a-672b-44c4-8982-b61292b4b570"), new Sungero.Docflow.Shared.ApprovalExecutionAssignmentCollapsedStagesTypesExeInfo(typeof(global::Sungero.Docflow.IApprovalExecutionAssignmentCollapsedStagesTypesExe)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e511f4f9-72a3-484c-a5f2-d5fcdd113dde"), new Sungero.Docflow.Shared.ApprovalFunctionQueueItemInfo(typeof(global::Sungero.Docflow.IApprovalFunctionQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalFunctionQueueItemServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalFunctionQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalFunctionQueueItemSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalFunctionQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6831f842-3ea6-412e-9637-c6315a4e6686"), new Sungero.Docflow.Shared.ApprovalFunctionStageBaseInfo(typeof(global::Sungero.Docflow.IApprovalFunctionStageBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalFunctionStageBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalFunctionStageBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalFunctionStageBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalFunctionStageBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("bbb08f45-60c1-4496-9ff6-b32caed44215"), new Sungero.Docflow.Shared.ApprovalManagerAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalManagerAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalManagerAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalManagerAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalManagerAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalManagerAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("20373d1e-fda4-4bec-869d-b9838b055f54"), new Sungero.Docflow.Shared.ApprovalManagerAssignmentAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalManagerAssignmentAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5db88398-c7fd-48df-95bc-f70f00a67ade"), new Sungero.Docflow.Shared.ApprovalManagerAssignmentAddresseesInfo(typeof(global::Sungero.Docflow.IApprovalManagerAssignmentAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("be83f002-c2c0-49da-aff5-b7f3bddaabf7"), new Sungero.Docflow.Shared.ApprovalNotificationInfo(typeof(global::Sungero.Docflow.IApprovalNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalNotificationServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8cd7f587-a910-4e2f-ac4f-afcc15fc3e2f"), new Sungero.Docflow.Shared.ApprovalPrintingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalPrintingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalPrintingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalPrintingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalPrintingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalPrintingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14fff8b4-a912-45db-bea8-d05c92793d4e"), new Sungero.Docflow.Shared.ApprovalPrintingAssignmentCollapsedStagesTypesPrInfo(typeof(global::Sungero.Docflow.IApprovalPrintingAssignmentCollapsedStagesTypesPr)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a3b19bde-a0a5-4c7b-9ad4-5a7e800156a9"), new Sungero.Docflow.Shared.ApprovalRegistrationAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalRegistrationAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRegistrationAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRegistrationAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRegistrationAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRegistrationAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6f3a5243-37f1-43d1-8e76-f7e7dc1999fd"), new Sungero.Docflow.Shared.ApprovalRegistrationAssignmentCollapsedStagesTypesRegInfo(typeof(global::Sungero.Docflow.IApprovalRegistrationAssignmentCollapsedStagesTypesReg)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c01d7e8b-5580-4129-b28e-98b0222b8944"), new Sungero.Docflow.Shared.ApprovalRegistrationFtsStageInfo(typeof(global::Sungero.Docflow.IApprovalRegistrationFtsStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRegistrationFtsStageServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRegistrationFtsStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRegistrationFtsStageSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRegistrationFtsStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("079b6ce1-8a62-41a6-aa89-0de5e5266253"), new Sungero.Docflow.Shared.ApprovalReviewAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalReviewAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalReviewAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalReviewAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalReviewAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalReviewAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b991fa6e-798e-42ee-b674-d957a04b843c"), new Sungero.Docflow.Shared.ApprovalReviewAssignmentCollapsedStagesTypesReInfo(typeof(global::Sungero.Docflow.IApprovalReviewAssignmentCollapsedStagesTypesRe)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9bc1a190-7ede-40e0-9895-397f2433d587"), new Sungero.Docflow.Shared.ApprovalReviewTaskStageInfo(typeof(global::Sungero.Docflow.IApprovalReviewTaskStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalReviewTaskStageServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalReviewTaskStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalReviewTaskStageSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalReviewTaskStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("040862cd-a46f-4366-b068-e659c7acaea6"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalReworkAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalReworkAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalReworkAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalReworkAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c97a3040-e94f-48af-97dd-471d94525691"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("83fd57d1-e450-48bd-94d1-09926bcd2721"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentAddresseesInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ad3d2bfd-0bcd-4d74-8a13-1368666d7963"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d534f771-4e5b-4846-81cf-9b8fd4ad754d"), new Sungero.Docflow.Shared.ApprovalReworkAssignmentRegApproversInfo(typeof(global::Sungero.Docflow.IApprovalReworkAssignmentRegApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9f5b8596-f73a-498f-b1b1-219ed77bb031"), new Sungero.Docflow.Shared.ApprovalRoleInfo(typeof(global::Sungero.Docflow.IApprovalRole)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRoleServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRoleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRoleSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRoleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3445f357-1435-4444-9f24-a56a752fc471"), new Sungero.Docflow.Shared.ApprovalRoleBaseInfo(typeof(global::Sungero.Docflow.IApprovalRoleBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRoleBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRoleBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRoleBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRoleBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a8dc61a5-862e-4c8a-a0e0-a5735ec3c3b3"), new Sungero.Docflow.Shared.ApprovalRuleInfo(typeof(global::Sungero.Docflow.IApprovalRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRuleServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRuleSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("07e78391-6f52-4e18-b8b8-799c5cfd9977"), new Sungero.Docflow.Shared.ApprovalRuleBusinessUnitsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a5711709-ae60-4738-a7b1-0878f756a6d1"), new Sungero.Docflow.Shared.ApprovalRuleConditionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleConditions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dfe3129b-e1ad-42a1-b5f3-8505dd6392bf"), new Sungero.Docflow.Shared.ApprovalRuleDepartmentsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5812c54a-95f4-4579-84d4-9be9ae8a7e58"), new Sungero.Docflow.Shared.ApprovalRuleDocumentGroupsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b4dd47f2-c49f-45bf-8a29-8a462c66050d"), new Sungero.Docflow.Shared.ApprovalRuleDocumentKindsInfo(typeof(global::Sungero.Docflow.IApprovalRuleDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a097b1e2-ee8d-41cc-ac0d-68524c2e374a"), new Sungero.Docflow.Shared.ApprovalRuleStagesInfo(typeof(global::Sungero.Docflow.IApprovalRuleStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dc4449c7-5a08-4b4d-a95e-677db85e6d5d"), new Sungero.Docflow.Shared.ApprovalRuleTransitionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleTransitions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("42a6a084-6828-47d9-95bb-50b0538a6037"), new Sungero.Docflow.Shared.ApprovalRuleBaseInfo(typeof(global::Sungero.Docflow.IApprovalRuleBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalRuleBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalRuleBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalRuleBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalRuleBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c52d30d2-0379-4259-8cc4-b800f9a23bc7"), new Sungero.Docflow.Shared.ApprovalRuleBaseBusinessUnitsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("924782de-a0ae-4b4c-aabe-2447acc39598"), new Sungero.Docflow.Shared.ApprovalRuleBaseConditionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseConditions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8fcbbaeb-8261-489e-9c66-69ca4ccdc101"), new Sungero.Docflow.Shared.ApprovalRuleBaseDepartmentsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c09f7e32-8f67-4e7d-9a5b-b93c0d780892"), new Sungero.Docflow.Shared.ApprovalRuleBaseDocumentGroupsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7da25d95-e362-41c0-b37a-4eb4b415da24"), new Sungero.Docflow.Shared.ApprovalRuleBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3314a57a-07b7-4131-bfc3-413b38507ed1"), new Sungero.Docflow.Shared.ApprovalRuleBaseStagesInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f61f8073-bd3f-4c4f-857d-da2c22cb94f3"), new Sungero.Docflow.Shared.ApprovalRuleBaseTransitionsInfo(typeof(global::Sungero.Docflow.IApprovalRuleBaseTransitions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5d86a6e4-ae51-497a-9122-8a812eba0fc7"), new Sungero.Docflow.Shared.ApprovalSendingAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSendingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSendingAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSendingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSendingAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSendingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2af3d84a-5cdd-40ef-860e-a81574a8a5fb"), new Sungero.Docflow.Shared.ApprovalSendingAssignmentCollapsedStagesTypesSenInfo(typeof(global::Sungero.Docflow.IApprovalSendingAssignmentCollapsedStagesTypesSen)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("db516acc-0f02-4ea7-960a-08f3f734db4f"), new Sungero.Docflow.Shared.ApprovalSigningAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSigningAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSigningAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSigningAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSigningAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSigningAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("970a3e40-2343-4cc7-98a6-7db27370ec13"), new Sungero.Docflow.Shared.ApprovalSigningAssignmentCollapsedStagesTypesSigInfo(typeof(global::Sungero.Docflow.IApprovalSigningAssignmentCollapsedStagesTypesSig)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b0931934-7981-4139-a398-f0e39abbb981"), new Sungero.Docflow.Shared.ApprovalSimpleAssignmentInfo(typeof(global::Sungero.Docflow.IApprovalSimpleAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSimpleAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSimpleAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSimpleAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSimpleAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("32ce5b61-1be2-4d61-b98a-37b99aff3560"), new Sungero.Docflow.Shared.ApprovalSimpleNotificationInfo(typeof(global::Sungero.Docflow.IApprovalSimpleNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalSimpleNotificationServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalSimpleNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalSimpleNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalSimpleNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("bbb34726-4316-4d87-a64d-9dcf74b654f4"), new Sungero.Docflow.Shared.ApprovalStageInfo(typeof(global::Sungero.Docflow.IApprovalStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalStageServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalStageSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b58b8d30-76b1-448c-b71e-b58e0716a840"), new Sungero.Docflow.Shared.ApprovalStageApprovalRolesInfo(typeof(global::Sungero.Docflow.IApprovalStageApprovalRoles)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("278a6b5f-97b8-4f82-a0e7-9b9031ed27d4"), new Sungero.Docflow.Shared.ApprovalStageRecipientsInfo(typeof(global::Sungero.Docflow.IApprovalStageRecipients)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("25b9ee46-e1e8-4e70-8d82-b2e7f2e03f5d"), new Sungero.Docflow.Shared.ApprovalStageBaseInfo(typeof(global::Sungero.Docflow.IApprovalStageBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalStageBaseServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalStageBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalStageBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalStageBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("100950d0-03d2-44f0-9e31-f9c8dfdf3829"), new Sungero.Docflow.Shared.ApprovalTaskInfo(typeof(global::Sungero.Docflow.IApprovalTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IApprovalTaskServerPublicFunctions, global::Sungero.Docflow.Server.ApprovalTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IApprovalTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.ApprovalTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1b265c59-bc04-4bc0-b3d1-fd7ee58db393"), new Sungero.Docflow.Shared.ApprovalTaskAddApproversInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("77b0b28f-e4b6-4e28-8295-62959ce8693c"), new Sungero.Docflow.Shared.ApprovalTaskAddApproversExpandedInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddApproversExpanded)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("93e77aaa-e991-47a9-a81f-2e749875b1f7"), new Sungero.Docflow.Shared.ApprovalTaskAddedAddendaInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddedAddenda)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("342199d9-3901-451f-b03a-2255b9db6377"), new Sungero.Docflow.Shared.ApprovalTaskAddresseesInfo(typeof(global::Sungero.Docflow.IApprovalTaskAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b38d3987-a68d-4937-a61f-cbe79d5ab5f1"), new Sungero.Docflow.Shared.ApprovalTaskObserversInfo(typeof(global::Sungero.Docflow.IApprovalTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("815cb2ff-2e85-4093-8ee8-8b5a1096b64f"), new Sungero.Docflow.Shared.ApprovalTaskRemovedAddendaInfo(typeof(global::Sungero.Docflow.IApprovalTaskRemovedAddenda)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2cdb67a1-6004-4113-a47d-e6c580bd8909"), new Sungero.Docflow.Shared.ApprovalTaskReqApproversInfo(typeof(global::Sungero.Docflow.IApprovalTaskReqApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("35cbbafd-281d-4ae4-8840-08a34ee63ba3"), new Sungero.Docflow.Shared.ApprovalTaskRevokedDocumentsRightsInfo(typeof(global::Sungero.Docflow.IApprovalTaskRevokedDocumentsRights)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("493bb59e-ae48-4cb5-ab66-071de5f890b0"), new Sungero.Docflow.Shared.CaseFileInfo(typeof(global::Sungero.Docflow.ICaseFile)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICaseFileServerPublicFunctions, global::Sungero.Docflow.Server.CaseFileServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICaseFileSharedPublicFunctions, global::Sungero.Docflow.Shared.CaseFileSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c9cff422-0936-4dd4-906d-a2fd487e5c2f"), new Sungero.Docflow.Shared.CheckReturnAssignmentInfo(typeof(global::Sungero.Docflow.ICheckReturnAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0d7f53bd-74bd-42d5-93aa-188ac51e5852"), new Sungero.Docflow.Shared.CheckReturnCheckAssignmentInfo(typeof(global::Sungero.Docflow.ICheckReturnCheckAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnCheckAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnCheckAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnCheckAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnCheckAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("af000bfc-7c6a-4308-883a-df6fe4ab7265"), new Sungero.Docflow.Shared.CheckReturnTaskInfo(typeof(global::Sungero.Docflow.ICheckReturnTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICheckReturnTaskServerPublicFunctions, global::Sungero.Docflow.Server.CheckReturnTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICheckReturnTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.CheckReturnTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1716f04c-7b1c-4aca-a2ae-46c84f99888b"), new Sungero.Docflow.Shared.CheckReturnTaskObserversInfo(typeof(global::Sungero.Docflow.ICheckReturnTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3f6f31c3-16e2-457e-9f88-48b254a500d2"), new Sungero.Docflow.Shared.ConditionInfo(typeof(global::Sungero.Docflow.ICondition)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IConditionServerPublicFunctions, global::Sungero.Docflow.Server.ConditionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IConditionSharedPublicFunctions, global::Sungero.Docflow.Shared.ConditionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("25ba16a2-6fe9-4599-a335-9b299752c83f"), new Sungero.Docflow.Shared.ConditionAddresseesInfo(typeof(global::Sungero.Docflow.IConditionAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1a4f42ad-c033-4c71-a3c0-9c41bc76d211"), new Sungero.Docflow.Shared.ConditionConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ed2f9e00-ecbd-419a-9ac7-1bba610b5e4e"), new Sungero.Docflow.Shared.ConditionCurrenciesInfo(typeof(global::Sungero.Docflow.IConditionCurrencies)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("64123db7-d49f-4da6-ae43-3a3310ca335c"), new Sungero.Docflow.Shared.ConditionDeliveryMethodsInfo(typeof(global::Sungero.Docflow.IConditionDeliveryMethods)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("994b6df7-cbf2-4dd0-bb16-d980007a2236"), new Sungero.Docflow.Shared.ConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("325a0811-c109-483d-bf57-3246eade5644"), new Sungero.Docflow.Shared.ConditionBaseInfo(typeof(global::Sungero.Docflow.IConditionBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IConditionBaseServerPublicFunctions, global::Sungero.Docflow.Server.ConditionBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IConditionBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ConditionBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("28dd7514-8305-4f7f-8a5b-55a98b8fdecb"), new Sungero.Docflow.Shared.ConditionBaseConditionDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionBaseConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("02d2a095-58f6-4746-8a9d-35a55e2f9d64"), new Sungero.Docflow.Shared.ConditionBaseCurrenciesInfo(typeof(global::Sungero.Docflow.IConditionBaseCurrencies)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7ec8485f-cc13-4da1-bfdb-a9a5f7473e26"), new Sungero.Docflow.Shared.ConditionBaseDeliveryMethodsInfo(typeof(global::Sungero.Docflow.IConditionBaseDeliveryMethods)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5cfe7890-17a1-40b1-bb97-8c5d9a0c4717"), new Sungero.Docflow.Shared.ConditionBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IConditionBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("454df3c6-b850-47cf-897f-a10d767baa77"), new Sungero.Docflow.Shared.ContractualDocumentBaseInfo(typeof(global::Sungero.Docflow.IContractualDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IContractualDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.ContractualDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IContractualDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ContractualDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ed823dc9-aa71-4b3e-9fd2-3be45aaef872"), new Sungero.Docflow.Shared.ContractualDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IContractualDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fb051c49-0b94-48b0-8100-af72495c69d5"), new Sungero.Docflow.Shared.ContractualDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IContractualDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("49d0c5e7-7069-44d2-8eb6-6e3098fc8b10"), new Sungero.Docflow.Shared.CounterpartyDocumentInfo(typeof(global::Sungero.Docflow.ICounterpartyDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ICounterpartyDocumentServerPublicFunctions, global::Sungero.Docflow.Server.CounterpartyDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ICounterpartyDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.CounterpartyDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e59c26b4-0386-461e-afc5-df4bf6146533"), new Sungero.Docflow.Shared.CounterpartyDocumentTrackingInfo(typeof(global::Sungero.Docflow.ICounterpartyDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aac43fbf-beb1-4891-b709-04118b7caecf"), new Sungero.Docflow.Shared.CounterpartyDocumentVersionsInfo(typeof(global::Sungero.Docflow.ICounterpartyDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("47f07044-beda-4949-b348-d2afa52ab4ba"), new Sungero.Docflow.Shared.DeadlineExtensionAssignmentInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3dad0441-cd89-4928-b6ff-9b7dd7fc20cf"), new Sungero.Docflow.Shared.DeadlineExtensionNotificationInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionNotificationServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ef92411f-9fd6-4009-8e8f-92c8a2419a0c"), new Sungero.Docflow.Shared.DeadlineExtensionTaskInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineExtensionTaskServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineExtensionTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineExtensionTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineExtensionTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6e169961-706f-42e3-91c7-7637ec35f38e"), new Sungero.Docflow.Shared.DeadlineExtensionTaskObserversInfo(typeof(global::Sungero.Docflow.IDeadlineExtensionTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6d840402-fdbb-4e90-8f2b-1c7950ccccdc"), new Sungero.Docflow.Shared.DeadlineRejectionAssignmentInfo(typeof(global::Sungero.Docflow.IDeadlineRejectionAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDeadlineRejectionAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.DeadlineRejectionAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDeadlineRejectionAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.DeadlineRejectionAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("45dafa52-eb1d-47fc-b363-896b1e7b5b21"), new Sungero.Docflow.Shared.DistributionListInfo(typeof(global::Sungero.Docflow.IDistributionList)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDistributionListServerPublicFunctions, global::Sungero.Docflow.Server.DistributionListServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDistributionListSharedPublicFunctions, global::Sungero.Docflow.Shared.DistributionListSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("387f2c0e-0ef4-44da-ad33-8d261fe14a53"), new Sungero.Docflow.Shared.DistributionListAddresseesInfo(typeof(global::Sungero.Docflow.IDistributionListAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0af2153a-ef3e-47fc-aa8a-aa995031019b"), new Sungero.Docflow.Shared.DocumentComparisonInfoInfo(typeof(global::Sungero.Docflow.IDocumentComparisonInfo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentComparisonInfoServerPublicFunctions, global::Sungero.Docflow.Server.DocumentComparisonInfoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentComparisonInfoSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentComparisonInfoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("54351e62-2985-4abf-b17f-ac0289240557"), new Sungero.Docflow.Shared.DocumentFullTextSearchQueueItemInfo(typeof(global::Sungero.Docflow.IDocumentFullTextSearchQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentFullTextSearchQueueItemServerPublicFunctions, global::Sungero.Docflow.Server.DocumentFullTextSearchQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentFullTextSearchQueueItemSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentFullTextSearchQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5061291-4ac6-428f-b091-d53acdbe9ae5"), new Sungero.Docflow.Shared.DocumentGroupBaseInfo(typeof(global::Sungero.Docflow.IDocumentGroupBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentGroupBaseServerPublicFunctions, global::Sungero.Docflow.Server.DocumentGroupBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentGroupBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentGroupBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b93e4c56-b907-4999-abf9-4fce555b3fe3"), new Sungero.Docflow.Shared.DocumentGroupBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IDocumentGroupBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14a59623-89a2-4ea8-b6e9-2ad4365f358c"), new Sungero.Docflow.Shared.DocumentKindInfo(typeof(global::Sungero.Docflow.IDocumentKind)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentKindServerPublicFunctions, global::Sungero.Docflow.Server.DocumentKindServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentKindSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentKindSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("79e911f6-531b-482f-8984-a89bb41f65f6"), new Sungero.Docflow.Shared.DocumentKindAvailableActionsInfo(typeof(global::Sungero.Docflow.IDocumentKindAvailableActions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d7800dd5-a9d2-41e9-bbc4-a39292ac1eeb"), new Sungero.Docflow.Shared.DocumentRegisterInfo(typeof(global::Sungero.Docflow.IDocumentRegister)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentRegisterServerPublicFunctions, global::Sungero.Docflow.Server.DocumentRegisterServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentRegisterSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentRegisterSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("35d03412-687a-4413-9b6b-8390863be84c"), new Sungero.Docflow.Shared.DocumentRegisterNumberFormatItemsInfo(typeof(global::Sungero.Docflow.IDocumentRegisterNumberFormatItems)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("218ac7df-9b29-400a-b3fc-c2e22927f638"), new Sungero.Docflow.Shared.DocumentSendActionInfo(typeof(global::Sungero.Docflow.IDocumentSendAction)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentSendActionServerPublicFunctions, global::Sungero.Docflow.Server.DocumentSendActionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentSendActionSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentSendActionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5ab5b1d7-615f-4c32-a624-dd43baf6c8cd"), new Sungero.Docflow.Shared.DocumentTemplateInfo(typeof(global::Sungero.Docflow.IDocumentTemplate)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentTemplateServerPublicFunctions, global::Sungero.Docflow.Server.DocumentTemplateServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentTemplateSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentTemplateSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b1ce78f8-84c2-4a91-82a6-e82a0d318f04"), new Sungero.Docflow.Shared.DocumentTemplateBusinessUnitsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("aa04723b-5dd6-49e5-9254-a36e245c045c"), new Sungero.Docflow.Shared.DocumentTemplateDepartmentsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("95086795-1b7c-4fc3-83a4-393f5d6520eb"), new Sungero.Docflow.Shared.DocumentTemplateDocumentKindsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("de4029f1-bb10-43ed-836c-1b1badc2ecab"), new Sungero.Docflow.Shared.DocumentTemplateVersionsInfo(typeof(global::Sungero.Docflow.IDocumentTemplateVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0896aa80-e1da-4a1e-9485-d172f8e242bc"), new Sungero.Docflow.Shared.DocumentTypeInfo(typeof(global::Sungero.Docflow.IDocumentType)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IDocumentTypeServerPublicFunctions, global::Sungero.Docflow.Server.DocumentTypeServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IDocumentTypeSharedPublicFunctions, global::Sungero.Docflow.Shared.DocumentTypeSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cf8357c3-8266-490d-b75e-0bd3e46b1ae8"), new Sungero.Docflow.Shared.ExchangeDocumentInfo(typeof(global::Sungero.Docflow.IExchangeDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IExchangeDocumentServerPublicFunctions, global::Sungero.Docflow.Server.ExchangeDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IExchangeDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.ExchangeDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0e2940ab-8568-4d47-a112-6d4a5cdb2d6d"), new Sungero.Docflow.Shared.ExchangeDocumentTrackingInfo(typeof(global::Sungero.Docflow.IExchangeDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f233f366-247d-4435-aa33-6746020e4f0d"), new Sungero.Docflow.Shared.ExchangeDocumentVersionsInfo(typeof(global::Sungero.Docflow.IExchangeDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b222993f-f582-43a8-b210-2a27f4285feb"), new Sungero.Docflow.Shared.FileRetentionPeriodInfo(typeof(global::Sungero.Docflow.IFileRetentionPeriod)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFileRetentionPeriodServerPublicFunctions, global::Sungero.Docflow.Server.FileRetentionPeriodServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFileRetentionPeriodSharedPublicFunctions, global::Sungero.Docflow.Shared.FileRetentionPeriodSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("104472db-b71b-42a8-bca5-581a08d1ca7b"), new Sungero.Docflow.Shared.FormalizedPowerOfAttorneyInfo(typeof(global::Sungero.Docflow.IFormalizedPowerOfAttorney)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFormalizedPowerOfAttorneyServerPublicFunctions, global::Sungero.Docflow.Server.FormalizedPowerOfAttorneyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFormalizedPowerOfAttorneySharedPublicFunctions, global::Sungero.Docflow.Shared.FormalizedPowerOfAttorneySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14c63ddd-aa2e-43c3-9a3b-f5e6a73a1858"), new Sungero.Docflow.Shared.FormalizedPowerOfAttorneyTrackingInfo(typeof(global::Sungero.Docflow.IFormalizedPowerOfAttorneyTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5a205c9c-5cb1-431a-a6a5-420d474c74d5"), new Sungero.Docflow.Shared.FormalizedPowerOfAttorneyVersionsInfo(typeof(global::Sungero.Docflow.IFormalizedPowerOfAttorneyVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("01be6c28-8785-4f74-9877-e3270704452e"), new Sungero.Docflow.Shared.FreeApprovalAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d3277007-c49f-4aaa-a0f7-e397fa4fb9fc"), new Sungero.Docflow.Shared.FreeApprovalFinishAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalFinishAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalFinishAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalFinishAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalFinishAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalFinishAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7d9816f6-1dea-4718-84a5-1a413df81145"), new Sungero.Docflow.Shared.FreeApprovalNotificationInfo(typeof(global::Sungero.Docflow.IFreeApprovalNotification)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalNotificationServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalNotificationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalNotificationSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalNotificationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("593ff79e-38b4-4903-b20e-9e08cfea6307"), new Sungero.Docflow.Shared.FreeApprovalReworkAssignmentInfo(typeof(global::Sungero.Docflow.IFreeApprovalReworkAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalReworkAssignmentServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalReworkAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalReworkAssignmentSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalReworkAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f4f000d4-c9ca-4209-aa95-b393914ac346"), new Sungero.Docflow.Shared.FreeApprovalReworkAssignmentApproversInfo(typeof(global::Sungero.Docflow.IFreeApprovalReworkAssignmentApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("77f43035-9f23-4a19-9882-5a6a2cd5c9c7"), new Sungero.Docflow.Shared.FreeApprovalTaskInfo(typeof(global::Sungero.Docflow.IFreeApprovalTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IFreeApprovalTaskServerPublicFunctions, global::Sungero.Docflow.Server.FreeApprovalTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IFreeApprovalTaskSharedPublicFunctions, global::Sungero.Docflow.Shared.FreeApprovalTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fe1236e0-5e44-4b10-bda8-144cb808062f"), new Sungero.Docflow.Shared.FreeApprovalTaskAddedAddendaInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskAddedAddenda)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("14eba997-b59e-4384-9ac7-a53468399b19"), new Sungero.Docflow.Shared.FreeApprovalTaskApproversInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskApprovers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b4e9ae1d-1ed1-402e-b379-46c5949d643f"), new Sungero.Docflow.Shared.FreeApprovalTaskObserversInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("498f316c-e5fc-4383-8737-6f2f844c1e66"), new Sungero.Docflow.Shared.FreeApprovalTaskRemovedAddendaInfo(typeof(global::Sungero.Docflow.IFreeApprovalTaskRemovedAddenda)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4e7bf176-40b2-4e5d-b10b-af81ad7c62c3"), new Sungero.Docflow.Shared.IncomingDocumentBaseInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IIncomingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.IncomingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IIncomingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.IncomingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("62712927-121b-4b7d-8b5f-7abaaa7c9c7d"), new Sungero.Docflow.Shared.IncomingDocumentBaseAddresseesInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBaseAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7c62bf15-4856-4feb-85e7-4b139a6d4771"), new Sungero.Docflow.Shared.IncomingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c6517906-ec88-4944-9b82-2dd280728c54"), new Sungero.Docflow.Shared.IncomingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IIncomingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ce3e34ed-7be2-4426-a951-d5a70f966650"), new Sungero.Docflow.Shared.InternalDocumentBaseInfo(typeof(global::Sungero.Docflow.IInternalDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IInternalDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.InternalDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IInternalDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.InternalDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8686b382-12c4-4dad-bd3e-d9067fce92d3"), new Sungero.Docflow.Shared.InternalDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IInternalDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("38660ede-96d3-4c57-87a5-8fe53a47615c"), new Sungero.Docflow.Shared.InternalDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IInternalDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("276d7e4a-ea11-4740-af17-893abc6bc6e9"), new Sungero.Docflow.Shared.MailDeliveryMethodInfo(typeof(global::Sungero.Docflow.IMailDeliveryMethod)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMailDeliveryMethodServerPublicFunctions, global::Sungero.Docflow.Server.MailDeliveryMethodServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMailDeliveryMethodSharedPublicFunctions, global::Sungero.Docflow.Shared.MailDeliveryMethodSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("95af409b-83fe-4697-a805-5a86ceec33f5"), new Sungero.Docflow.Shared.MemoInfo(typeof(global::Sungero.Docflow.IMemo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMemoServerPublicFunctions, global::Sungero.Docflow.Server.MemoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMemoSharedPublicFunctions, global::Sungero.Docflow.Shared.MemoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5c815151-6faf-4b26-a47a-bd82f68c0c23"), new Sungero.Docflow.Shared.MemoAddresseesInfo(typeof(global::Sungero.Docflow.IMemoAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("82a14802-ad45-4d52-a590-2031154ba6c7"), new Sungero.Docflow.Shared.MemoTrackingInfo(typeof(global::Sungero.Docflow.IMemoTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c63dffea-085c-42ff-80f9-e479a7db997b"), new Sungero.Docflow.Shared.MemoVersionsInfo(typeof(global::Sungero.Docflow.IMemoVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f9a837b7-289e-4f03-a920-0284a778bcbf"), new Sungero.Docflow.Shared.MinutesBaseInfo(typeof(global::Sungero.Docflow.IMinutesBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IMinutesBaseServerPublicFunctions, global::Sungero.Docflow.Server.MinutesBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IMinutesBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.MinutesBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("36482dd6-708f-4d56-921b-ea1e01c74794"), new Sungero.Docflow.Shared.MinutesBaseTrackingInfo(typeof(global::Sungero.Docflow.IMinutesBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2219ecca-7a8b-4678-bbe7-3dbc6e7ffa93"), new Sungero.Docflow.Shared.MinutesBaseVersionsInfo(typeof(global::Sungero.Docflow.IMinutesBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("58cca102-1e97-4f07-b6ac-fd866a8b7cb1"), new Sungero.Docflow.Shared.OfficialDocumentInfo(typeof(global::Sungero.Docflow.IOfficialDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IOfficialDocumentServerPublicFunctions, global::Sungero.Docflow.Server.OfficialDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IOfficialDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.OfficialDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2d7f6507-6d0a-4bb7-b2a1-2f4248b962e7"), new Sungero.Docflow.Shared.OfficialDocumentTrackingInfo(typeof(global::Sungero.Docflow.IOfficialDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6180769e-de94-43ff-8894-e32cb5260789"), new Sungero.Docflow.Shared.OfficialDocumentVersionsInfo(typeof(global::Sungero.Docflow.IOfficialDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f5f104fb-52e4-422b-9de1-a36937d85a2d"), new Sungero.Docflow.Shared.OutgoingDocumentBaseInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IOutgoingDocumentBaseServerPublicFunctions, global::Sungero.Docflow.Server.OutgoingDocumentBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IOutgoingDocumentBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.OutgoingDocumentBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0f69e0e7-71ef-4df0-8237-39acb1d5d679"), new Sungero.Docflow.Shared.OutgoingDocumentBaseAddresseesInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseAddressees)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6c719f38-9de5-4e00-9ead-e963c03cae9b"), new Sungero.Docflow.Shared.OutgoingDocumentBaseTrackingInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c3ce5ceb-6563-4d57-bab9-64800301243c"), new Sungero.Docflow.Shared.OutgoingDocumentBaseVersionsInfo(typeof(global::Sungero.Docflow.IOutgoingDocumentBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("edabdc0e-13d1-45e0-82a8-e60a5ea5bf68"), new Sungero.Docflow.Shared.PersonalSettingInfo(typeof(global::Sungero.Docflow.IPersonalSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPersonalSettingServerPublicFunctions, global::Sungero.Docflow.Server.PersonalSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPersonalSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.PersonalSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("be859f9b-7a04-4f07-82bc-441352bce627"), new Sungero.Docflow.Shared.PowerOfAttorneyInfo(typeof(global::Sungero.Docflow.IPowerOfAttorney)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPowerOfAttorneyServerPublicFunctions, global::Sungero.Docflow.Server.PowerOfAttorneyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPowerOfAttorneySharedPublicFunctions, global::Sungero.Docflow.Shared.PowerOfAttorneySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("936845e0-cd12-426c-b53e-a5cfc13a69a8"), new Sungero.Docflow.Shared.PowerOfAttorneyTrackingInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c6798c1f-1d6d-4250-b2d3-88f5f04f745c"), new Sungero.Docflow.Shared.PowerOfAttorneyVersionsInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a8d955b1-4b35-4013-b643-3ea9d80bd1ea"), new Sungero.Docflow.Shared.PowerOfAttorneyBaseInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPowerOfAttorneyBaseServerPublicFunctions, global::Sungero.Docflow.Server.PowerOfAttorneyBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPowerOfAttorneyBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.PowerOfAttorneyBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("357f5402-4b15-4c09-99d0-dd3d22e33d66"), new Sungero.Docflow.Shared.PowerOfAttorneyBaseTrackingInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("eb6892f9-4440-41af-abc2-91c33d53d0d8"), new Sungero.Docflow.Shared.PowerOfAttorneyBaseVersionsInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d8ac70d3-4dd2-49fb-8e32-cd79330e6243"), new Sungero.Docflow.Shared.PowerOfAttorneyQueueItemInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyQueueItem)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPowerOfAttorneyQueueItemServerPublicFunctions, global::Sungero.Docflow.Server.PowerOfAttorneyQueueItemServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPowerOfAttorneyQueueItemSharedPublicFunctions, global::Sungero.Docflow.Shared.PowerOfAttorneyQueueItemSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("298d33ab-490e-47ff-af80-d6147194e1f7"), new Sungero.Docflow.Shared.PowerOfAttorneyRevocationInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyRevocation)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IPowerOfAttorneyRevocationServerPublicFunctions, global::Sungero.Docflow.Server.PowerOfAttorneyRevocationServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IPowerOfAttorneyRevocationSharedPublicFunctions, global::Sungero.Docflow.Shared.PowerOfAttorneyRevocationSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e8ec9b10-bf60-4d4d-a0da-bf2c9cc70d27"), new Sungero.Docflow.Shared.PowerOfAttorneyRevocationTrackingInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyRevocationTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3e2d6149-3948-4ccc-9984-19f7e352265d"), new Sungero.Docflow.Shared.PowerOfAttorneyRevocationVersionsInfo(typeof(global::Sungero.Docflow.IPowerOfAttorneyRevocationVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("da8d959b-cd0c-4fab-8ff2-053d7c2a826b"), new Sungero.Docflow.Shared.ProjectBaseInfo(typeof(global::Sungero.Docflow.IProjectBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IProjectBaseServerPublicFunctions, global::Sungero.Docflow.Server.ProjectBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IProjectBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.ProjectBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6eddf9a4-bf7b-4cac-961b-a1f0f0bc7ab6"), new Sungero.Docflow.Shared.RegistrationGroupInfo(typeof(global::Sungero.Docflow.IRegistrationGroup)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRegistrationGroupServerPublicFunctions, global::Sungero.Docflow.Server.RegistrationGroupServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRegistrationGroupSharedPublicFunctions, global::Sungero.Docflow.Shared.RegistrationGroupSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fa2d7d49-b02a-4d89-a3bc-70a99999c61d"), new Sungero.Docflow.Shared.RegistrationGroupDepartmentsInfo(typeof(global::Sungero.Docflow.IRegistrationGroupDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8371fa12-018a-43da-a8b9-786be12e040c"), new Sungero.Docflow.Shared.RegistrationGroupRecipientLinksInfo(typeof(global::Sungero.Docflow.IRegistrationGroupRecipientLinks)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ff9c10ff-2c62-43cd-8bcf-d6184359b5b6"), new Sungero.Docflow.Shared.RegistrationSettingInfo(typeof(global::Sungero.Docflow.IRegistrationSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRegistrationSettingServerPublicFunctions, global::Sungero.Docflow.Server.RegistrationSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRegistrationSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.RegistrationSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("76b0a804-95c9-424a-82c4-a50af0335e89"), new Sungero.Docflow.Shared.RegistrationSettingBusinessUnitsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("12d9bfd1-5355-4b88-8084-3288d8e2b564"), new Sungero.Docflow.Shared.RegistrationSettingDepartmentsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("685d0720-fd98-4f00-8822-35bd8a5ef1ca"), new Sungero.Docflow.Shared.RegistrationSettingDocumentKindsInfo(typeof(global::Sungero.Docflow.IRegistrationSettingDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3af27f75-55f4-41be-802a-9424a8ba9c41"), new Sungero.Docflow.Shared.RetentionPolicyInfo(typeof(global::Sungero.Docflow.IRetentionPolicy)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IRetentionPolicyServerPublicFunctions, global::Sungero.Docflow.Server.RetentionPolicyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IRetentionPolicySharedPublicFunctions, global::Sungero.Docflow.Shared.RetentionPolicySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("93dd73b5-427c-4cea-821e-6e265c8cfbb1"), new Sungero.Docflow.Shared.RetentionPolicyDocumentKindsInfo(typeof(global::Sungero.Docflow.IRetentionPolicyDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("19f9b6d8-b072-4af0-b6e1-3f8a339506be"), new Sungero.Docflow.Shared.SignatureSettingInfo(typeof(global::Sungero.Docflow.ISignatureSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISignatureSettingServerPublicFunctions, global::Sungero.Docflow.Server.SignatureSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISignatureSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.SignatureSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("8de9438e-0af4-47df-8155-4b7b90c8d3d1"), new Sungero.Docflow.Shared.SignatureSettingBusinessUnitsInfo(typeof(global::Sungero.Docflow.ISignatureSettingBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9dc422bc-7d00-4fab-884b-0dba748a4ea3"), new Sungero.Docflow.Shared.SignatureSettingCategoriesInfo(typeof(global::Sungero.Docflow.ISignatureSettingCategories)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ba716656-bb74-4879-ada1-5f735e179840"), new Sungero.Docflow.Shared.SignatureSettingDepartmentsInfo(typeof(global::Sungero.Docflow.ISignatureSettingDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("7eeef0f4-ad1e-4dc8-84f7-470a29f7fd91"), new Sungero.Docflow.Shared.SignatureSettingDocumentKindsInfo(typeof(global::Sungero.Docflow.ISignatureSettingDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("09584896-81e2-4c83-8f6c-70eb8321e1d0"), new Sungero.Docflow.Shared.SimpleDocumentInfo(typeof(global::Sungero.Docflow.ISimpleDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISimpleDocumentServerPublicFunctions, global::Sungero.Docflow.Server.SimpleDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISimpleDocumentSharedPublicFunctions, global::Sungero.Docflow.Shared.SimpleDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2eb04f01-414a-46db-81f8-c6c730520c0e"), new Sungero.Docflow.Shared.SimpleDocumentTrackingInfo(typeof(global::Sungero.Docflow.ISimpleDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fd2c202d-eb66-400e-9cc8-9ade81d34c91"), new Sungero.Docflow.Shared.SimpleDocumentVersionsInfo(typeof(global::Sungero.Docflow.ISimpleDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("22610ea3-dd6d-4aee-b7cc-0ba6cd179eb1"), new Sungero.Docflow.Shared.SmartProcessingSettingInfo(typeof(global::Sungero.Docflow.ISmartProcessingSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ISmartProcessingSettingServerPublicFunctions, global::Sungero.Docflow.Server.SmartProcessingSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ISmartProcessingSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.SmartProcessingSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9291a868-0317-4b38-880b-45688b98506c"), new Sungero.Docflow.Shared.SmartProcessingSettingAdditionalClassifiersInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingAdditionalClassifiers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1b054ae6-1507-423d-bc1c-347a231d7ba6"), new Sungero.Docflow.Shared.SmartProcessingSettingCaptureSourcesInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingCaptureSources)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ccdb4976-9dbb-455d-80b7-61047f3c4e5c"), new Sungero.Docflow.Shared.SmartProcessingSettingProcessingRulesInfo(typeof(global::Sungero.Docflow.ISmartProcessingSettingProcessingRules)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("06e3a0a6-5e8c-463e-bbfd-578227389d3f"), new Sungero.Docflow.Shared.StampSettingInfo(typeof(global::Sungero.Docflow.IStampSetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IStampSettingServerPublicFunctions, global::Sungero.Docflow.Server.StampSettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IStampSettingSharedPublicFunctions, global::Sungero.Docflow.Shared.StampSettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2a84998a-677d-4528-984b-1903e45d9424"), new Sungero.Docflow.Shared.StampSettingBusinessUnitsInfo(typeof(global::Sungero.Docflow.IStampSettingBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9fed5653-77e7-4543-b071-6586033907ef"), new Sungero.Docflow.Shared.StoragePolicyInfo(typeof(global::Sungero.Docflow.IStoragePolicy)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IStoragePolicyServerPublicFunctions, global::Sungero.Docflow.Server.StoragePolicyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IStoragePolicySharedPublicFunctions, global::Sungero.Docflow.Shared.StoragePolicySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("88b065de-b495-48e4-afe9-d7523abcd755"), new Sungero.Docflow.Shared.StoragePolicyDocumentKindsInfo(typeof(global::Sungero.Docflow.IStoragePolicyDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a745bc15-ae3d-4fdc-a136-3715a923b3d9"), new Sungero.Docflow.Shared.StoragePolicyBaseInfo(typeof(global::Sungero.Docflow.IStoragePolicyBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IStoragePolicyBaseServerPublicFunctions, global::Sungero.Docflow.Server.StoragePolicyBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IStoragePolicyBaseSharedPublicFunctions, global::Sungero.Docflow.Shared.StoragePolicyBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("112c0e12-b9ae-415d-9982-64a2df7cd193"), new Sungero.Docflow.Shared.StoragePolicyBaseDocumentKindsInfo(typeof(global::Sungero.Docflow.IStoragePolicyBaseDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cafa896a-2675-4e54-ba88-5f2f4f06f805"), new Sungero.Docflow.Shared.TopicInfo(typeof(global::Sungero.Docflow.ITopic)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.ITopicServerPublicFunctions, global::Sungero.Docflow.Server.TopicServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.ITopicSharedPublicFunctions, global::Sungero.Docflow.Shared.TopicSharedPublicFunctions>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAccessRightsBulkQueueItemFilterState, global::Sungero.Docflow.Shared.AccessRightsBulkQueueItem.AccessRightsBulkQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAccessRightsRuleFilterState, global::Sungero.Docflow.Shared.AccessRightsRule.AccessRightsRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAccountingDocumentBaseFilterState, global::Sungero.Docflow.Shared.AccountingDocumentBase.AccountingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IAddendumFilterState, global::Sungero.Docflow.Shared.Addendum.AddendumFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalAssignment.ApprovalAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalCheckingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalCheckingAssignment.ApprovalCheckingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalCheckReturnAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalCheckReturnAssignment.ApprovalCheckReturnAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalConvertPdfStageFilterState, global::Sungero.Docflow.Shared.ApprovalConvertPdfStage.ApprovalConvertPdfStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalExecutionAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalExecutionAssignment.ApprovalExecutionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalFunctionQueueItemFilterState, global::Sungero.Docflow.Shared.ApprovalFunctionQueueItem.ApprovalFunctionQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalFunctionStageBaseFilterState, global::Sungero.Docflow.Shared.ApprovalFunctionStageBase.ApprovalFunctionStageBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalManagerAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalManagerAssignment.ApprovalManagerAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalNotificationFilterState, global::Sungero.Docflow.Shared.ApprovalNotification.ApprovalNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalPrintingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalPrintingAssignment.ApprovalPrintingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRegistrationAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalRegistrationAssignment.ApprovalRegistrationAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRegistrationFtsStageFilterState, global::Sungero.Docflow.Shared.ApprovalRegistrationFtsStage.ApprovalRegistrationFtsStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalReviewAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalReviewAssignment.ApprovalReviewAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalReviewTaskStageFilterState, global::Sungero.Docflow.Shared.ApprovalReviewTaskStage.ApprovalReviewTaskStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalReworkAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalReworkAssignment.ApprovalReworkAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRoleFilterState, global::Sungero.Docflow.Shared.ApprovalRole.ApprovalRoleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRoleBaseFilterState, global::Sungero.Docflow.Shared.ApprovalRoleBase.ApprovalRoleBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRuleFilterState, global::Sungero.Docflow.Shared.ApprovalRule.ApprovalRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalRuleBaseFilterState, global::Sungero.Docflow.Shared.ApprovalRuleBase.ApprovalRuleBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSendingAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSendingAssignment.ApprovalSendingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSigningAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSigningAssignment.ApprovalSigningAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSimpleAssignmentFilterState, global::Sungero.Docflow.Shared.ApprovalSimpleAssignment.ApprovalSimpleAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalSimpleNotificationFilterState, global::Sungero.Docflow.Shared.ApprovalSimpleNotification.ApprovalSimpleNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalStageFilterState, global::Sungero.Docflow.Shared.ApprovalStage.ApprovalStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalStageBaseFilterState, global::Sungero.Docflow.Shared.ApprovalStageBase.ApprovalStageBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IApprovalTaskFilterState, global::Sungero.Docflow.Shared.ApprovalTask.ApprovalTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICaseFileFilterState, global::Sungero.Docflow.Shared.CaseFile.CaseFileFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnAssignmentFilterState, global::Sungero.Docflow.Shared.CheckReturnAssignment.CheckReturnAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnCheckAssignmentFilterState, global::Sungero.Docflow.Shared.CheckReturnCheckAssignment.CheckReturnCheckAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICheckReturnTaskFilterState, global::Sungero.Docflow.Shared.CheckReturnTask.CheckReturnTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IConditionFilterState, global::Sungero.Docflow.Shared.Condition.ConditionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IConditionBaseFilterState, global::Sungero.Docflow.Shared.ConditionBase.ConditionBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IContractualDocumentBaseFilterState, global::Sungero.Docflow.Shared.ContractualDocumentBase.ContractualDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ICounterpartyDocumentFilterState, global::Sungero.Docflow.Shared.CounterpartyDocument.CounterpartyDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionAssignmentFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionAssignment.DeadlineExtensionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionNotificationFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionNotification.DeadlineExtensionNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineExtensionTaskFilterState, global::Sungero.Docflow.Shared.DeadlineExtensionTask.DeadlineExtensionTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDeadlineRejectionAssignmentFilterState, global::Sungero.Docflow.Shared.DeadlineRejectionAssignment.DeadlineRejectionAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDistributionListFilterState, global::Sungero.Docflow.Shared.DistributionList.DistributionListFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentComparisonInfoFilterState, global::Sungero.Docflow.Shared.DocumentComparisonInfo.DocumentComparisonInfoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentFullTextSearchQueueItemFilterState, global::Sungero.Docflow.Shared.DocumentFullTextSearchQueueItem.DocumentFullTextSearchQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentGroupBaseFilterState, global::Sungero.Docflow.Shared.DocumentGroupBase.DocumentGroupBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentKindFilterState, global::Sungero.Docflow.Shared.DocumentKind.DocumentKindFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentRegisterFilterState, global::Sungero.Docflow.Shared.DocumentRegister.DocumentRegisterFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentSendActionFilterState, global::Sungero.Docflow.Shared.DocumentSendAction.DocumentSendActionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentTemplateFilterState, global::Sungero.Docflow.Shared.DocumentTemplate.DocumentTemplateFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IDocumentTypeFilterState, global::Sungero.Docflow.Shared.DocumentType.DocumentTypeFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IExchangeDocumentFilterState, global::Sungero.Docflow.Shared.ExchangeDocument.ExchangeDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFileRetentionPeriodFilterState, global::Sungero.Docflow.Shared.FileRetentionPeriod.FileRetentionPeriodFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFormalizedPowerOfAttorneyFilterState, global::Sungero.Docflow.Shared.FormalizedPowerOfAttorney.FormalizedPowerOfAttorneyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalAssignment.FreeApprovalAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalFinishAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalFinishAssignment.FreeApprovalFinishAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalNotificationFilterState, global::Sungero.Docflow.Shared.FreeApprovalNotification.FreeApprovalNotificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalReworkAssignmentFilterState, global::Sungero.Docflow.Shared.FreeApprovalReworkAssignment.FreeApprovalReworkAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IFreeApprovalTaskFilterState, global::Sungero.Docflow.Shared.FreeApprovalTask.FreeApprovalTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IIncomingDocumentBaseFilterState, global::Sungero.Docflow.Shared.IncomingDocumentBase.IncomingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IInternalDocumentBaseFilterState, global::Sungero.Docflow.Shared.InternalDocumentBase.InternalDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMailDeliveryMethodFilterState, global::Sungero.Docflow.Shared.MailDeliveryMethod.MailDeliveryMethodFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMemoFilterState, global::Sungero.Docflow.Shared.Memo.MemoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IMinutesBaseFilterState, global::Sungero.Docflow.Shared.MinutesBase.MinutesBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IOfficialDocumentFilterState, global::Sungero.Docflow.Shared.OfficialDocument.OfficialDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IOutgoingDocumentBaseFilterState, global::Sungero.Docflow.Shared.OutgoingDocumentBase.OutgoingDocumentBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPersonalSettingFilterState, global::Sungero.Docflow.Shared.PersonalSetting.PersonalSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPowerOfAttorneyFilterState, global::Sungero.Docflow.Shared.PowerOfAttorney.PowerOfAttorneyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPowerOfAttorneyBaseFilterState, global::Sungero.Docflow.Shared.PowerOfAttorneyBase.PowerOfAttorneyBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPowerOfAttorneyQueueItemFilterState, global::Sungero.Docflow.Shared.PowerOfAttorneyQueueItem.PowerOfAttorneyQueueItemFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IPowerOfAttorneyRevocationFilterState, global::Sungero.Docflow.Shared.PowerOfAttorneyRevocation.PowerOfAttorneyRevocationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IProjectBaseFilterState, global::Sungero.Docflow.Shared.ProjectBase.ProjectBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRegistrationGroupFilterState, global::Sungero.Docflow.Shared.RegistrationGroup.RegistrationGroupFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRegistrationSettingFilterState, global::Sungero.Docflow.Shared.RegistrationSetting.RegistrationSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IRetentionPolicyFilterState, global::Sungero.Docflow.Shared.RetentionPolicy.RetentionPolicyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISignatureSettingFilterState, global::Sungero.Docflow.Shared.SignatureSetting.SignatureSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISimpleDocumentFilterState, global::Sungero.Docflow.Shared.SimpleDocument.SimpleDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ISmartProcessingSettingFilterState, global::Sungero.Docflow.Shared.SmartProcessingSetting.SmartProcessingSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IStampSettingFilterState, global::Sungero.Docflow.Shared.StampSetting.StampSettingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IStoragePolicyFilterState, global::Sungero.Docflow.Shared.StoragePolicy.StoragePolicyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.IStoragePolicyBaseFilterState, global::Sungero.Docflow.Shared.StoragePolicyBase.StoragePolicyBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.ITopicFilterState, global::Sungero.Docflow.Shared.Topic.TopicFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState, global::Sungero.Docflow.Shared.ApprovalRulesFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState, global::Sungero.Docflow.Shared.StoragePolicyFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Server.IModuleServerPublicFunctions, global::Sungero.Docflow.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Docflow.Shared.IModuleSharedPublicFunctions, global::Sungero.Docflow.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ApprovalRulesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsApprovalRulesVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> ApprovalRulesBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }


    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> ApprovalRulesDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }


    public ApprovalRulesFolderHandlers(global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class StoragePolicyFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsStoragePolicyVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> StoragePolicyDocumentKindFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query)
    {
      return query;
    }


    public StoragePolicyFolderHandlers(global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::System.DateTime> startTime)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForNonformalizedDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, startTime});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForNonformalizedDocument(document, versionId, startTime);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBodyForNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForNonformalizedDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForNonformalizedDocument(document, versionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForFormalizedDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeStatus, startTime});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedDocument(document, versionId, exchangeStatus, startTime);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBodyForFormalizedDocument(global::Sungero.Docflow.IAccountingDocumentBase document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForFormalizedDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeStatus});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedDocument(document, versionId, exchangeStatus);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState, global::System.Nullable<global::System.DateTime> startTime)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForExchangeDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeState, startTime});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState, startTime);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForExchangeDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeState});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.Module.IByteArray GeneratePublicBodyForFormalizedXml(global::Sungero.Docflow.Structures.Module.IByteArray xml)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForFormalizedXml", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IByteArray)});
        return (global::Sungero.Docflow.Structures.Module.IByteArray)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{xml});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForFormalizedXml(xml);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GenerateTempPublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateTempPublicBodyForExchangeDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.GenerateTempPublicBodyForExchangeDocument(document, versionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean GeneratePublicBodyForCancellationAgreement(global::Sungero.Exchange.ICancellationAgreement document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus, global::System.Nullable<global::System.DateTime> startTime)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyForCancellationAgreement", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeStatus, startTime});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GeneratePublicBodyForCancellationAgreement(document, versionId, exchangeStatus, startTime);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ConvertToPdfWithSignatureMarkInteractively(global::System.Int64 documentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertToPdfWithSignatureMarkInteractively", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ConvertToPdfWithSignatureMarkInteractively(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult GeneratePublicBodyWithSignatureMark(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.String signatureMark)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyWithSignatureMark", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, signatureMark});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBodyWithSignatureMark(document, versionId, signatureMark);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult ConvertToPdfWithStamp(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.String htmlStamp, global::System.Boolean isSignatureMark, global::System.Double rightIndent, global::System.Double bottomIndent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertToPdfWithStamp", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Double), typeof(global::System.Double)});
        return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, htmlStamp, isSignatureMark, rightIndent, bottomIndent});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ConvertToPdfWithStamp(document, versionId, htmlStamp, isSignatureMark, rightIndent, bottomIndent);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult SaveDocumentAfterConvertToPdf(global::Sungero.Docflow.IOfficialDocument document, global::System.Boolean isSignatureMark)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SaveDocumentAfterConvertToPdf", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Boolean)});
        return (global::Sungero.Docflow.Structures.OfficialDocument.ConversionToPdfResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, isSignatureMark});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SaveDocumentAfterConvertToPdf(document, isSignatureMark);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void LogPdfConverting(global::System.String message, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Content.IElectronicDocumentVersions version)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogPdfConverting", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Content.IElectronicDocumentVersions)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, document, version});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogPdfConverting(message, document, version);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureMarkAsHtml", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureMarkAsHtml(document, versionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureMarkAsHtml", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(Sungero.Domain.Shared.ISignature)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, signature});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureMarkAsHtml(document, signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams GetDefaultSignatureStampParams(global::System.Boolean withCertificate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultSignatureStampParams", new global::System.Type[]{typeof(global::System.Boolean)});
        return (global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{withCertificate});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDefaultSignatureStampParams(withCertificate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkForSimpleSignatureAsHtml(Sungero.Domain.Shared.ISignature signature, global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams signatureStampParams)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureMarkForSimpleSignatureAsHtml", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature), typeof(global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature, signatureStampParams});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureMarkForSimpleSignatureAsHtml(signature, signatureStampParams);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureMarkForCertificateAsHtml(Sungero.Domain.Shared.ISignature signature, global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams signatureStampParams)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureMarkForCertificateAsHtml", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature), typeof(global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature, signatureStampParams});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureMarkForCertificateAsHtml(signature, signatureStampParams);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ICertificateSubject GetCertificateSubject(Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificateSubject", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature)});
        return (global::Sungero.Docflow.Structures.Module.ICertificateSubject)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCertificateSubject(signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CanConvertToPdfInteractively(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CanConvertToPdfInteractively", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CanConvertToPdfInteractively(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetRegistrationStampAsHtml(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRegistrationStampAsHtml", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRegistrationStampAsHtml(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetCertificateOwnerShortName(global::Sungero.Docflow.Structures.Module.ICertificateSubject subject)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificateOwnerShortName", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ICertificateSubject)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCertificateOwnerShortName(subject);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddFullAccessRightsInSession(Sungero.Domain.Session session, global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddFullAccessRightsInSession", new global::System.Type[]{typeof(Sungero.Domain.Session), typeof(global::Sungero.Domain.Shared.IEntity)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{session, entity});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddFullAccessRightsInSession(session, entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Workflow.ITask GetCheckReturnTaskWithAccessRights(Sungero.Domain.Session session, global::System.Int64 taskId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCheckReturnTaskWithAccessRights", new global::System.Type[]{typeof(Sungero.Domain.Session), typeof(global::System.Int64)});
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{session, taskId});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCheckReturnTaskWithAccessRights(session, taskId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Workflow.IAssignment GetCheckReturnAssignmentWithAccessRights(Sungero.Domain.Session session, global::System.Int64 taskId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCheckReturnAssignmentWithAccessRights", new global::System.Type[]{typeof(Sungero.Domain.Session), typeof(global::System.Int64)});
        return (global::Sungero.Workflow.IAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{session, taskId});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetCheckReturnAssignmentWithAccessRights(session, taskId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String ValidateCheckReturnTaskLocking(global::System.Int64 taskId, global::System.Boolean checkTaskLock)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateCheckReturnTaskLocking", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId, checkTaskLock});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ValidateCheckReturnTaskLocking(taskId, checkTaskLock);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int64 taskId, global::System.Int32 operation)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteCheckReturnTask", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId, operation});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int64 taskId, global::System.Int32 operation, global::System.String text)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteCheckReturnTask", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId, operation, text});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation, text);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CompleteCheckReturnTask(global::System.Int64 taskId, global::System.Int32 operation, global::System.String text, global::System.Nullable<global::System.DateTime> deadline)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteCheckReturnTask", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId, operation, text, deadline});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CompleteCheckReturnTask(taskId, operation, text, deadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String CalculateParams(global::Sungero.Docflow.IRegistrationGroup registrationGroup, global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CalculateParams", new global::System.Type[]{typeof(global::Sungero.Docflow.IRegistrationGroup), typeof(global::Sungero.Docflow.IDocumentRegister)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{registrationGroup, documentRegister});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CalculateParams(registrationGroup, documentRegister);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.TaskIterations> GetIterationDates(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIterationDates", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.TaskIterations>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetIterationDates(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddInfoToRightContent", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{block, info});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddInfoToRightContent(block, info);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info, Sungero.Core.StateBlockLabelStyle style)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddInfoToRightContent", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(global::System.String), typeof(Sungero.Core.StateBlockLabelStyle)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{block, info, style});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddInfoToRightContent(block, info, style);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAssignmentUserComment(global::Sungero.Workflow.IAssignment assignment)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentUserComment", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAssignmentUserComment(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.String autoGeneratedText)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTaskUserComment", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, autoGeneratedText});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskUserComment(task, autoGeneratedText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.DateTime date, global::System.String autoGeneratedText)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTaskUserComment", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.DateTime), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, date, autoGeneratedText});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskUserComment(task, date, autoGeneratedText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetFormatedUserText(global::System.String userText)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormatedUserText", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{userText});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetFormatedUserText(userText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Core.Color GetGrayColor()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetGrayColor", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Core.Color)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetGrayColor();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void MarkBlock(Sungero.Core.StateBlock block)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("MarkBlock", new global::System.Type[]{typeof(Sungero.Core.StateBlock)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{block});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.MarkBlock(block);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::System.Nullable<global::System.Int32>)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fontSize});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean grayed)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{bolded, grayed});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(bolded, grayed);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{bolded, italic, grayed});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(bolded, italic, grayed);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean grayed)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fontSize, bolded, grayed});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize, bolded, grayed);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::Sungero.Core.Color color)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::Sungero.Core.Color)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{color});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(color);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed, global::Sungero.Core.Color color)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStyle", new global::System.Type[]{typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::Sungero.Core.Color)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fontSize, bolded, italic, grayed, color});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateStyle(fontSize, bolded, italic, grayed, color);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateHeaderStyle(global::System.Boolean italic)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateHeaderStyle", new global::System.Type[]{typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{italic});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateHeaderStyle(italic);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateHeaderStyle()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateHeaderStyle", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateHeaderStyle();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle(global::System.Boolean italic)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePerformerDeadlineStyle", new global::System.Type[]{typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{italic});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreatePerformerDeadlineStyle(italic);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePerformerDeadlineStyle", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreatePerformerDeadlineStyle();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateNoteStyle(global::System.Boolean italic)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateNoteStyle", new global::System.Type[]{typeof(global::System.Boolean)});
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{italic});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateNoteStyle(italic);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateNoteStyle()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateNoteStyle", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateNoteStyle();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateDelayStyle()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDelayStyle", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateDelayStyle();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.StateBlockLabelStyle CreateSeparatorStyle()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSeparatorStyle", global::System.Array.Empty<global::System.Type>());
        return (Sungero.Core.StateBlockLabelStyle)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateSeparatorStyle();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSeparatorText()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSeparatorText", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetSeparatorText();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetEmptyLineMargin()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmptyLineMargin", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetEmptyLineMargin();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentSummary", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentSummary(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Core.StateView CreateApprovalListStateView(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateApprovalListStateView", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateApprovalListStateView(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddExternalSignatureInfoToBlock(Sungero.Core.StateBlock signingBlock, Sungero.Domain.Shared.ISignature signature, global::System.Nullable<global::System.Int32> versionNumber, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddExternalSignatureInfoToBlock", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.Nullable<global::System.Int32>), typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signingBlock, signature, versionNumber, document});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddExternalSignatureInfoToBlock(signingBlock, signature, versionNumber, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetExchangeServiceNameByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeServiceNameByDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeServiceNameByDocument(document, versionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddSignatureInfoToBlock(Sungero.Core.StateBlock signingBlock, Sungero.Domain.Shared.ISignature signature, global::System.Nullable<global::System.Int32> versionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddSignatureInfoToBlock", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.Nullable<global::System.Int32>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signingBlock, signature, versionNumber});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddSignatureInfoToBlock(signingBlock, signature, versionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddValidationInfoToBlock(Sungero.Core.StateBlock block, Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddValidationInfoToBlock", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(Sungero.Domain.Shared.ISignature)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{block, signature});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddValidationInfoToBlock(block, signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSubstitutedEmployee(Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubstitutedEmployee", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubstitutedEmployee(signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureComment(Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureComment", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureComment(signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ApprovalTask.SignatureValidationErrors GetValidationInfo(Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetValidationInfo", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature)});
        return (global::Sungero.Docflow.Structures.ApprovalTask.SignatureValidationErrors)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetValidationInfo(signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SetIconToBlock(Sungero.Core.StateBlock signingBlock, Sungero.Domain.Shared.ISignature signature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetIconToBlock", new global::System.Type[]{typeof(Sungero.Core.StateBlock), typeof(Sungero.Domain.Shared.ISignature)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signingBlock, signature});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetIconToBlock(signingBlock, signature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IDepartment GetDepartment(global::Sungero.CoreEntities.IUser user)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDepartment", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser)});
        return (global::Sungero.Company.IDepartment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{user});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDepartment(user);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetManager(global::Sungero.CoreEntities.IUser user)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetManager", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{user});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetManager(user);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IRegistrationGroup GetRegistrationGroupByDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRegistrationGroupByDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
        return (global::Sungero.Docflow.IRegistrationGroup)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentFlow});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetRegistrationGroupByDocument(document, documentFlow);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRegistrationSettings", new global::System.Type[]{typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::Sungero.Company.IBusinessUnit), typeof(global::Sungero.Docflow.IDocumentKind), typeof(global::Sungero.Company.IDepartment)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{settingType, businessUnit, documentKind, department});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRegistrationSettings(settingType, businessUnit, documentKind, department);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetClerk", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetClerk(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetClerk(global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> documentFlow)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetClerk", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentFlow});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetClerk(document, documentFlow);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateIndexOnTable(global::System.String tableName, global::System.String indexName, global::System.String indexQuery)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateIndexOnTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tableName, indexName, indexQuery});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateIndexOnTable(tableName, indexName, indexQuery);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddStringParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.String parameterValue)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddStringParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName, parameterValue});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddStringParameterToCommand(command, parameterName, parameterValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddIntegerParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int32 parameterValue)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddIntegerParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String), typeof(global::System.Int32)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName, parameterValue});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddIntegerParameterToCommand(command, parameterName, parameterValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddLongParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int64 parameterValue)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddLongParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName, parameterValue});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddLongParameterToCommand(command, parameterName, parameterValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddDateTimeParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.DateTime parameterValue)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddDateTimeParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String), typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName, parameterValue});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddDateTimeParameterToCommand(command, parameterName, parameterValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Data.IDbDataParameter AddIntegerOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddIntegerOutputParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String)});
        return (System.Data.IDbDataParameter)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.AddIntegerOutputParameterToCommand(command, parameterName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Data.IDbDataParameter AddLongOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddLongOutputParameterToCommand", new global::System.Type[]{typeof(System.Data.IDbCommand), typeof(global::System.String)});
        return (System.Data.IDbDataParameter)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{command, parameterName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.AddLongOutputParameterToCommand(command, parameterName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSQLCommandFormat(global::System.String format, System.Object[] args)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteSQLCommandFormat", new global::System.Type[]{typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{format, args});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.ExecuteSQLCommandFormat(format, args);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object ExecuteSQLWithNewConnection(global::System.String format, System.Object[] args)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteSQLWithNewConnection", new global::System.Type[]{typeof(global::System.String), typeof(System.Object[])});
        return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{format, args});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ExecuteSQLWithNewConnection(format, args);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSQLCommand(global::System.String commandText)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteSQLCommand", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{commandText});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.ExecuteSQLCommand(commandText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object ExecuteScalarSQLCommand(global::System.String commandText)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteScalarSQLCommand", new global::System.Type[]{typeof(global::System.String)});
        return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{commandText});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ExecuteScalarSQLCommand(commandText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object ExecuteScalarSQLCommand(global::System.String format, System.Object[] args)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteScalarSQLCommand", new global::System.Type[]{typeof(global::System.String), typeof(System.Object[])});
        return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{format, args});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ExecuteScalarSQLCommand(format, args);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DropReportTempTable(global::System.String tableName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DropReportTempTable", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tableName});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.DropReportTempTable(tableName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DropReportTempTables(global::System.String[] tablesNames)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DropReportTempTables", new global::System.Type[]{typeof(global::System.String[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tablesNames});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.DropReportTempTables(tablesNames);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DeleteReportData(global::System.String tableName, global::System.String reportSessionId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteReportData", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tableName, reportSessionId});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.DeleteReportData(tableName, reportSessionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateIncomingDocumentsReportTempTable(global::System.String tableName, global::System.Linq.IQueryable<global::System.Int64> availableIds)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateIncomingDocumentsReportTempTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Linq.IQueryable<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tableName, availableIds});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateIncomingDocumentsReportTempTable(tableName, availableIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void WriteStructuresToTable(global::System.String table, System.Collections.Generic.IEnumerable<Domain.Shared.ISimpleAppliedStructure> structures)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteStructuresToTable", new global::System.Type[]{typeof(global::System.String), typeof(System.Collections.Generic.IEnumerable<Domain.Shared.ISimpleAppliedStructure>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{table, structures});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.WriteStructuresToTable(table, structures);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true, PackResultEntityEagerly = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAssignees(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTaskAssignees", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTaskAssignees(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true, PackResultEntityEagerly = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> GetAttachmentsWithoutAccessRights(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAttachmentsWithoutAccessRights", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)});
        return (global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performers, attachments});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAttachmentsWithoutAccessRights(performers, attachments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IncludedInClerksRole()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IncludedInClerksRole", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInClerksRole();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IncludedInDepartmentManagersRole()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IncludedInDepartmentManagersRole", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInDepartmentManagersRole();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IncludedInBusinessUnitHeadsRole()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IncludedInBusinessUnitHeadsRole", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInBusinessUnitHeadsRole();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IncludedInRole(global::System.Guid roleSid)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IncludedInRole", new global::System.Type[]{typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{roleSid});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IncludedInRole(roleSid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IsAdministratorOrAdvisor()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsAdministratorOrAdvisor", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsAdministratorOrAdvisor();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IsAdministrator()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsAdministrator", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsAdministrator();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ZipCodeAndAddress ParseZipCode(global::System.String address)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ParseZipCode", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.ZipCodeAndAddress)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{address});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ParseZipCode(address);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void FillEnvelopeTable(global::System.String reportSessionId, global::System.Collections.Generic.List<global::Sungero.Docflow.IOutgoingDocumentBase> outgoingDocuments, global::System.Collections.Generic.List<global::Sungero.Docflow.IContractualDocumentBase> contractualDocuments, global::System.Collections.Generic.List<global::Sungero.Docflow.IAccountingDocumentBase> accountingDocuments)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillEnvelopeTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOutgoingDocumentBase>), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IContractualDocumentBase>), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IAccountingDocumentBase>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportSessionId, outgoingDocuments, contractualDocuments, accountingDocuments});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.FillEnvelopeTable(reportSessionId, outgoingDocuments, contractualDocuments, accountingDocuments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToDocumentAsyncHandler(global::System.Int64 documentId, global::System.Collections.Generic.List<global::System.Int64> ruleIds, global::System.Boolean grantAccessRightsToRelatedDocuments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateGrantAccessRightsToDocumentAsyncHandler", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, ruleIds, grantAccessRightsToRelatedDocuments});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateGrantAccessRightsToDocumentAsyncHandler(documentId, ruleIds, grantAccessRightsToRelatedDocuments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToDocumentAsyncHandlerBulk(global::System.Int64 queueItemId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateGrantAccessRightsToDocumentAsyncHandlerBulk", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItemId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateGrantAccessRightsToDocumentAsyncHandlerBulk(queueItemId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IAccessRightsBulkQueueItem CreateAccessRightsBulkQueueItem(global::System.Int64 ruleId, global::System.String launchId, global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAccessRightsBulkQueueItem", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::Sungero.Docflow.IAccessRightsBulkQueueItem)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleId, launchId, documentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateAccessRightsBulkQueueItem(ruleId, launchId, documentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(global::System.Int64 ruleId, global::System.String launchId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateGrantAccessRightsToDocumentsByRuleAsyncHandler", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleId, launchId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(ruleId, launchId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateClearAccessRightsRuleStateAsyncHandler(global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateClearAccessRightsRuleStateAsyncHandler", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateClearAccessRightsRuleStateAsyncHandler(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantAccessRightsToDocumentByRule(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::System.Int64> ruleIds, global::System.Boolean grantAccessRightsToRelatedDocuments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantAccessRightsToDocumentByRule", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Boolean)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, ruleIds, grantAccessRightsToRelatedDocuments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantAccessRightsToDocumentByRule(document, ruleIds, grantAccessRightsToRelatedDocuments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateGrantAccessRightsToChildDocumentAsyncHandler(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule> rules)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateGrantAccessRightsToChildDocumentAsyncHandler", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, rules});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateGrantAccessRightsToChildDocumentAsyncHandler(document, rules);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.IDictionary<global::Sungero.CoreEntities.IRecipient, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>> GetRecipientsAccessRights(global::System.Int64 documentId, global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule> rules)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRecipientsAccessRights", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IAccessRightsRule>)});
        return (System.Collections.Generic.IDictionary<global::Sungero.CoreEntities.IRecipient, global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, rules});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRecipientsAccessRights(documentId, rules);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IAccessRightsRule> GetAvailableRules(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAvailableRules", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IAccessRightsRule>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAvailableRules(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetAvailableRuleIds(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::System.Int64> ruleIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAvailableRuleIds", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, ruleIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAvailableRuleIds(document, ruleIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetLeadingDocuments(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLeadingDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLeadingDocuments(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetAllChildDocuments(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllChildDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllChildDocuments(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetAllChildDocuments(global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllChildDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllChildDocuments(documentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetChildDocuments(global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetChildDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetChildDocuments(documentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Double GetDocflowParamsNumbericValue(global::System.String paramName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocflowParamsNumbericValue", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{paramName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsNumbericValue(paramName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Int32 GetDocflowParamsIntegerValue(global::System.String paramName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocflowParamsIntegerValue", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{paramName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsIntegerValue(paramName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.String GetDocflowParamsStringValue(global::System.String paramName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocflowParamsStringValue", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{paramName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsStringValue(paramName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Nullable<global::System.DateTime> GetDocflowParamsDateTimeValue(global::System.String paramName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocflowParamsDateTimeValue", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{paramName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsDateTimeValue(paramName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object GetDocflowParamsValue(global::System.String paramName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocflowParamsValue", new global::System.Type[]{typeof(global::System.String)});
        return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{paramName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocflowParamsValue(paramName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean DocflowParamsTableExist()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DocflowParamsTableExist", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.DocflowParamsTableExist();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetLeadindDocumentsRules(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLeadindDocumentsRules", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLeadindDocumentsRules(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendMailNotification()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendMailNotification", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendMailNotification();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastNotificationDate()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastNotificationDate", global::System.Array.Empty<global::System.Type>());
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastNotificationDate();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastNotificationDate(global::System.DateTime notificationDate)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastNotificationDate", new global::System.Type[]{typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{notificationDate});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastNotificationDate(notificationDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> TrySendNewAssignmentsMailing(global::System.DateTime previousRun, global::System.DateTime notificationDate, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase> assignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrySendNewAssignmentsMailing", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{previousRun, notificationDate, assignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TrySendNewAssignmentsMailing(previousRun, notificationDate, assignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase> GetNewAssignments(global::System.DateTime previousRun, global::System.DateTime notificationDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNewAssignments", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignmentBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{previousRun, notificationDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNewAssignments(previousRun, notificationDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetNewAssignmentSubject(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNewAssignmentSubject", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNewAssignmentSubject(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Boolean> TrySendExpiredAssignmentsMailing(global::System.DateTime previousRun, global::System.DateTime notificationDate, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrySendExpiredAssignmentsMailing", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)});
        return (global::System.Nullable<global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{previousRun, notificationDate, assignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TrySendExpiredAssignmentsMailing(previousRun, notificationDate, assignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetExpiredAssignments(global::System.DateTime previousRun, global::System.DateTime notificationDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExpiredAssignments", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{previousRun, notificationDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExpiredAssignments(previousRun, notificationDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetExpiredAssignmentSubject(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExpiredAssignmentSubject", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExpiredAssignmentSubject(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAssignmentTypeName(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentTypeName", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentTypeName(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetDateDisplayValue(global::System.Nullable<global::System.DateTime> date, global::Sungero.CoreEntities.IUser performer)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateDisplayValue", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date, performer});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDateDisplayValue(date, performer);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetDateDisplayValue(global::System.Nullable<global::System.DateTime> date)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateDisplayValue", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDateDisplayValue(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetAuthorSubjectPart(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAuthorSubjectPart", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetAuthorSubjectPart(assignment);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.MailSendingResult TrySendMailByAssignment(global::Sungero.Workflow.IAssignmentBase assignment, global::System.String subject, global::System.Boolean isExpired, global::Sungero.Company.IEmployee addressee, System.Collections.Generic.IEnumerable<global::Sungero.Company.IEmployee> copies)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrySendMailByAssignment", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.Company.IEmployee), typeof(System.Collections.Generic.IEnumerable<global::Sungero.Company.IEmployee>)});
        return (global::Sungero.Docflow.Structures.Module.MailSendingResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, subject, isExpired, addressee, copies});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TrySendMailByAssignment(assignment, subject, isExpired, addressee, copies);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetFormattedUserNameInGenitive(global::System.String userName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormattedUserNameInGenitive", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{userName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetFormattedUserNameInGenitive(userName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetFormattedUserNameInGenitive(global::System.String userName, Sungero.Core.Gender gender)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormattedUserNameInGenitive", new global::System.Type[]{typeof(global::System.String), typeof(Sungero.Core.Gender)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{userName, gender});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetFormattedUserNameInGenitive(userName, gender);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void InternalSendMailByAssignment(global::Sungero.Workflow.IAssignmentBase assignment, global::System.String subject, global::System.Boolean isExpired, global::System.String to, System.Collections.Generic.IEnumerable<global::System.String> cc)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("InternalSendMailByAssignment", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.String), typeof(System.Collections.Generic.IEnumerable<global::System.String>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, subject, isExpired, to, cc});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).InternalSendMailByAssignment(assignment, subject, isExpired, to, cc);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddLogo(Sungero.Core.IEmailMessage message)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddLogo", new global::System.Type[]{typeof(Sungero.Core.IEmailMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddLogo(message);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GenerateBody(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Boolean isExpired, global::System.Boolean hasSubstitutions)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateBody", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, isExpired, hasSubstitutions});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateBody(assignment, isExpired, hasSubstitutions);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, System.Object> GenerateBodyModel(global::Sungero.Workflow.IAssignmentBase assignment, global::System.Boolean isExpired, global::System.Boolean hasSubstitutions)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateBodyModel", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignmentBase), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (System.Collections.Generic.Dictionary<global::System.String, System.Object>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, isExpired, hasSubstitutions});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateBodyModel(assignment, isExpired, hasSubstitutions);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Byte[] GetLogo()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLogo", global::System.Array.Empty<global::System.Type>());
        return (System.Byte[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLogo();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ProcessText(Nustache.Core.RenderContext context, System.Collections.Generic.IList<System.Object> args, System.Collections.Generic.IDictionary<global::System.String, System.Object> options, Nustache.Core.RenderBlock function, Nustache.Core.RenderBlock inverse)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessText", new global::System.Type[]{typeof(Nustache.Core.RenderContext), typeof(System.Collections.Generic.IList<System.Object>), typeof(System.Collections.Generic.IDictionary<global::System.String, System.Object>), typeof(Nustache.Core.RenderBlock), typeof(Nustache.Core.RenderBlock)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{context, args, options, function, inverse});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.ProcessText(context, args, options, function, inverse);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendSummaryMailNotification()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendSummaryMailNotification", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendSummaryMailNotification();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Core.IEmailMessage> GetMailMessages(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMailMessages", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.Collections.Generic.List<Sungero.Core.IEmailMessage>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMailMessages(employeeMailInfos);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> CreateEmployeesMailInfoToSendSummaryNotification()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateEmployeesMailInfoToSendSummaryNotification", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateEmployeesMailInfoToSendSummaryNotification();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesToSendSummaryNotification()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeesToSendSummaryNotification", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetEmployeesToSendSummaryNotification();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeSubstitutions> GetSubstitutionsToSendSummaryNotification(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubstitutionsToSendSummaryNotification", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeSubstitutions>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employees});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubstitutionsToSendSummaryNotification(employees);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetSubstitutorNeedSummaryNotificationEmployees(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeSubstitutions> substitutions)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubstitutorNeedSummaryNotificationEmployees", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeSubstitutions>)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitutions});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubstitutorNeedSummaryNotificationEmployees(substitutions);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.IEmailMessage GetSummaryMailNotificationMessage(global::System.String subject, global::System.Collections.Generic.List<global::System.String> to, global::System.Collections.Generic.List<global::System.String> copy, global::System.String body)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationMessage", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.String>), typeof(global::System.Collections.Generic.List<global::System.String>), typeof(global::System.String)});
        return (Sungero.Core.IEmailMessage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, to, copy, body});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationMessage(subject, to, copy, body);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddPngAttachmentFromBase64(Sungero.Core.IEmailMessage message, global::System.String attachmentId, global::System.String attachmentAsBase64)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddPngAttachmentFromBase64", new global::System.Type[]{typeof(Sungero.Core.IEmailMessage), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, attachmentId, attachmentAsBase64});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddPngAttachmentFromBase64(message, attachmentId, attachmentAsBase64);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendSummaryMailNotificationMessages(global::System.Collections.Generic.List<Sungero.Core.IEmailMessage> messages)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendSummaryMailNotificationMessages", new global::System.Type[]{typeof(global::System.Collections.Generic.List<Sungero.Core.IEmailMessage>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{messages});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendSummaryMailNotificationMessages(messages);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetMaxPeriodLastDay(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeesMailInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMaxPeriodLastDay", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeesMailInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMaxPeriodLastDay(employeesMailInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetMinPeriodFirstDay(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeesMailInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMinPeriodFirstDay", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeesMailInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMinPeriodFirstDay(employeesMailInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> GetActionItemMailInfosForSummary(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionItemMailInfosForSummary", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActionItemMailInfosForSummary(employeeMailInfos);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> GetTaskMailInfosForSummary(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTaskMailInfosForSummary", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetTaskMailInfosForSummary(employeeMailInfos);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> GetOutgoingTaskMailInfosForSummary(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOutgoingTaskMailInfosForSummary", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetOutgoingTaskMailInfosForSummary(employeeMailInfos);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> GetAssignmentMailInfosForSummary(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos, global::System.DateTime periodFirstDay, global::System.DateTime periodLastDay)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentMailInfosForSummary", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>), typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos, periodFirstDay, periodLastDay});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentMailInfosForSummary(employeeMailInfos, periodFirstDay, periodLastDay);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> GetNoticeMailInfosForSummary(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo> employeeMailInfos, global::System.DateTime periodFirstDay)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNoticeMailInfosForSummary", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo>), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfos, periodFirstDay});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNoticeMailInfosForSummary(employeeMailInfos, periodFirstDay);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetSummaryMailNotificationClosestDaysCount()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationClosestDaysCount", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationClosestDaysCount();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetSummaryMailLeftMarginSize()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailLeftMarginSize", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailLeftMarginSize();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSummaryMailNotificationMailBodyAsHtml(global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo employeeMailInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationMailBodyAsHtml", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IEmployeeMailInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeMailInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationMailBodyAsHtml(employeeMailInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetMailBodyAsHtml(global::System.String template, System.Collections.Generic.Dictionary<global::System.String, System.Object> model)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMailBodyAsHtml", new global::System.Type[]{typeof(global::System.String), typeof(System.Collections.Generic.Dictionary<global::System.String, System.Object>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{template, model});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMailBodyAsHtml(template, model);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, System.Object> GenerateSummaryBodyModel(global::System.String assignmentsBlockContent, global::System.String actionItemBlockContent, global::System.String taskBlockContent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateSummaryBodyModel", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (System.Collections.Generic.Dictionary<global::System.String, System.Object>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignmentsBlockContent, actionItemBlockContent, taskBlockContent});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateSummaryBodyModel(assignmentsBlockContent, actionItemBlockContent, taskBlockContent);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSummaryMailNotificationAssignmentsAndNoticesContentBlockAsHtml(global::System.String blockName, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> assignmentsAndNotices, global::Sungero.Company.IEmployee employee, global::System.Nullable<global::System.DateTime> periodLastDay)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationAssignmentsAndNoticesContentBlockAsHtml", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{blockName, assignmentsAndNotices, employee, periodLastDay});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationAssignmentsAndNoticesContentBlockAsHtml(blockName, assignmentsAndNotices, employee, periodLastDay);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSummaryMailNotificationTasksContentBlockAsHtml(global::System.String blockName, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> tasks)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationTasksContentBlockAsHtml", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{blockName, tasks});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationTasksContentBlockAsHtml(blockName, tasks);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, System.Object> GenerateBlockContentModel(global::System.String blockName, global::System.String content, global::System.Int32 count, global::System.Boolean isNeedShowCount, global::System.Int32 leftMarginSize)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateBlockContentModel", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Int32), typeof(global::System.Boolean), typeof(global::System.Int32)});
        return (System.Collections.Generic.Dictionary<global::System.String, System.Object>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{blockName, content, count, isNeedShowCount, leftMarginSize});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateBlockContentModel(blockName, content, count, isNeedShowCount, leftMarginSize);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>> GetSummaryMailNotificationAssignmentsAndNoticesGroups(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> assignmentsAndNotices, global::Sungero.Company.IEmployee employee, global::System.Nullable<global::System.DateTime> periodLastDay)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationAssignmentsAndNoticesGroups", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>)});
        return (System.Collections.Generic.Dictionary<global::System.String, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignmentsAndNotices, employee, periodLastDay});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationAssignmentsAndNoticesGroups(assignmentsAndNotices, employee, periodLastDay);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSummaryMailNotificationGroupContentAsHtml(global::System.String name, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> entities)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationGroupContentAsHtml", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, entities});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationGroupContentAsHtml(name, entities);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSummaryMailNotificationWorkflowEntitiesListContentAsHtml(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> workflowEntitiesMailInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSummaryMailNotificationWorkflowEntitiesListContentAsHtml", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{workflowEntitiesMailInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSummaryMailNotificationWorkflowEntitiesListContentAsHtml(workflowEntitiesMailInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, System.Object> GenerateWorkflowEntitiesBodyModel(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo> workflowEntities, global::System.Int32 leftMarginSize)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateWorkflowEntitiesBodyModel", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IWorkflowEntityMailInfo>), typeof(global::System.Int32)});
        return (System.Collections.Generic.Dictionary<global::System.String, System.Object>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{workflowEntities, leftMarginSize});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateWorkflowEntitiesBodyModel(workflowEntities, leftMarginSize);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SummaryMailLogDebug(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SummaryMailLogDebug", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SummaryMailLogDebug(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SummaryMailLogError(global::System.String text, System.Exception exception)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SummaryMailLogError", new global::System.Type[]{typeof(global::System.String), typeof(System.Exception)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, exception});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SummaryMailLogError(text, exception);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams GetDefaultExpiringDocsNotificationParams(global::System.String lastNotificationParamName, global::System.String noticesTableName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultExpiringDocsNotificationParams", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lastNotificationParamName, noticesTableName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDefaultExpiringDocsNotificationParams(lastNotificationParamName, noticesTableName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastNotificationDate(global::System.String lastNotificationParameterName, global::System.Nullable<global::System.DateTime> defaultDate)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastNotificationDate", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lastNotificationParameterName, defaultDate});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastNotificationDate(lastNotificationParameterName, defaultDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetDocumentsWithSendedTask(global::System.String expiringDocumentTableName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsWithSendedTask", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocumentTableName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocumentsWithSendedTask(expiringDocumentTableName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearIdsFromExpiringDocsTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ClearIdsFromExpiringDocsTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocsTableName, ids});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.ClearIdsFromExpiringDocsTable(expiringDocsTableName, ids);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearExpiringTable(global::System.String expiringDocsTableName, global::System.Boolean taskIsNull)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ClearExpiringTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocsTableName, taskIsNull});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.ClearExpiringTable(expiringDocsTableName, taskIsNull);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddExpiringDocumentsToTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddExpiringDocumentsToTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocsTableName, ids});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddExpiringDocumentsToTable(expiringDocsTableName, ids);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetNotificationPoAPerformers(global::Sungero.Docflow.IPowerOfAttorneyBase powerOfAttorney)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotificationPoAPerformers", new global::System.Type[]{typeof(global::Sungero.Docflow.IPowerOfAttorneyBase)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{powerOfAttorney});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNotificationPoAPerformers(powerOfAttorney);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddTaskToExpiringTable(global::System.String expiringDocsTableName, global::System.Int64 document, global::System.Int64 task)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddTaskToExpiringTable", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocsTableName, document, task});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.AddTaskToExpiringTable(expiringDocsTableName, document, task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IsAllNotificationsStarted(global::System.String expiringDocsTableName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsAllNotificationsStarted", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{expiringDocsTableName});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsAllNotificationsStarted(expiringDocsTableName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastNotificationDate(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastNotificationDate", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{notificationParams});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastNotificationDate(notificationParams);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void TrySendExpiringDocNotifications(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrySendExpiringDocNotifications", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{notificationParams});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.TrySendExpiringDocNotifications(notificationParams);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData GetExchangeOrderInfo(global::System.String reportSessionId, global::Sungero.Docflow.IOfficialDocument sentDocument)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeOrderInfo", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.ExchangeOrderFullData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportSessionId, sentDocument});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeOrderInfo(reportSessionId, sentDocument);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetBuyerTitle(global::Sungero.Exchange.IExchangeDocumentInfo info)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerTitle", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerTitle(info);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SetSmartProcessingSettings(global::System.String arioUrl, global::System.String lowerConfidenceLimit, global::System.String upperConfidenceLimit, global::System.String firstPageClassifierName, global::System.String typeClassifierName)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetSmartProcessingSettings", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{arioUrl, lowerConfidenceLimit, upperConfidenceLimit, firstPageClassifierName, typeClassifierName});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.SetSmartProcessingSettings(arioUrl, lowerConfidenceLimit, upperConfidenceLimit, firstPageClassifierName, typeClassifierName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetArioUrl()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetArioUrl", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetArioUrl();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetArioToken()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetArioToken", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetArioToken();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CanUpdateSmartProcessingSettings()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CanUpdateSmartProcessingSettings", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CanUpdateSmartProcessingSettings();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Content.IAssociatedApplication GetAssociatedApplicationByFileName(global::System.String fileName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssociatedApplicationByFileName", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.Content.IAssociatedApplication)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fileName});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssociatedApplicationByFileName(fileName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 GetDocumentKindIdByGuid(global::System.Guid documentType, global::System.Guid kindGuid)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentKindIdByGuid", new global::System.Type[]{typeof(global::System.Guid), typeof(global::System.Guid)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentType, kindGuid});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentKindIdByGuid(documentType, kindGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTemplateDocumentKindsGuids(global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTemplateDocumentKindsGuids", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetTemplateDocumentKindsGuids(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetCurrentCultureName()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrentCultureName", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCurrentCultureName();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetTemplateHash(global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTemplateHash", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetTemplateHash(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> CaseFileFiltering(global::Sungero.Docflow.IOfficialDocument document, global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CaseFileFiltering", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, query});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CaseFileFiltering(document, query);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendCopyCaseFilesNotification(global::System.Int64 userId, global::System.String activeText)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendCopyCaseFilesNotification", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{userId, activeText});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendCopyCaseFilesNotification(userId, activeText);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantReadAccessRightsForAttachmentsConsideringCurrentRights(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantReadAccessRightsForAttachmentsConsideringCurrentRights", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity>), typeof(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{attachments, users});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantReadAccessRightsForAttachmentsConsideringCurrentRights(attachments, users);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean GrantAccessRightsOnEntity(global::Sungero.Domain.Shared.IEntity entity, global::Sungero.CoreEntities.IRecipient recipient, global::System.Guid accessRightsType)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantAccessRightsOnEntity", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, recipient, accessRightsType});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantAccessRightsOnEntity(entity, recipient, accessRightsType);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Core.GrantedAccessRights> GetAllGrantedAccessRights(global::Sungero.Domain.Shared.IEntity entity, global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllGrantedAccessRights", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.CoreEntities.IRecipient)});
        return (global::System.Collections.Generic.List<Sungero.Core.GrantedAccessRights>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, recipient});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllGrantedAccessRights(entity, recipient);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Core.GrantedAccessRights> GetAllAccessRightsLessThan(System.Collections.Generic.IEnumerable<Sungero.Core.GrantedAccessRights> recipientAccessRights, global::System.Nullable<global::System.Guid> limit)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllAccessRightsLessThan", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<Sungero.Core.GrantedAccessRights>), typeof(global::System.Nullable<global::System.Guid>)});
        return (global::System.Collections.Generic.List<Sungero.Core.GrantedAccessRights>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{recipientAccessRights, limit});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllAccessRightsLessThan(recipientAccessRights, limit);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Guid> GetHighestInstanceAccessRights(System.Collections.Generic.IEnumerable<global::System.Guid> rightsTypesList)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetHighestInstanceAccessRights", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::System.Guid>)});
        return (global::System.Nullable<global::System.Guid>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rightsTypesList});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetHighestInstanceAccessRights(rightsTypesList);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 CompareInstanceAccessRightsTypes(global::System.Guid type1, global::System.Guid type2)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompareInstanceAccessRightsTypes", new global::System.Type[]{typeof(global::System.Guid), typeof(global::System.Guid)});
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{type1, type2});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompareInstanceAccessRightsTypes(type1, type2);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean HasGrantedAccessRights(global::System.Guid classTypeGuid)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasGrantedAccessRights", new global::System.Type[]{typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{classTypeGuid});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).HasGrantedAccessRights(classTypeGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void PrepareAllAttachmentsPreviews(global::Sungero.Workflow.ITask task)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PrepareAllAttachmentsPreviews", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).PrepareAllAttachmentsPreviews(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries GetAttachmentHistoryEntriesByGroupId(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAttachmentHistoryEntriesByGroupId", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Guid)});
        return (global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, groupId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAttachmentHistoryEntriesByGroupId(task, groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String FormatUnsignedAttribute(global::System.String key, global::System.String attributeValue)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatUnsignedAttribute", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{key, attributeValue});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FormatUnsignedAttribute(key, attributeValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddUnsignedAttribute(Sungero.Domain.Shared.ISignature signature, global::System.String key, global::System.String attributeValue)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddUnsignedAttribute", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature, key, attributeValue});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddUnsignedAttribute(signature, key, attributeValue);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetUnsignedAttribute(Sungero.Domain.Shared.ISignature signature, global::System.String key)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUnsignedAttribute", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature, key});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetUnsignedAttribute(signature, key);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetUnsignedAttribute(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 signatureId, global::System.String key)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUnsignedAttribute", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, signatureId, key});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetUnsignedAttribute(document, signatureId, key);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SetDataSignature(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 signatureId, System.Byte[] newDataSignature)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetDataSignature", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(System.Byte[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, signatureId, newDataSignature});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetDataSignature(document, signatureId, newDataSignature);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CreateSignatureSettingsPresentation(global::Sungero.Docflow.ISignatureSetting setting)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSignatureSettingsPresentation", new global::System.Type[]{typeof(global::Sungero.Docflow.ISignatureSetting)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{setting});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateSignatureSettingsPresentation(setting);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Domain.Shared.IExternalLink GetExternalLink(global::System.Guid entityType, global::System.Guid entityId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExternalLink", new global::System.Type[]{typeof(global::System.Guid), typeof(global::System.Guid)});
        return (Sungero.Domain.Shared.IExternalLink)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityType, entityId});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetExternalLink(entityType, entityId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Domain.Shared.IExternalLink GetExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.String additionalInfo)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExternalLink", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String)});
        return (Sungero.Domain.Shared.IExternalLink)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, additionalInfo});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetExternalLink(entity, additionalInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Domain.Shared.IExternalLink> GetExternalLinks(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExternalLinks", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Collections.Generic.List<Sungero.Domain.Shared.IExternalLink>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetExternalLinks(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.Guid entityId)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateExternalLink", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.Guid)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, entityId});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.CreateExternalLink(entity, entityId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void EvictEntityFromSession(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EvictEntityFromSession", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.EvictEntityFromSession(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.Docflow.IFreeApprovalTask CreateFreeApprovalTask(global::Sungero.Content.IElectronicDocument document)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateFreeApprovalTask", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::Sungero.Docflow.IFreeApprovalTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateFreeApprovalTask(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask> GetApprovalTasks(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApprovalTasks", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IApprovalTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetApprovalTasks(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask> GetReviewTasks(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReviewTasks", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Linq.IQueryable<global::Sungero.RecordManagement.IDocumentReviewTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetReviewTasks(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static global::Sungero.Docflow.IApprovalTask CreateApprovalTask(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateApprovalTask", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Docflow.IApprovalTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CreateApprovalTask(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetAvaliableLeadingDocuments()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAvaliableLeadingDocuments", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAvaliableLeadingDocuments();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendStandardNotice(global::System.String subject, global::System.Int64 performerId, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendStandardNotice", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, performerId, activeText, author, threadSubject});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.SendStandardNotice(subject, performerId, activeText, author, threadSubject);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SendStandardNotice(global::System.String subject, global::Sungero.CoreEntities.IUser performer, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendStandardNotice", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, performer, activeText, author, threadSubject});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.SendStandardNotice(subject, performer, activeText, author, threadSubject);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendNoticesAsSubtask(global::System.String subject, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> performers, global::Sungero.Workflow.ITask parentTask, global::System.String activeText, global::Sungero.CoreEntities.IUser author, global::System.String threadSubject)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendNoticesAsSubtask", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>), typeof(global::Sungero.Workflow.ITask), typeof(global::System.String), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, performers, parentTask, activeText, author, threadSubject});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.SendNoticesAsSubtask(subject, performers, parentTask, activeText, author, threadSubject);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantReadAccessRightsForAttachments(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantReadAccessRightsForAttachments", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity>), typeof(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{attachments, users});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.GrantReadAccessRightsForAttachments(attachments, users);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsModuleAvailableByLicense(global::System.Guid moduleGuid)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsModuleAvailableByLicense", new global::System.Type[]{typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{moduleGuid});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsModuleAvailableByLicense(moduleGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsModuleAvailableForCurrentUserByLicense(global::System.Guid moduleGuid)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsModuleAvailableForCurrentUserByLicense", new global::System.Type[]{typeof(global::System.Guid)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{moduleGuid});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsModuleAvailableForCurrentUserByLicense(moduleGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Object GetServerEntityFunctionResult(global::Sungero.Domain.Shared.IEntity entity, global::System.String name, global::System.Collections.Generic.List<System.Object> parameters)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetServerEntityFunctionResult", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String), typeof(global::System.Collections.Generic.List<System.Object>)});
        return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, name, parameters});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetServerEntityFunctionResult(entity, name, parameters);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantManualReadRightForAttachments(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantManualReadRightForAttachments", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, attachments});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.GrantManualReadRightForAttachments(task, attachments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> UsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UsersCanBeResolutionAuthor", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UsersCanBeResolutionAuthor(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAssistedManagers()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssistedManagers", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssistedManagers();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetSubstitutedEmployees()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubstitutedEmployees", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubstitutedEmployees();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetPassedResolutionEmployees(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPassedResolutionEmployees", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPassedResolutionEmployees(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetApprovalSignatoryEmployees(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApprovalSignatoryEmployees", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetApprovalSignatoryEmployees(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsUsersCanBeResolutionAuthor(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsUsersCanBeResolutionAuthor", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, employee});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsUsersCanBeResolutionAuthor(document, employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String ToShortDateShortTime(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ToShortDateShortTime", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ToShortDateShortTime(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.DateTime GetTenantDateTimeFromUserDay(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTenantDateTimeFromUserDay", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetTenantDateTimeFromUserDay(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList> GetDistributionLists()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDistributionLists", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IDistributionList>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDistributionLists();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.IDistributionList CreateDistributionList()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDistributionList", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Docflow.IDistributionList)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDistributionList();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]> ReadLicense()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReadLicense", global::System.Array.Empty<global::System.Type>());
        return (System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.ReadLicense();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DeleteLicense()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteLicense", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.DeleteLicense();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void RestoreLicense(System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]> licenses)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RestoreLicense", new global::System.Type[]{typeof(System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{licenses});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.RestoreLicense(licenses);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void InsertOrUpdateDocflowParam(global::System.String key, global::System.String value)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("InsertOrUpdateDocflowParam", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{key, value});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.InsertOrUpdateDocflowParam(key, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void InsertDocflowParam(global::System.String key, global::System.String value)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("InsertDocflowParam", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{key, value});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.InsertDocflowParam(key, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument> GetCounterpartyDocuments(global::Sungero.Parties.ICounterparty counterparty)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCounterpartyDocuments", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.ICounterpartyDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCounterpartyDocuments(counterparty);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetSignatureValidationErrorsAsString(Sungero.Domain.Shared.ISignature signature, global::System.String separator)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureValidationErrorsAsString", new global::System.Type[]{typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signature, separator});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetSignatureValidationErrorsAsString(signature, separator);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IEmployee GetResolutionAuthor(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResolutionAuthor", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetResolutionAuthor(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddApprover", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Company.IEmployee)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, newApprover});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddApprover(assignment, newApprover);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void AddApprover(global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee newApprover, global::System.Nullable<global::System.DateTime> deadline)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddApprover", new global::System.Type[]{typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignment, newApprover, deadline});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddApprover(assignment, newApprover, deadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetActionItemsByDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionItemsByDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActionItemsByDocument(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity> GetDocumentKindSettings(global::Sungero.Docflow.IDocumentKind documentKind)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentKindSettings", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentKind)});
        return (global::System.Linq.IQueryable<global::Sungero.Domain.Shared.IEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentKind});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentKindSettings(documentKind);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetCurrentTenantId()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrentTenantId", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCurrentTenantId();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastAgentRunDate(global::System.String agentKey)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastAgentRunDate", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{agentKey});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastAgentRunDate(agentKey);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastAgentRunDate(global::System.String agentKey, global::System.DateTime notificationDate)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastAgentRunDate", new global::System.Type[]{typeof(global::System.String), typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{agentKey, notificationDate});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastAgentRunDate(agentKey, notificationDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void FastDeleteQueueItems(global::System.Collections.Generic.List<global::System.Int64> itemsIds)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FastDeleteQueueItems", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{itemsIds});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.FastDeleteQueueItems(itemsIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Guid GetRightTypeGuid(global::System.Nullable<global::Sungero.Core.Enumeration> rightType)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRightTypeGuid", new global::System.Type[]{typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
        return (global::System.Guid)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rightType});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRightTypeGuid(rightType);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int32> GetAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::Sungero.Company.IEmployee performer, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentCompletionReportData(businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.LightAssignmentFilter GetLightAssignmentFilter(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.Nullable<global::System.Int64> performerId, global::System.Boolean unwrap, global::System.Boolean needFilter, global::System.Boolean needIntersect)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLightAssignmentFilter", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Nullable<global::System.Int64>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::Sungero.Docflow.Structures.Module.LightAssignmentFilter)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, performerId, unwrap, needFilter, needIntersect});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLightAssignmentFilter(businessUnitIds, departmentIds, performerId, unwrap, needFilter, needIntersect);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IActiveAssignmentsDynamicPoint> GetActiveAssignmentsDynamicPoints(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::Sungero.Company.IEmployee performer, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.Boolean unwrap, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveAssignmentsDynamicPoints", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::Sungero.Company.IEmployee), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IActiveAssignmentsDynamicPoint>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActiveAssignmentsDynamicPoints(businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBusinessUnitAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBusinessUnitAssignmentCompletionReportData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionWidgetData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBusinessUnitAssignmentCompletionWidgetData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBusinessUnitAssignmentCompletionWidgetData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean BusinessUnitAssignmentCompletionWidgetDataExist(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BusinessUnitAssignmentCompletionWidgetDataExist", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).BusinessUnitAssignmentCompletionWidgetDataExist(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetSubordinateEmployees(global::System.Boolean withSubstitution)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubordinateEmployees", new global::System.Type[]{typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{withSubstitution});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubordinateEmployees(withSubstitution);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetRecipientsSubordinateEmployees(global::System.Collections.Generic.List<global::System.Int64> currentRecipientsIds, global::System.Collections.Generic.List<global::System.Int64> departmentsIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRecipientsSubordinateEmployees", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentRecipientsIds, departmentsIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRecipientsSubordinateEmployees(currentRecipientsIds, departmentsIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCEODepartments()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCEODepartments", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCEODepartments();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::System.Int64> GetManagersDepartments()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetManagersDepartments", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetManagersDepartments();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCurrentRecipients(global::System.Boolean withSubstitution)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrentRecipients", new global::System.Type[]{typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{withSubstitution});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCurrentRecipients(withSubstitution);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetManagersDepartments(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetManagersDepartments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{managersIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetManagersDepartments(managersIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCEODepartments(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCEODepartments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{managersIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCEODepartments(managersIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetCEOBusinessUnits(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCEOBusinessUnits", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{managersIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCEOBusinessUnits(managersIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetSubordinateDepartments(global::System.Collections.Generic.List<global::System.Int64> currentRecipientsIds, global::System.Collections.Generic.List<global::System.Int64> businessUnitsIds, global::System.Collections.Generic.List<global::System.Int64> selectedDepartmentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubordinateDepartments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentRecipientsIds, businessUnitsIds, selectedDepartmentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubordinateDepartments(currentRecipientsIds, businessUnitsIds, selectedDepartmentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> UnwrapSubordinateDepartments(global::System.Collections.Generic.List<global::System.Int64> departmentsIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnwrapSubordinateDepartments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{departmentsIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UnwrapSubordinateDepartments(departmentsIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetSubordinateBusinessUnits(global::System.Collections.Generic.List<global::System.Int64> currentRecipientsIds, global::System.Collections.Generic.List<global::System.Int64> selectedBusinessUnitIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubordinateBusinessUnits", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentRecipientsIds, selectedBusinessUnitIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubordinateBusinessUnits(currentRecipientsIds, selectedBusinessUnitIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> UnwrapSubordinateBusinessUnits(global::System.Collections.Generic.List<global::System.Int64> businessUnitsIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnwrapSubordinateBusinessUnits", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitsIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UnwrapSubordinateBusinessUnits(businessUnitsIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeesAssignmentCompletionReport.ITableLine> GetDepartmentAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDepartmentAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeesAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDepartmentAssignmentCompletionReportData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean DepartmentAssignmentCompletionReportDataExist(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DepartmentAssignmentCompletionReportDataExist", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).DepartmentAssignmentCompletionReportDataExist(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> GetPerformerLightAssignments(global::Sungero.Company.IEmployee reportPerformer, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPerformerLightAssignments", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee), typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportPerformer, reportPeriodBegin, reportPeriodEnd});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPerformerLightAssignments(reportPerformer, reportPeriodBegin, reportPeriodEnd);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> GetSourceAssignments(global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSourceAssignments", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportPeriodBegin, reportPeriodEnd});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSourceAssignments(reportPeriodBegin, reportPeriodEnd);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> GetLightAssignmentsWithDelays(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> sourceAssignments, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::Sungero.Docflow.Structures.Module.LightAssignmentFilter lightAssignmentFilter, global::System.Boolean withSubstitution)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLightAssignmentsWithDelays", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::Sungero.Docflow.Structures.Module.LightAssignmentFilter), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{sourceAssignments, reportPeriodBegin, reportPeriodEnd, lightAssignmentFilter, withSubstitution});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLightAssignmentsWithDelays(sourceAssignments, reportPeriodBegin, reportPeriodEnd, lightAssignmentFilter, withSubstitution);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> GetLightAssignmentsWithDynamicDeadline(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> sourceAssignments, global::System.DateTime periodEnd, global::Sungero.Docflow.Structures.Module.LightAssignmentFilter lightAssignmentFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLightAssignmentsWithDynamicDeadline", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::System.DateTime), typeof(global::Sungero.Docflow.Structures.Module.LightAssignmentFilter)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{sourceAssignments, periodEnd, lightAssignmentFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLightAssignmentsWithDynamicDeadline(sourceAssignments, periodEnd, lightAssignmentFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> GetLightAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> sourceAssignments, global::Sungero.Docflow.Structures.Module.LightAssignmentFilter lightAssignmentFilter, global::System.Boolean withSubstitution)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLightAssignments", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::Sungero.Docflow.Structures.Module.LightAssignmentFilter), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{sourceAssignments, lightAssignmentFilter, withSubstitution});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLightAssignments(sourceAssignments, lightAssignmentFilter, withSubstitution);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int32> GetAssignmentsCompletionReportData(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentsCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)});
        return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentsCompletionReportData(lightAssignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int32> GetAssignmentCompletion(global::System.Int32 assignmentCount, global::System.Int32 completedInTimeCount, global::System.Int32 overdueCount)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentCompletion", new global::System.Type[]{typeof(global::System.Int32), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignmentCount, completedInTimeCount, overdueCount});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentCompletion(assignmentCount, completedInTimeCount, overdueCount);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.AssignmentStatistic GetAssignmentStatistic(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentStatistic", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)});
        return (global::Sungero.Docflow.Structures.Module.AssignmentStatistic)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentStatistic(lightAssignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> GetDepartmentsForBusinessUnitAssignmentCompletion(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDepartmentsForBusinessUnitAssignmentCompletion", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDepartmentsForBusinessUnitAssignmentCompletion(businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionWidgetData(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments, global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBusinessUnitAssignmentCompletionWidgetData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments, businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBusinessUnitAssignmentCompletionWidgetData(lightAssignments, businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionReportData(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments, global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBusinessUnitAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments, businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBusinessUnitAssignmentCompletionReportData(lightAssignments, businessUnitIds, departmentIds, unwrap, withSubstitution, needFilter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GetSubordinateOrderedBusinessUnits(global::Sungero.Company.IBusinessUnit businessUnit, global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> businessUnits, global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> orderedBusinessUnits)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSubordinateOrderedBusinessUnits", new global::System.Type[]{typeof(global::Sungero.Company.IBusinessUnit), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnit, businessUnits, orderedBusinessUnits});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSubordinateOrderedBusinessUnits(businessUnit, businessUnits, orderedBusinessUnits);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeesAssignmentCompletionReport.ITableLine> GetAssignmentCompletionReportData(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeesAssignmentCompletionReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentCompletionReportData(lightAssignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeeAssignmentsReport.ITableLine> GetPerformerAssignmentCompletionReportData(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPerformerAssignmentCompletionReportData", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeeAssignmentsReport.ITableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPerformerAssignmentCompletionReportData(lightAssignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetVisibleBusinessUnits()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVisibleBusinessUnits", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVisibleBusinessUnits();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IDepartment> GetVisibleDepartments()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVisibleDepartments", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IDepartment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVisibleDepartments();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetVisibleEmployees()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVisibleEmployees", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVisibleEmployees();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AssignmentCompletionLogger(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment> lightAssignments)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AssignmentCompletionLogger", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.LightAssignment>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lightAssignments});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AssignmentCompletionLogger(lightAssignments);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificates", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCertificates(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendNotificationForExpiringPowersOfAttorney()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueSendNotificationForExpiringPowersOfAttorney", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.RequeueSendNotificationForExpiringPowersOfAttorney();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueTransferDocuments()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueTransferDocuments", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.RequeueTransferDocuments();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateStoragePolicySettings(global::System.DateTime now)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateStoragePolicySettings", new global::System.Type[]{typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{now});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateStoragePolicySettings(now);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetStoragePolicySettingsQuery(global::System.DateTime now)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetStoragePolicySettingsQuery", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{now});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetStoragePolicySettingsQuery(now);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage> GetDocumentsToTransfer()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsToTransfer", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentsToTransfer();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentsToTransferQuery()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsToTransferQuery", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentsToTransferQuery();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteSetDocumentStorage(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage> documentsToSetStorageList)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteSetDocumentStorage", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DocumentToSetStorage>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentsToSetStorageList});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteSetDocumentStorage(documentsToSetStorageList);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetCertificateSignatoryName(System.Byte[] signatureContent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificateSignatoryName", new global::System.Type[]{typeof(System.Byte[])});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signatureContent});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCertificateSignatoryName(signatureContent);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Core.IX509CertificateInfo GetSignatureCertificateInfo(System.Byte[] signatureContent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignatureCertificateInfo", new global::System.Type[]{typeof(System.Byte[])});
        return (Sungero.Core.IX509CertificateInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signatureContent});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignatureCertificateInfo(signatureContent);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetCertificateSignatoryName(global::System.String subjectInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificateSignatoryName", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subjectInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCertificateSignatoryName(subjectInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ICertificateSubject ParseCertificateSubject(global::System.String subjectInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ParseCertificateSubject", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.ICertificateSubject)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subjectInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ParseCertificateSubject(subjectInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ICertificateSubject ParseCertificateIssuer(global::System.String issuerInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ParseCertificateIssuer", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.ICertificateSubject)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{issuerInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ParseCertificateIssuer(issuerInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Collections.Generic.IDictionary<global::System.String, global::System.String> GetOidValues(global::System.String certificateInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOidValues", new global::System.Type[]{typeof(global::System.String)});
        return (System.Collections.Generic.IDictionary<global::System.String, global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{certificateInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetOidValues(certificateInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Docflow.Structures.Module.AfterExportDialog PrepareExportDocumentDialogDocuments(global::System.Collections.Generic.List<global::System.Int64> objsId, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PrepareExportDocumentDialogDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::Sungero.Docflow.Structures.Module.ExportDialogParams)});
        return (global::Sungero.Docflow.Structures.Module.AfterExportDialog)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{objsId, parameters});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).PrepareExportDocumentDialogDocuments(objsId, parameters);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Docflow.Structures.Module.AfterExportDialog PrepareExportDocumentDialogDocuments(global::Sungero.Docflow.Structures.Module.IExportDialogSearch search, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PrepareExportDocumentDialogDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IExportDialogSearch), typeof(global::Sungero.Docflow.Structures.Module.ExportDialogParams)});
        return (global::Sungero.Docflow.Structures.Module.AfterExportDialog)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{search, parameters});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).PrepareExportDocumentDialogDocuments(search, parameters);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.AfterExportDialog PrepareExportDocumentDialogDocuments(global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> objs, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PrepareExportDocumentDialogDocuments", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Docflow.Structures.Module.ExportDialogParams)});
        return (global::Sungero.Docflow.Structures.Module.AfterExportDialog)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{objs, parameters});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).PrepareExportDocumentDialogDocuments(objs, parameters);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetAddendumsForExport(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddendumsForExport", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAddendumsForExport(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.Module.ExportResult AfterExportDocumentDialogToWeb(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::Sungero.Docflow.Structures.Module.ExportDialogParams parameters)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AfterExportDocumentDialogToWeb", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>), typeof(global::Sungero.Docflow.Structures.Module.ExportDialogParams)});
        return (global::Sungero.Docflow.Structures.Module.ExportResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{objs, parameters});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AfterExportDocumentDialogToWeb(objs, parameters);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Core.IZip CreateZipFromZipModel(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::System.String fileName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateZipFromZipModel", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>), typeof(global::System.String)});
        return (global::Sungero.Core.IZip)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{zipModels, objs, fileName});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateZipFromZipModel(zipModels, objs, fileName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetExportedDocumentFolderName(global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExportedDocumentFolderName", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{officialDocument});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExportedDocumentFolderName(officialDocument);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetExportedDocumentFileName(global::Sungero.Docflow.Structures.Module.ExportedDocument document, global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExportedDocumentFileName", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedDocument), typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, officialDocument});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExportedDocumentFileName(document, officialDocument);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentNameForExport(global::Sungero.Docflow.IOfficialDocument document, global::System.Boolean forFolder)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentNameForExport", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, forFolder});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentNameForExport(document, forFolder);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String GetShortTypeName(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetShortTypeName", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetShortTypeName(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.ExportedFolder GetRealDocumentFolder(global::Sungero.Docflow.Structures.Module.ExportedDocument exportModel, global::Sungero.Docflow.IOfficialDocument officialDocument)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRealDocumentFolder", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedDocument), typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Docflow.Structures.Module.ExportedFolder)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportModel, officialDocument});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRealDocumentFolder(exportModel, officialDocument);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExportNonformalizedDocumentsToFolder(global::Sungero.Docflow.Structures.Module.ExportedDocument exportModel, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportNonformalizedDocumentsToFolder", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportModel, zipModels});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExportNonformalizedDocumentsToFolder(exportModel, zipModels);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExportDocumentWithSignature(global::Sungero.Docflow.Structures.Module.ExportedDocument exportModel, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportDocumentWithSignature", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportModel, zipModels});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExportDocumentWithSignature(exportModel, zipModels);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Domain.Shared.ISignature> GetExchangeDocumentSignature(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeDocumentSignature", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<Sungero.Domain.Shared.ISignature>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeDocumentSignature(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Sungero.Domain.Shared.ISignature> GetDocumentSignature(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentSignature", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<Sungero.Domain.Shared.ISignature>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentSignature(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> GetFolderRelativePath(global::Sungero.Docflow.Structures.Module.ExportedFolder folder)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFolderRelativePath", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder)});
        return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folder});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFolderRelativePath(folder);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void WriteTokenToFile(global::Sungero.Content.IElectronicDocumentVersions version, global::System.String docName, global::System.Boolean isPublicBody, global::Sungero.Docflow.Structures.Module.ExportedFolder folder, global::System.Int64 id, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels, global::Sungero.Docflow.Structures.Module.ExportedFolder mainFolder)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteTokenToFile", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder), typeof(global::System.Int64), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version, docName, isPublicBody, folder, id, zipModels, mainFolder});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).WriteTokenToFile(version, docName, isPublicBody, folder, id, zipModels, mainFolder);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExportFormalizedDocumentsToFolder(global::Sungero.Docflow.Structures.Module.ExportedDocument exportModel, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportFormalizedDocumentsToFolder", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportedDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportModel, zipModels});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExportFormalizedDocumentsToFolder(exportModel, zipModels);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExportFormalizedVersion(global::Sungero.Content.IElectronicDocumentVersions version, global::Sungero.Docflow.Structures.Module.ExportedFolder folder, Sungero.Domain.Shared.ISignature signature, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels, global::Sungero.Docflow.Structures.Module.ExportedFolder mainFolder)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportFormalizedVersion", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder), typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version, folder, signature, zipModels, mainFolder});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExportFormalizedVersion(version, folder, signature, zipModels, mainFolder);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExportSignature(global::Sungero.Content.IElectronicDocumentVersions version, global::System.String fileName, global::Sungero.Docflow.Structures.Module.ExportedFolder folder, Sungero.Domain.Shared.ISignature signature, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel> zipModels, global::Sungero.Docflow.Structures.Module.ExportedFolder mainFolder)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExportSignature", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::System.String), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder), typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ZipModel>), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version, fileName, folder, signature, zipModels, mainFolder});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExportSignature(version, fileName, folder, signature, zipModels, mainFolder);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GenerateFinArchiveExportReport(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> exportModels, global::System.String pathToRoot)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateFinArchiveExportReport", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportModels, pathToRoot});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateFinArchiveExportReport(exportModels, pathToRoot);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void FillDocumentPathAndNote(global::Sungero.Docflow.Structures.Module.ExportReport exportReportModel, global::Sungero.Docflow.Structures.Module.ExportedFolder folder, global::System.String rootPath, global::System.Boolean isPrint, global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillDocumentPathAndNote", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.ExportReport), typeof(global::Sungero.Docflow.Structures.Module.ExportedFolder), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exportReportModel, folder, rootPath, isPrint, id});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillDocumentPathAndNote(exportReportModel, folder, rootPath, isPrint, id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> SearchByRequisites(global::Sungero.Docflow.Structures.Module.IExportDialogSearch filter)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SearchByRequisites", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.Module.IExportDialogSearch)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{filter});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SearchByRequisites(filter);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Content.IElectronicDocumentVersions GetExportedDocumentVersion(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExportedDocumentVersion", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Content.IElectronicDocumentVersions)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExportedDocumentVersion(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetPerformerSignatory(global::Sungero.Docflow.IApprovalTask task)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPerformerSignatory", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalTask)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPerformerSignatory(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateVersionFromTemplate(global::System.Int64 documentId, global::System.Int64 templateId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateVersionFromTemplate", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, templateId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateVersionFromTemplate(documentId, templateId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ConvertToPdfWithRegistrationStamp(global::System.Int64 documentId, global::System.Double rightIndent, global::System.Double bottomIndent)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertToPdfWithRegistrationStamp", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Double), typeof(global::System.Double)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, rightIndent, bottomIndent});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ConvertToPdfWithRegistrationStamp(documentId, rightIndent, bottomIndent);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void RegisterDocument(global::System.Int64 documentId, global::System.Int64 documentRegisterId, global::System.Nullable<global::System.DateTime> registrationDate, global::System.String registrationNumber, global::System.Nullable<global::System.Boolean> numberReservation)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RegisterDocument", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.String), typeof(global::System.Nullable<global::System.Boolean>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, documentRegisterId, registrationDate, registrationNumber, numberReservation});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).RegisterDocument(documentId, documentRegisterId, registrationDate, registrationNumber, numberReservation);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean TryExternalRegisterDocument(global::System.Int64 documentId, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TryExternalRegisterDocument", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, number, date});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TryExternalRegisterDocument(documentId, number, date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CheckDocumentRegister(global::System.Int64 documentRegisterId, global::System.Int64 documentKindId, global::System.Nullable<global::System.Int64> businessUnitId, global::System.Nullable<global::System.Int64> departmentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDocumentRegister", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.Nullable<global::System.Int64>), typeof(global::System.Nullable<global::System.Int64>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentRegisterId, documentKindId, businessUnitId, departmentId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckDocumentRegister(documentRegisterId, documentKindId, businessUnitId, departmentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CheckDocumentRegisterByTinAndTrrc(global::System.Int64 documentRegisterId, global::System.Int64 documentKindId, global::System.String businessUnitTin, global::System.String businessUnitTrrc, global::System.Nullable<global::System.Int64> departmentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDocumentRegisterByTinAndTrrc", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Nullable<global::System.Int64>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentRegisterId, documentKindId, businessUnitTin, businessUnitTrrc, departmentId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckDocumentRegisterByTinAndTrrc(documentRegisterId, documentKindId, businessUnitTin, businessUnitTrrc, departmentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ApproveDocument(global::System.Int64 documentId, global::System.String note)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ApproveDocument", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, note});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ApproveDocument(documentId, note);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void EndorseDocument(global::System.Int64 documentId, global::System.String note)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EndorseDocument", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, note});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).EndorseDocument(documentId, note);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddRelations(global::System.String relationName, global::System.Int64 baseDocumentId, global::System.Int64 relationDocumentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddRelations", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{relationName, baseDocumentId, relationDocumentId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddRelations(relationName, baseDocumentId, relationDocumentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantAccessRightsToDocument(global::System.Int64 documentId, global::System.Int64 recipientId, global::System.String accessRightsTypeGuid)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantAccessRightsToDocument", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, recipientId, accessRightsTypeGuid});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantAccessRightsToDocument(documentId, recipientId, accessRightsTypeGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void GrantAccessRightsToFolder(global::System.Int64 folderId, global::System.Int64 recipientId, global::System.String accessRightsTypeGuid)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GrantAccessRightsToFolder", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderId, recipientId, accessRightsTypeGuid});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantAccessRightsToFolder(folderId, recipientId, accessRightsTypeGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddDocumentToFolder(global::System.Int64 documentId, global::System.Int64 folderId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddDocumentToFolder", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, folderId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddDocumentToFolder(documentId, folderId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateChildFolder(global::System.String folderName, global::System.Int64 parentFolderId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateChildFolder", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderName, parentFolderId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateChildFolder(folderName, parentFolderId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void AddChildFolder(global::System.Int64 folderId, global::System.Int64 parentFolderId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddChildFolder", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderId, parentFolderId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddChildFolder(folderId, parentFolderId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 GetEmployeeFavoritesFolderId(global::System.Int64 employeeId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeeFavoritesFolderId", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetEmployeeFavoritesFolderId(employeeId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int64> GetFolderIdByName(global::System.String folderName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFolderIdByName", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderName});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFolderIdByName(folderName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IFolder GetFolderByName(global::System.String folderName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFolderByName", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.CoreEntities.IFolder)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderName});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFolderByName(folderName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IFolder GetFolderById(global::System.Int64 folderId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFolderById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.CoreEntities.IFolder)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFolderById(folderId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean FolderHasContent(global::System.Int64 folderId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FolderHasContent", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{folderId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FolderHasContent(folderId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime AddWorkingDaysAndHours(global::System.DateTime date, global::System.Int32 days, global::System.Int32 hours)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddWorkingDaysAndHours", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date, days, hours});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.AddWorkingDaysAndHours(date, days, hours);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateApprovalTask(global::System.Int64 documentId, global::System.String text, global::System.Nullable<global::System.Int64> signatoryId, global::System.Collections.Generic.List<global::System.Int64> addApproverIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateApprovalTask", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Nullable<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, text, signatoryId, addApproverIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateApprovalTask(documentId, text, signatoryId, addApproverIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateFreeApprovalTask(global::System.Int64 documentId, global::System.String text, global::System.Nullable<global::System.DateTime> deadline, global::System.Collections.Generic.List<global::System.Int64> approverIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateFreeApprovalTask", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, text, deadline, approverIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateFreeApprovalTask(documentId, text, deadline, approverIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateSimpleTask(global::System.String assignmentType, global::System.String subject, global::System.Nullable<global::System.DateTime> deadline, global::System.String importance, global::System.String text, global::System.Collections.Generic.List<global::System.Int64> performerIds, global::System.Collections.Generic.List<global::System.Int64> observerIds, global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSimpleTask", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignmentType, subject, deadline, importance, text, performerIds, observerIds, documentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSimpleTask(assignmentType, subject, deadline, importance, text, performerIds, observerIds, documentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void StartTask(global::System.Int64 taskId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("StartTask", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).StartTask(taskId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CompleteAssignment(global::System.Int64 assignmentId, global::System.String result)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteAssignment", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{assignmentId, result});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteAssignment(assignmentId, result);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateDistributionList(global::System.String name, global::System.Collections.Generic.List<global::System.Int64> correspondentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDistributionList", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, correspondentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDistributionList(name, correspondentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateSignatureSettingWithFormalizedPoA(global::System.Int64 employeeId, global::System.Int64 documentId, global::System.Int64 certificateId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSignatureSettingWithFormalizedPoA", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.Int64)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employeeId, documentId, certificateId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSignatureSettingWithFormalizedPoA(employeeId, documentId, certificateId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ImportFormalizedPoABodyAndSign(global::System.Int64 documentId, global::System.String xmlDataBase64, global::System.String signatureDataBase64)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ImportFormalizedPoABodyAndSign", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, xmlDataBase64, signatureDataBase64});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ImportFormalizedPoABodyAndSign(documentId, xmlDataBase64, signatureDataBase64);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String CutText(global::System.String text, global::System.Int32 maxLength)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CutText", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, maxLength});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.CutText(text, maxLength);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetMultipleMembersRoles()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMultipleMembersRoles", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMultipleMembersRoles();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> GetSupportedExtensionsForActionItems()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSupportedExtensionsForActionItems", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSupportedExtensionsForActionItems();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.Structures.Module.DatabooksWithNullCode HasDatabooksWithNullCode()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasDatabooksWithNullCode", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Docflow.Structures.Module.DatabooksWithNullCode)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.HasDatabooksWithNullCode();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> FilterDocumentKindsByAccessRights(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FilterDocumentKindsByAccessRights", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FilterDocumentKindsByAccessRights(query);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IsVersionBodyEmpty(global::System.Int64 documentId, global::System.Int32 versionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsVersionBodyEmpty", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, versionNumber});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsVersionBodyEmpty(documentId, versionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.Domain.Shared.IBinaryData GetVersionBody(global::System.Int64 documentId, global::System.Int32 versionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVersionBody", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int32)});
        return (Sungero.Domain.Shared.IBinaryData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, versionNumber});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVersionBody(documentId, versionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Domain.Shared.IEntity GetElectronicDocumentAsEntity(global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetElectronicDocumentAsEntity", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Domain.Shared.IEntity)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetElectronicDocumentAsEntity(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Docflow.IOfficialDocument GetDocumentById(global::System.Int64 id)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetDocumentById(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Content.IElectronicDocument GetElectronicDocumentById(global::System.Int64 id)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetElectronicDocumentById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Content.IElectronicDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetElectronicDocumentById(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetNewCoAssigneeDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> coAssigneeDeadline, global::System.Nullable<global::System.DateTime> newDeadline, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNewCoAssigneeDeadline", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, coAssigneeDeadline, newDeadline, employee});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNewCoAssigneeDeadline(deadline, coAssigneeDeadline, newDeadline, employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Double GetIntervalInWorkingHours(global::System.DateTime firstDate, global::System.DateTime secondDate, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIntervalInWorkingHours", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstDate, secondDate, employee});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetIntervalInWorkingHours(firstDate, secondDate, employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ExecuteWaitAssignmentMonitoring(global::System.Collections.Generic.List<global::System.Int64> parentAssignmentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteWaitAssignmentMonitoring", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentAssignmentIds});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteWaitAssignmentMonitoring(parentAssignmentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetAvailableRegistrationSettings(global::System.Nullable<global::Sungero.Core.Enumeration> settingType, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Docflow.IDocumentKind documentKind, global::Sungero.Company.IDepartment department)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAvailableRegistrationSettings", new global::System.Type[]{typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::Sungero.Company.IBusinessUnit), typeof(global::Sungero.Docflow.IDocumentKind), typeof(global::Sungero.Company.IDepartment)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{settingType, businessUnit, documentKind, department});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAvailableRegistrationSettings(settingType, businessUnit, documentKind, department);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting> GetRegistrationSettingByDocumentRegister(global::Sungero.Docflow.IDocumentRegister documentRegister)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRegistrationSettingByDocumentRegister", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentRegister)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentRegister});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRegistrationSettingByDocumentRegister(documentRegister);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IFormalizedPowerOfAttorney GetFormalizedPoAByEmployee(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormalizedPoAByEmployee", new global::System.Type[]{typeof(global::Sungero.Company.IBusinessUnit), typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Docflow.IFormalizedPowerOfAttorney)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnit, employee});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFormalizedPoAByEmployee(businessUnit, employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void SyncFormalizedPoAState(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection connection)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SyncFormalizedPoAState", new global::System.Type[]{typeof(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{connection});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SyncFormalizedPoAState(connection);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetActiveFormalizedPoAByBusinessUnit(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveFormalizedPoAByBusinessUnit", new global::System.Type[]{typeof(global::Sungero.Company.IBusinessUnit)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnit});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActiveFormalizedPoAByBusinessUnit(businessUnit);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void DeleteObsoletePowerOfAttorneyQueueItems(global::System.Collections.Generic.List<global::System.Int64> activeFormalizedPoAIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteObsoletePowerOfAttorneyQueueItems", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{activeFormalizedPoAIds});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).DeleteObsoletePowerOfAttorneyQueueItems(activeFormalizedPoAIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void CreateFormalizedPoAQueueItemBatch(global::System.Collections.Generic.List<global::System.Int64> formalizedPoAIdsBatch, global::System.String batchGuid)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateFormalizedPoAQueueItemBatch", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{formalizedPoAIdsBatch, batchGuid});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateFormalizedPoAQueueItemBatch(formalizedPoAIdsBatch, batchGuid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.ISignatureSetting GetOurSigningReasonWithHighPriority(global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> settings, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOurSigningReasonWithHighPriority", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting>), typeof(global::Sungero.CoreEntities.ICertificate)});
        return (global::Sungero.Docflow.ISignatureSetting)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{settings, certificate});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetOurSigningReasonWithHighPriority(settings, certificate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetOrderedSignatureSettings(global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOrderedSignatureSettings", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{settings});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetOrderedSignatureSettings(settings);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetAccessRightsBulkProcessingBatchSize()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAccessRightsBulkProcessingBatchSize", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAccessRightsBulkProcessingBatchSize();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetAccessRightsBulkProcessingJobQueueItemsLimit()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAccessRightsBulkProcessingJobQueueItemsLimit", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAccessRightsBulkProcessingJobQueueItemsLimit();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetAccessRightsBulkProcessingRetriesLimit()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAccessRightsBulkProcessingRetriesLimit", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAccessRightsBulkProcessingRetriesLimit();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void StartClearAccessRightsRulesState()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("StartClearAccessRightsRulesState", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).StartClearAccessRightsRulesState();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearAccessRightsBulkQueueItems()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ClearAccessRightsBulkQueueItems", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ClearAccessRightsBulkQueueItems();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearProcessedAccessRightsBulkQueueItems()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ClearProcessedAccessRightsBulkQueueItems", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ClearProcessedAccessRightsBulkQueueItems();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void ClearObsoleteLaunchIdAccessRightsBulkQueueItems()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ClearObsoleteLaunchIdAccessRightsBulkQueueItems", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ClearObsoleteLaunchIdAccessRightsBulkQueueItems();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IPdfConversionResult ConvertDocumentToPdfByAspose(System.Byte[] body, global::System.String extension)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertDocumentToPdfByAspose", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.IPdfConversionResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, extension});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ConvertDocumentToPdfByAspose(body, extension);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IPdfConversionResult ConvertDocumentByArioAsync(System.Byte[] body, global::System.String fileName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ConvertDocumentByArioAsync", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.Module.IPdfConversionResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, fileName});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ConvertDocumentByArioAsync(body, fileName);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IPdfConversionResult CreatePdfConversionResult(System.Byte[] body, global::System.Boolean isConversionCompleted, global::System.Int32 arioTaskId, global::System.Boolean isArioConversion, global::System.Boolean hasErrors)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePdfConversionResult", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.Boolean), typeof(global::System.Int32), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::Sungero.Docflow.Structures.Module.IPdfConversionResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, isConversionCompleted, arioTaskId, isArioConversion, hasErrors});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreatePdfConversionResult(body, isConversionCompleted, arioTaskId, isArioConversion, hasErrors);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.IPdfConversionResult GetConversionResultFromArio(global::System.Int32 taskId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetConversionResultFromArio", new global::System.Type[]{typeof(global::System.Int32)});
        return (global::Sungero.Docflow.Structures.Module.IPdfConversionResult)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetConversionResultFromArio(taskId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static Sungero.ArioExtensions.ArioConnector GetArioConnector()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetArioConnector", global::System.Array.Empty<global::System.Type>());
        return (Sungero.ArioExtensions.ArioConnector)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetArioConnector();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.IDocumentComparisonInfo CreateDocumentComparisonInfo(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Int32 firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Int32 secondVersionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocumentComparisonInfo", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32), typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32)});
        return (global::Sungero.Docflow.IDocumentComparisonInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstDocument, firstVersionNumber, secondDocument, secondVersionNumber});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDocumentComparisonInfo(firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetDocumentComparisonInfoName(global::Sungero.Content.IElectronicDocument firstDocument, global::System.Nullable<global::System.Int32> firstVersionNumber, global::Sungero.Content.IElectronicDocument secondDocument, global::System.Nullable<global::System.Int32> secondVersionNumber)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentComparisonInfoName", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Nullable<global::System.Int32>), typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Nullable<global::System.Int32>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{firstDocument, firstVersionNumber, secondDocument, secondVersionNumber});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentComparisonInfoName(firstDocument, firstVersionNumber, secondDocument, secondVersionNumber);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void CreateCompareDocumentsAsyncHandler(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCompareDocumentsAsyncHandler", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentComparisonInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfo});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateCompareDocumentsAsyncHandler(comparisonInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Docflow.IDocumentComparisonInfo GetDocumentComparisonInfoById(global::System.Int64 comparisonInfoId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentComparisonInfoById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Docflow.IDocumentComparisonInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfoId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentComparisonInfoById(comparisonInfoId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentComparisonInfo> GetDocumentComparisonInfosToDelete()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentComparisonInfosToDelete", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentComparisonInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentComparisonInfosToDelete();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetDocumentComparisonCompleteMessage(global::Sungero.Docflow.IDocumentComparisonInfo comparisonInfo)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentComparisonCompleteMessage", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentComparisonInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comparisonInfo});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentComparisonCompleteMessage(comparisonInfo);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean CheckVersionIndexingRestrictions(global::Sungero.Content.IElectronicDocumentVersions version, global::System.Boolean logMessages)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckVersionIndexingRestrictions", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::System.Boolean)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version, logMessages});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckVersionIndexingRestrictions(version, logMessages);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Byte[] GetVersionBodyContent(global::Sungero.Content.IElectronicDocumentVersions version)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVersionBodyContent", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocumentVersions)});
        return (System.Byte[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVersionBodyContent(version);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void IndexDocumentsForFullTextSearch(global::System.Int64 documentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IndexDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IndexDocumentsForFullTextSearch(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void BulkIndexDocumentsForFullTextSearch(global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String mode)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BulkIndexDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{periodBegin, periodEnd, mode});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).BulkIndexDocumentsForFullTextSearch(periodBegin, periodEnd, mode);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetIndexDocumentsForFullTextSearchJobQueueItemsLimit()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIndexDocumentsForFullTextSearchJobQueueItemsLimit", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetIndexDocumentsForFullTextSearchJobQueueItemsLimit();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetIndexDocumentsForFullTextSearchRetriesLimit()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIndexDocumentsForFullTextSearchRetriesLimit", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetIndexDocumentsForFullTextSearchRetriesLimit();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetBulkIndexingDocumentsLimit()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBulkIndexingDocumentsLimit", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBulkIndexingDocumentsLimit();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem> GetAlreadyScheduledDocumentFullTextSearchQueueItems(global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAlreadyScheduledDocumentFullTextSearchQueueItems", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAlreadyScheduledDocumentFullTextSearchQueueItems(documentIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem> CreateDocumentFullTextSearchQueueItems(System.Collections.Generic.IEnumerable<global::System.Int64> documentIds, global::System.Int32 priority)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocumentFullTextSearchQueueItems", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::System.Int64>), typeof(global::System.Int32)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentIds, priority});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDocumentFullTextSearchQueueItems(documentIds, priority);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void IncreasePriorityForDocumentFullTextSearchQueueItems(System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem> queueItems)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IncreasePriorityForDocumentFullTextSearchQueueItems", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.Docflow.IDocumentFullTextSearchQueueItem>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItems});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IncreasePriorityForDocumentFullTextSearchQueueItems(queueItems);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetDocumentFullTextSearchQueueItemDefaultPriority()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentFullTextSearchQueueItemDefaultPriority", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentFullTextSearchQueueItemDefaultPriority();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Int32 GetDocumentFullTextSearchQueueItemLowPriority()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentFullTextSearchQueueItemLowPriority", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentFullTextSearchQueueItemLowPriority();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.DateTime GetLastIndexingRunDate()
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastIndexingRunDate", global::System.Array.Empty<global::System.Type>());
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.GetLastIndexingRunDate();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void UpdateLastIndexingRunDate(global::System.DateTime runDate)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastIndexingRunDate", new global::System.Type[]{typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{runDate});
      }
      else
      {
    global::Sungero.Docflow.Server.ModuleFunctions.UpdateLastIndexingRunDate(runDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetDocumentsForFullTextSearch(global::System.DateTime lastRunDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{lastRunDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentsForFullTextSearch(lastRunDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetLastVersionModifiedAfterDateDocumentsForFullTextSearch(global::System.DateTime date)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastVersionModifiedAfterDateDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLastVersionModifiedAfterDateDocumentsForFullTextSearch(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetLastVersionDeletedAfterDateDocumentsForFullTextSearch(global::System.DateTime date)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastVersionDeletedAfterDateDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLastVersionDeletedAfterDateDocumentsForFullTextSearch(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetAfterDateDocumentsForFullTextSearchByQuery(global::System.String query, global::System.DateTime date)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAfterDateDocumentsForFullTextSearchByQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.DateTime)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, date});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAfterDateDocumentsForFullTextSearchByQuery(query, date);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.String FillGetDocsForFullTextSearchQueryRequirements(global::System.String query)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillGetDocsForFullTextSearchQueryRequirements", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillGetDocsForFullTextSearchQueryRequirements(query);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetBulkDocumentsForFullTextSearch(global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.Int64 lastDocumentId, global::System.String mode)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBulkDocumentsForFullTextSearch", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{periodBegin, periodEnd, lastDocumentId, mode});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBulkDocumentsForFullTextSearch(periodBegin, periodEnd, lastDocumentId, mode);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IsArioEnabled(ArioExtensions.ArioConnector connector)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsArioEnabled", new global::System.Type[]{typeof(ArioExtensions.ArioConnector)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{connector});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsArioEnabled(connector);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean IsDocumentsFullTextSearchEnabled()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsDocumentsFullTextSearchEnabled", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsDocumentsFullTextSearchEnabled();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IDocumentFullTextSearchQueueItem GetQueueItemInProcess(global::System.Int64 documentId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetQueueItemInProcess", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Docflow.IDocumentFullTextSearchQueueItem)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetQueueItemInProcess(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsJobEnabled(global::System.String id)
    {
      var __typeName = "Sungero.Docflow.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsJobEnabled", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Docflow.Server.ModuleFunctions.IsJobEnabled(id);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static System.Byte[] GetBinaryData(Sungero.Domain.Shared.IBinaryData documentBody)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBinaryData", new global::System.Type[]{typeof(Sungero.Domain.Shared.IBinaryData)});
        return (System.Byte[])global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentBody});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBinaryData(documentBody);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessPowerOfAttorneyQueueItem(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection serviceConnection, global::Sungero.Docflow.IPowerOfAttorneyQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessPowerOfAttorneyQueueItem", new global::System.Type[]{typeof(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection), typeof(global::Sungero.Docflow.IPowerOfAttorneyQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{serviceConnection, queueItem});
      }
      else
      {
        return ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessPowerOfAttorneyQueueItem(serviceConnection, queueItem);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleFunctions" />
    internal static void TryDeletePowerOfAttorneyQueueItems(global::System.Collections.Generic.List<global::Sungero.Docflow.IPowerOfAttorneyQueueItem> queueItems)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TryDeletePowerOfAttorneyQueueItems", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IPowerOfAttorneyQueueItem>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItems});
      }
      else
      {
    ((global::Sungero.Docflow.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TryDeletePowerOfAttorneyQueueItems(queueItems);
      }
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BoxToString(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> result)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BoxToString", new global::System.Type[]{typeof(System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{result});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.BoxToString(result);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean> UnboxDictionary(global::System.String result)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnboxDictionary", new global::System.Type[]{typeof(global::System.String)});
        return (System.Collections.Generic.Dictionary<global::System.String, global::System.Boolean>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{result});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.UnboxDictionary(result);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCopyingCaseFilesTotalsMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate, global::System.Int32 success, global::System.Int32 failed)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCopyingCaseFilesTotalsMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate, success, failed});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCopyingCaseFilesTotalsMessage(targetPeriodStartDate, targetPeriodEndDate, success, failed);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAlreadyCopiedCaseFilesMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAlreadyCopiedCaseFilesMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAlreadyCopiedCaseFilesMessage(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNoCaseFilesToCopyMessage(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNoCaseFilesToCopyMessage", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetNoCaseFilesToCopyMessage(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCopyingCaseFilesTargetPeriodAsString(global::System.DateTime targetPeriodStartDate, global::System.DateTime targetPeriodEndDate)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCopyingCaseFilesTargetPeriodAsString", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{targetPeriodStartDate, targetPeriodEndDate});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCopyingCaseFilesTargetPeriodAsString(targetPeriodStartDate, targetPeriodEndDate);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String AppendCaseFilesHyperlinkTo(global::System.String source)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AppendCaseFilesHyperlinkTo", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{source});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AppendCaseFilesHyperlinkTo(source);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasSubActionItems", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status, addressee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.HasSubActionItems(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsTaskCompleted(global::Sungero.Workflow.ITask task)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsTaskCompleted", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsTaskCompleted(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetActionItemsForResolution(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionItemsForResolution", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.ITask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, status, addressee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionItemsForResolution(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.String> ActionItemInfoProvider(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ActionItemInfoProvider", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ActionItemInfoProvider(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void TryToShowNotifyMessage(global::System.String message)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TryToShowNotifyMessage", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    global::Sungero.Docflow.Shared.ModuleFunctions.TryToShowNotifyMessage(message);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetDocumentLastApprover(global::Sungero.Content.IElectronicDocument document)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentLastApprover", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDocumentLastApprover(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.IStorage GetStorageByPolicies(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetStorageByPolicies", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.CoreEntities.IStorage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetStorageByPolicies(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime ToTenantTime(global::System.DateTime datetime)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ToTenantTime", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{datetime});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ToTenantTime(datetime);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToUpperCase(global::System.String label)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReplaceFirstSymbolToUpperCase", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{label});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToUpperCase(label);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsASCII(global::System.String value)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsASCII", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{value});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsASCII(value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ReplaceFirstSymbolToLowerCase(global::System.String label)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReplaceFirstSymbolToLowerCase", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{label});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ReplaceFirstSymbolToLowerCase(label);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetNumberDeclination(global::System.Int32 number, CommonLibrary.LocalizedString singleName, CommonLibrary.LocalizedString genitiveName, CommonLibrary.LocalizedString pluralName)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNumberDeclination", new global::System.Type[]{typeof(global::System.Int32), typeof(CommonLibrary.LocalizedString), typeof(CommonLibrary.LocalizedString), typeof(CommonLibrary.LocalizedString)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{number, singleName, genitiveName, pluralName});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetNumberDeclination(number, singleName, genitiveName, pluralName);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretary(global::Sungero.Company.IEmployee manager)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecretary", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{manager});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretary(manager);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetSecretaryManager(global::Sungero.Company.IEmployee secretary)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecretaryManager", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{secretary});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSecretaryManager(secretary);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsLockedByMe(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLockedByMe", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.IsLockedByMe(entity);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int64 userId)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportName, userId});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int64 userId)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(Reporting.IReport), typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{report, userId});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(Reporting.IReport report, global::System.Int64 userId, global::System.String postfix)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(Reporting.IReport), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{report, userId, postfix});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(report, userId, postfix);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetReportTableName(global::System.String reportName, global::System.Int64 userId, global::System.String postfix)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReportTableName", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{reportName, userId, postfix});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetReportTableName(reportName, userId, postfix);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Company.IBusinessUnit GetDefaultBusinessUnit(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultBusinessUnit", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Company.IBusinessUnit)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDefaultBusinessUnit(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static void SynchronizeAddendaAndAttachmentsGroup(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group, global::Sungero.Content.IElectronicDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynchronizeAddendaAndAttachmentsGroup", new global::System.Type[]{typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup), typeof(global::Sungero.Content.IElectronicDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{group, document});
      }
      else
      {
    ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).SynchronizeAddendaAndAttachmentsGroup(group, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddenda(global::Sungero.Content.IElectronicDocument document)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddenda", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAddenda(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, arg0});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object arg0, System.Object arg1)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object), typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, arg0, arg1});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, arg0, arg1);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String subject, System.Object[] args)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String), typeof(System.Object[])});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{subject, args});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimSpecialSymbols(subject, args);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimQuotes(global::System.String row)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimQuotes", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{row});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimQuotes(row);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String TrimEndNewLines(global::System.String row)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimEndNewLines", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{row});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.TrimEndNewLines(row);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetActionGuid(Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActionGuid", new global::System.Type[]{typeof(Domain.Shared.IActionInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{action});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetActionGuid(action);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.IDocumentSendAction GetSendAction(Domain.Shared.IActionInfo action)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSendAction", new global::System.Type[]{typeof(Domain.Shared.IActionInfo)});
        return (global::Sungero.Docflow.IDocumentSendAction)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{action});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetSendAction(action);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Int32 CalculateDelay(global::System.Nullable<global::System.DateTime> deadline, global::System.DateTime completed, global::Sungero.CoreEntities.IUser user)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CalculateDelay", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, completed, user});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CalculateDelay(deadline, completed, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::Sungero.CoreEntities.IUser user, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadline", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{user, deadline, minDeadline});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(user, deadline, minDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckCoAssigneesDeadline(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Nullable<global::System.DateTime> coAssigneesDeadline)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckCoAssigneesDeadline", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{coAssignees, coAssigneesDeadline});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CheckCoAssigneesDeadline(coAssignees, coAssigneesDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckAssigneesDeadlines(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> coAssigneesDeadline)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckAssigneesDeadlines", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, coAssigneesDeadline});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).CheckAssigneesDeadlines(deadline, coAssigneesDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetDefaultCoAssigneesDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Int32 controlRelativeDeadlineInDays, global::System.Int32 controlRelativeDeadlineInHours)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDefaultCoAssigneesDeadline", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Int32), typeof(global::System.Int32)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, controlRelativeDeadlineInDays, controlRelativeDeadlineInHours});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDefaultCoAssigneesDeadline(deadline, controlRelativeDeadlineInDays, controlRelativeDeadlineInHours);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean CheckDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> minDeadline)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckDeadline", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{deadline, minDeadline});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.CheckDeadline(deadline, minDeadline);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String ValidateTaskAuthor(global::Sungero.Workflow.ITask task)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateTaskAuthor", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean ValidateTaskAuthor(global::Sungero.Workflow.ITask task, Sungero.Core.IValidationArgs e)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateTaskAuthor", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(Sungero.Core.IValidationArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, e});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.ValidateTaskAuthor(task, e);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Boolean withHyperlink)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatDocumentNameForReport", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, withHyperlink});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, withHyperlink);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatDocumentNameForReport(global::Sungero.Content.IElectronicDocument document, global::System.Int32 version, global::System.Boolean withHyperlink)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatDocumentNameForReport", new global::System.Type[]{typeof(global::Sungero.Content.IElectronicDocument), typeof(global::System.Int32), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, version, withHyperlink});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatDocumentNameForReport(document, version, withHyperlink);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date, global::Sungero.CoreEntities.IUser user)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithTime", new global::System.Type[]{typeof(global::System.DateTime), typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date, user});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date, user);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetDateWithTime(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithTime", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithTime(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDateWithUTCLabel(global::System.DateTime date)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDateWithUTCLabel", new global::System.Type[]{typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{date});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetDateWithUTCLabel(date);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String FormatTenantIdForBarcode(global::System.String tenant)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FormatTenantIdForBarcode", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{tenant});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.FormatTenantIdForBarcode(tenant);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static Sungero.FinancialArchive.IFinArchiveExportReport GetFinArchiveExportReport(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument> objs, global::System.DateTime dateTimeNow)
    {
      var __typeName = "Sungero.Docflow.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFinArchiveExportReport", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.ExportedDocument>), typeof(global::System.DateTime)});
        return (Sungero.FinancialArchive.IFinArchiveExportReport)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{objs, dateTimeNow});
      }
      else
      {
        return global::Sungero.Docflow.Shared.ModuleFunctions.GetFinArchiveExportReport(objs, dateTimeNow);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String BuildManyAddresseesLabel(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees, global::System.Int32 labelMaxLength)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("BuildManyAddresseesLabel", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{addressees, labelMaxLength});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).BuildManyAddresseesLabel(addressees, labelMaxLength);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCoAssigneesNames(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Boolean isFullName)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCoAssigneesNames", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{coAssignees, isFullName});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCoAssigneesNames(coAssignees, isFullName);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetRemovedAddendaFromAssignments(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRemovedAddendaFromAssignments", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Guid)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, groupId});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetRemovedAddendaFromAssignments(task, groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddedAddendaFromAssignments(global::Sungero.Workflow.ITask task, global::System.Guid groupId)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAddedAddendaFromAssignments", new global::System.Type[]{typeof(global::Sungero.Workflow.ITask), typeof(global::System.Guid)});
        return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, groupId});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAddedAddendaFromAssignments(task, groupId);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries ParseAttachmentsHistory(System.Collections.Generic.IEnumerable<global::Sungero.Workflow.IWorkflowHistory> history)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ParseAttachmentsHistory", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.Workflow.IWorkflowHistory>)});
        return (global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{history});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).ParseAttachmentsHistory(history);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Int64> GetDocumentIdFromHistoryComment(global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentIdFromHistoryComment", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDocumentIdFromHistoryComment(comment);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Guid> GetAttachmentGroupIdFromHistoryComment(global::System.String comment)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAttachmentGroupIdFromHistoryComment", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Nullable<global::System.Guid>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{comment});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAttachmentGroupIdFromHistoryComment(comment);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetMaxHistoryOperationDateById(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntry> operations, global::System.Int64 id)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMaxHistoryOperationDateById", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntry>), typeof(global::System.Int64)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{operations, id});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetMaxHistoryOperationDateById(operations, id);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String AddApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).AddApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String RemoveApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RemoveApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).RemoveApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasApproveWithSuggestionsMark(global::System.String text)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasApproveWithSuggestionsMark", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).HasApproveWithSuggestionsMark(text);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetApproveWithSuggestionsMark()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApproveWithSuggestionsMark", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetApproveWithSuggestionsMark();
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetSigningReason(global::Sungero.Docflow.ISignatureSetting signatureSetting)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSigningReason", new global::System.Type[]{typeof(global::Sungero.Docflow.ISignatureSetting)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signatureSetting});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSigningReason(signatureSetting);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAmountWithCurrencyInWords(global::System.Double amount, global::Sungero.Commons.ICurrency currency)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAmountWithCurrencyInWords", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.ICurrency)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{amount, currency});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAmountWithCurrencyInWords(amount, currency);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetAmountWithCurrencyInWordsWithoutDecimalValue(global::System.Double amount, global::Sungero.Commons.ICurrency currency)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAmountWithCurrencyInWordsWithoutDecimalValue", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.ICurrency)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{amount, currency});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetAmountWithCurrencyInWordsWithoutDecimalValue(amount, currency);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetDecimalValueStringWithTwoDigits(global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDecimalValueStringWithTwoDigits", new global::System.Type[]{typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetDecimalValueStringWithTwoDigits(value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCurrencyNameForIntegerValuePart(global::Sungero.Commons.ICurrency currency, global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrencyNameForIntegerValuePart", new global::System.Type[]{typeof(global::Sungero.Commons.ICurrency), typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currency, value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCurrencyNameForIntegerValuePart(currency, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String GetCurrencyNameForFractionalValuePart(global::Sungero.Commons.ICurrency currency, global::System.Double value)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrencyNameForFractionalValuePart", new global::System.Type[]{typeof(global::Sungero.Commons.ICurrency), typeof(global::System.Double)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currency, value});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetCurrencyNameForFractionalValuePart(currency, value);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.String PackIds(global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PackIds", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ids});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).PackIds(ids);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> UnpackIds(global::System.String packedIds)
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UnpackIds", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{packedIds});
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).UnpackIds(packedIds);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsPoAKonturLicenseEnable()
    {
      var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsPoAKonturLicenseEnable", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Docflow.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).IsPoAKonturLicenseEnable();
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnFolders(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnFolders", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnFolders(allUsers);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnDatabooks(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDatabooks", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnDatabooks(allUsers);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnTopic(global::Sungero.CoreEntities.IRole users)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnTopic", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{users});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnTopic(users);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDocuments", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnTasks(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnTasks", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnTasks(allUsers);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void InitializeExchangeServiceUsersRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("InitializeExchangeServiceUsersRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.InitializeExchangeServiceUsersRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void UpdateSystemAccessRights()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("UpdateSystemAccessRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemAccessRights();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateFolderChangeAccessRights()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateFolderChangeAccessRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateFolderChangeAccessRights();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateAccessRightsForFolder(global::System.String entityTypeGuid)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateAccessRightsForFolder", new global::System.Type[]{typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityTypeGuid});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsForFolder(entityTypeGuid);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentAccessRights()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentAccessRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentAccessRights();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateAccessRightsForDocumentType(global::System.Guid entityTypeGuid)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateAccessRightsForDocumentType", new global::System.Type[]{typeof(global::System.Guid)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityTypeGuid});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsForDocumentType(entityTypeGuid);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentKindAccessRights()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKindAccessRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKindAccessRights();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateAccessRightsType(global::System.String entityTypeGuid, global::System.String operationName, global::System.Int32 operationSet, global::System.Int32 grantedMask, global::Sungero.Core.Enumeration area, global::System.Guid sid, global::System.Boolean isOverride, global::System.String description)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateAccessRightsType", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Int32), typeof(global::System.Int32), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Guid), typeof(global::System.Boolean), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityTypeGuid, operationName, operationSet, grantedMask, area, sid, isOverride, description});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateAccessRightsType(entityTypeGuid, operationName, operationSet, grantedMask, area, sid, isOverride, description);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateRoles()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateRoles", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateRoles();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.CoreEntities.IRole CreateRole(global::System.String roleName, global::System.String roleDescription, global::System.Guid roleGuid)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateRole", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Guid)});
          return (global::Sungero.CoreEntities.IRole)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{roleName, roleDescription, roleGuid});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateRole(roleName, roleDescription, roleGuid);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnProjects()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnProjects", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnProjects();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.CoreEntities.IRole GetProjectManagersRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GetProjectManagersRole", global::System.Array.Empty<global::System.Type>());
          return (global::Sungero.CoreEntities.IRole)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.GetProjectManagersRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.CoreEntities.IRole GetCounterpartyResponsibleRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GetCounterpartyResponsibleRole", global::System.Array.Empty<global::System.Type>());
          return (global::Sungero.CoreEntities.IRole)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.GetCounterpartyResponsibleRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsToDocumentDeleteRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToDocumentDeleteRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToDocumentDeleteRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsToClerksRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToClerksRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToClerksRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsToCounterpartiesResponsibleRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToCounterpartiesResponsibleRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToCounterpartiesResponsibleRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsToIdentificationDocumentsManagersRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToIdentificationDocumentsManagersRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToIdentificationDocumentsManagersRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightToRegistrationManagersRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightToRegistrationManagersRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightToRegistrationManagersRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsToSigningRole()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToSigningRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsToSigningRole();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateFileTypesAndAssociatedApps()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateFileTypesAndAssociatedApps", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateFileTypesAndAssociatedApps();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Content.IFilesType CreateFileType(global::System.String name)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateFileType", new global::System.Type[]{typeof(global::System.String)});
          return (global::Sungero.Content.IFilesType)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateFileType(name);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateAssociatedApp(global::System.String extension, global::System.String name, global::Sungero.Core.Enumeration monitoringType, global::Sungero.Content.IFilesType fileType)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateAssociatedApp", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Content.IFilesType)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{extension, name, monitoringType, fileType});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateAssociatedApp(extension, name, monitoringType, fileType);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateMailDeliveryMethods()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateMailDeliveryMethods", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateMailDeliveryMethods();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateMailDeliveryMethod(global::System.String name, global::System.String sid)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateMailDeliveryMethod", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, sid});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateMailDeliveryMethod(name, sid);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentTypes()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentTypes();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentKinds()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKinds();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateFormalizedPowerOfAttorneyDocumentKind()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateFormalizedPowerOfAttorneyDocumentKind", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateFormalizedPowerOfAttorneyDocumentKind();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKind", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Guid), typeof(Domain.Shared.IActionInfo[]), typeof(global::System.Guid)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId, global::System.Boolean isDefault)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKind", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Guid), typeof(Domain.Shared.IActionInfo[]), typeof(global::System.Guid), typeof(global::System.Boolean)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId, isDefault});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId, isDefault);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Boolean projectAccounting, global::System.Boolean grantRightsToProject, global::System.Guid entityId, global::System.Boolean isDefault)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKind", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Guid), typeof(Domain.Shared.IActionInfo[]), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Guid), typeof(global::System.Boolean)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, projectAccounting, grantRightsToProject, entityId, isDefault});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, projectAccounting, grantRightsToProject, entityId, isDefault);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentType(global::System.String name, global::System.Guid documentTypeGuid, global::Sungero.Core.Enumeration direction, global::System.Boolean isRegistrationAllowed)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentType", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Guid), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, documentTypeGuid, direction, isRegistrationAllowed});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentType(name, documentTypeGuid, direction, isRegistrationAllowed);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentSendActions()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentSendActions", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentSendActions();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentSendAction(Domain.Shared.IActionInfo action, global::System.String name)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentSendAction", new global::System.Type[]{typeof(Domain.Shared.IActionInfo), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{action, name});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentSendAction(action, name);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDefaultApprovalRules()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultApprovalRules", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultApprovalRules();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateOutgoingDefaultApprovalRuleWithConditions()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateOutgoingDefaultApprovalRuleWithConditions", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateOutgoingDefaultApprovalRuleWithConditions();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateInternalDefaultApprovalRuleWithConditions()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateInternalDefaultApprovalRuleWithConditions", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateInternalDefaultApprovalRuleWithConditions();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateMemoDefaultApprovalRuleWithConditions()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateMemoDefaultApprovalRuleWithConditions", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateMemoDefaultApprovalRuleWithConditions();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalRule CreateMemoDefaultRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateMemoDefaultRule", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
          return (global::Sungero.Docflow.IApprovalRule)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleName, stages});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateMemoDefaultRule(ruleName, stages);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultRule", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
          return (global::Sungero.Docflow.IApprovalRule)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleName, documentFlow, stages});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultRule(ruleName, documentFlow, stages);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddConditionToRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::Sungero.Docflow.IConditionBase condition, global::System.Int32 stageNumber)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddConditionToRule", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::Sungero.Docflow.IConditionBase), typeof(global::System.Int32)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rule, condition, stageNumber});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddConditionToRule(rule, condition, stageNumber);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IConditionBase CreateRoleCompareSignatoryAndInitManagerCondition(global::Sungero.Docflow.IConditionBase condition)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateRoleCompareSignatoryAndInitManagerCondition", new global::System.Type[]{typeof(global::Sungero.Docflow.IConditionBase)});
          return (global::Sungero.Docflow.IConditionBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{condition});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateRoleCompareSignatoryAndInitManagerCondition(condition);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void SetRuleStages(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("SetRuleStages", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rule, stages});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.SetRuleStages(rule, stages);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddConvertPdfStage(global::Sungero.Docflow.IApprovalRuleBase rule)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddConvertPdfStage", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalRuleBase)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rule});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddConvertPdfStage(rule);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddReviewTaskStage(global::Sungero.Docflow.IApprovalRuleBase rule)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddReviewTaskStage", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalRuleBase)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rule});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddReviewTaskStage(rule);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddGiveInvoiceApprovalStage(global::Sungero.Docflow.IApprovalRuleBase rule)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddGiveInvoiceApprovalStage", new global::System.Type[]{typeof(global::Sungero.Docflow.IApprovalRuleBase)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rule});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddGiveInvoiceApprovalStage(rule);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalStage CreateApprovalStage(global::Sungero.Core.Enumeration stageType)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalStage", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
          return (global::Sungero.Docflow.IApprovalStage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{stageType});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalStage(stageType);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalConvertPdfStage CreateApprovalConvertPdfStage()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalConvertPdfStage", global::System.Array.Empty<global::System.Type>());
          return (global::Sungero.Docflow.IApprovalConvertPdfStage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalConvertPdfStage();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalRegistrationFtsStage CreateApprovalRegistrationFtsStage()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalRegistrationFtsStage", global::System.Array.Empty<global::System.Type>());
          return (global::Sungero.Docflow.IApprovalRegistrationFtsStage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalRegistrationFtsStage();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalReviewTaskStage CreateApprovalReviewTaskStage()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalReviewTaskStage", global::System.Array.Empty<global::System.Type>());
          return (global::Sungero.Docflow.IApprovalReviewTaskStage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalReviewTaskStage();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentRegistersAndSettings()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentRegistersAndSettings", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentRegistersAndSettings();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IDocumentRegister CreateYearSectionDocumentRegister(global::System.String name, global::System.String index, global::System.Guid entityId)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateYearSectionDocumentRegister", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Guid)});
          return (global::Sungero.Docflow.IDocumentRegister)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, index, entityId});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateYearSectionDocumentRegister(name, index, entityId);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IDocumentRegister CreateNumerationDocumentRegister(global::System.String name, global::System.String index, global::Sungero.Core.Enumeration documentFlow, global::System.Guid entityId)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateNumerationDocumentRegister", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Guid)});
          return (global::Sungero.Docflow.IDocumentRegister)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, index, documentFlow, entityId});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateNumerationDocumentRegister(name, index, documentFlow, entityId);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreatePowerOfAttorneySetting(global::Sungero.Docflow.IDocumentRegister documentRegister)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreatePowerOfAttorneySetting", new global::System.Type[]{typeof(global::Sungero.Docflow.IDocumentRegister)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentRegister});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreatePowerOfAttorneySetting(documentRegister);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateNumerationSetting(global::System.Guid documentGuid, global::Sungero.Core.Enumeration documentFlow, global::Sungero.Docflow.IDocumentRegister documentRegister)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateNumerationSetting", new global::System.Type[]{typeof(global::System.Guid), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Docflow.IDocumentRegister)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentGuid, documentFlow, documentRegister});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateNumerationSetting(documentGuid, documentFlow, documentRegister);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDefaultCurrencies()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultCurrencies", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultCurrencies();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateCurrency(global::System.String name, global::System.String alphaCode, global::System.String numericCode, global::System.String shortName, global::System.String fractionName, global::System.Boolean isDefault)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateCurrency", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, alphaCode, numericCode, shortName, fractionName, isDefault});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateCurrency(name, alphaCode, numericCode, shortName, fractionName, isDefault);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDefaultVatRates()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultVatRates", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultVatRates();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateVatRate(global::System.String sid, global::System.String name, global::System.Int32 rate)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateVatRate", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Int32)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{sid, name, rate});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateVatRate(sid, name, rate);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDefaultApprovalRoles()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultApprovalRoles", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultApprovalRoles();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateApprovalRole(global::Sungero.Core.Enumeration roleType, global::System.String description)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalRole", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{roleType, description});
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateApprovalRole(roleType, description);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDefaultRelationTypes()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultRelationTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDefaultRelationTypes();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void UpdateSystemRelationTypes()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("UpdateSystemRelationTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemRelationTypes();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.CoreEntities.IRelationType UpdateSystemRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("UpdateSystemRelationType", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
          return (global::Sungero.CoreEntities.IRelationType)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, sourceTitle, targetTitle, sourceDescription, targetDescription});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.UpdateSystemRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static global::Sungero.CoreEntities.IRelationType CreateRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription, global::System.Boolean hasDirection, global::System.Boolean needRight, global::System.Boolean useSource, global::System.Boolean useTarget)
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateRelationType", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean)});
          return (global::Sungero.CoreEntities.IRelationType)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, sourceTitle, targetTitle, sourceDescription, targetDescription, hasDirection, needRight, useSource, useTarget});
        }
        else
        {
          return global::Sungero.Docflow.Server.ModuleInitializer.CreateRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription, hasDirection, needRight, useSource, useTarget);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateDocumentRegisterNumberTable()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentRegisterNumberTable", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateDocumentRegisterNumberTable();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateParametersTable()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateParametersTable", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateParametersTable();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddCompanyDataServiceParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddCompanyDataServiceParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddCompanyDataServiceParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddDisableMailNotificationParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddDisableMailNotificationParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddDisableMailNotificationParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddDaysToStoreDocumentComparisonInfoParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddDaysToStoreDocumentComparisonInfoParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddDaysToStoreDocumentComparisonInfoParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateTaskIndices()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateTaskIndices", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateTaskIndices();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateAssignmentIndices()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateAssignmentIndices", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateAssignmentIndices();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateEDocIndices()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateEDocIndices", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateEDocIndices();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateReportsTables()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateReportsTables", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateReportsTables();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void GrantRightsOnReports()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnReports", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.GrantRightsOnReports();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CheckRightsToInitialize()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CheckRightsToInitialize", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CheckRightsToInitialize();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void ConvertDocumentKindsAccessRights()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("ConvertDocumentKindsAccessRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.ConvertDocumentKindsAccessRights();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void ConvertDocumentTemplates()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("ConvertDocumentTemplates", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.ConvertDocumentTemplates();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddSummaryMailNotificationsBunchCountParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddSummaryMailNotificationsBunchCountParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddSummaryMailNotificationsBunchCountParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void CreateSmartProcessingSettings()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateSmartProcessingSettings", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.CreateSmartProcessingSettings();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void FillSmartProcessingRules()
      {
        var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("FillSmartProcessingRules", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillSmartProcessingRules();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddProcessRule(global::Sungero.Docflow.ISmartProcessingSetting smartProcessingSettings, global::System.String className, global::System.String grammarName, global::System.String moduleName, global::System.String functionName)
      {
        var __moduleId = new global::System.Guid("df83a2ea-8d43-4ec4-a34a-2e61863014df");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Docflow.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddProcessRule", new global::System.Type[]{typeof(global::Sungero.Docflow.ISmartProcessingSetting), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{smartProcessingSettings, className, grammarName, moduleName, functionName});
        }
        else
        {
      ((global::Sungero.Docflow.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddProcessRule(smartProcessingSettings, className, grammarName, moduleName, functionName);
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddAccessRightsBulkProcessingParams()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddAccessRightsBulkProcessingParams", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddAccessRightsBulkProcessingParams();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddAccessRightsRuleProcessingBatchSizeParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddAccessRightsRuleProcessingBatchSizeParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddAccessRightsRuleProcessingBatchSizeParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddAccessRightsQueueItemsLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddAccessRightsQueueItemsLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddAccessRightsQueueItemsLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddAccessRightsQueueItemsRetriesLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddAccessRightsQueueItemsRetriesLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddAccessRightsQueueItemsRetriesLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddProcessHistoricalMessagesRetriesCountParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddProcessHistoricalMessagesRetriesCountParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddProcessHistoricalMessagesRetriesCountParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddProcessMessagesRetriesCountParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddProcessMessagesRetriesCountParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddProcessMessagesRetriesCountParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddHistoricalMessageQueueItemLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddHistoricalMessageQueueItemLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddHistoricalMessageQueueItemLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddConvertExchangeDocumentToPdfRetriesCountParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddConvertExchangeDocumentToPdfRetriesCountParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddConvertExchangeDocumentToPdfRetriesCountParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddIndexDocumentsForFullTextSearchJobQueueItemsLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddIndexDocumentsForFullTextSearchJobQueueItemsLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddIndexDocumentsForFullTextSearchJobQueueItemsLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddBulkIndexingDocumentsLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddBulkIndexingDocumentsLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddBulkIndexingDocumentsLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddIndexingDocumentsForFullTextSearchRetriesLimitParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddIndexingDocumentsForFullTextSearchRetriesLimitParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddIndexingDocumentsForFullTextSearchRetriesLimitParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddFPoAQueueItemBatchSizeParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddFPoAQueueItemBatchSizeParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddFPoAQueueItemBatchSizeParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddFPoAGetOperationRetriesMaxCountParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddFPoAGetOperationRetriesMaxCountParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddFPoAGetOperationRetriesMaxCountParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddSearchFPoAInFtsRegistryTemplateParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddSearchFPoAInFtsRegistryTemplateParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddSearchFPoAInFtsRegistryTemplateParam();
        }
      }
      /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ModuleInitializer" />
      internal static void AddFPoAIdentityDocumentCodesParam()
      {
        var __typeName = "Sungero.Docflow.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("AddFPoAIdentityDocumentCodesParam", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Docflow.Server.ModuleInitializer.AddFPoAIdentityDocumentCodesParam();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Docflow.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalRulesBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class ApprovalRulesDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class ApprovalRulesDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IApprovalRulesFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.ApprovalRulesFolderHandlers(typedState);
      var result = handlers.ApprovalRulesDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }


  public class StoragePolicyDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.Docflow.FolderFilterState.IStoragePolicyFilterState)this.State;
      var handlers = new global::Sungero.Docflow.Server.StoragePolicyFolderHandlers(typedState);
      var result = handlers.StoragePolicyDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Docflow.Server.IModuleServerPublicFunctions
  {
    public void AddChildFolder(global::System.Int64 folderId, global::System.Int64 parentFolderId)
    {
global::Sungero.Docflow.Functions.Module.AddChildFolder(folderId, parentFolderId);
    }
    public void AddDateTimeParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.DateTime parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddDateTimeParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddDocumentToFolder(global::System.Int64 documentId, global::System.Int64 folderId)
    {
global::Sungero.Docflow.Functions.Module.AddDocumentToFolder(documentId, folderId);
    }
    public void AddExpiringDocumentsToTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int64> ids)
    {
global::Sungero.Docflow.Functions.Module.AddExpiringDocumentsToTable(expiringDocsTableName, ids);
    }
    public void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info)
    {
global::Sungero.Docflow.Functions.Module.AddInfoToRightContent(block, info);
    }
    public void AddInfoToRightContent(Sungero.Core.StateBlock block, global::System.String info, Sungero.Core.StateBlockLabelStyle style)
    {
global::Sungero.Docflow.Functions.Module.AddInfoToRightContent(block, info, style);
    }
    public System.Data.IDbDataParameter AddIntegerOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
      return global::Sungero.Docflow.Functions.Module.AddIntegerOutputParameterToCommand(command, parameterName);
    }
    public void AddIntegerParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int32 parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddIntegerParameterToCommand(command, parameterName, parameterValue);
    }
    public System.Data.IDbDataParameter AddLongOutputParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName)
    {
      return global::Sungero.Docflow.Functions.Module.AddLongOutputParameterToCommand(command, parameterName);
    }
    public void AddLongParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.Int64 parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddLongParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddRelations(global::System.String relationName, global::System.Int64 baseDocumentId, global::System.Int64 relationDocumentId)
    {
global::Sungero.Docflow.Functions.Module.AddRelations(relationName, baseDocumentId, relationDocumentId);
    }
    public void AddStringParameterToCommand(System.Data.IDbCommand command, global::System.String parameterName, global::System.String parameterValue)
    {
global::Sungero.Docflow.Functions.Module.AddStringParameterToCommand(command, parameterName, parameterValue);
    }
    public void AddTaskToExpiringTable(global::System.String expiringDocsTableName, global::System.Int64 document, global::System.Int64 task)
    {
global::Sungero.Docflow.Functions.Module.AddTaskToExpiringTable(expiringDocsTableName, document, task);
    }
    public void AddUnsignedAttribute(Sungero.Domain.Shared.ISignature signature, global::System.String key, global::System.String attributeValue)
    {
global::Sungero.Docflow.Functions.Module.AddUnsignedAttribute(signature, key, attributeValue);
    }
    public global::System.DateTime AddWorkingDaysAndHours(global::System.DateTime date, global::System.Int32 days, global::System.Int32 hours)
    {
      return global::Sungero.Docflow.Functions.Module.AddWorkingDaysAndHours(date, days, hours);
    }
    public void ApproveDocument(global::System.Int64 documentId, global::System.String note)
    {
global::Sungero.Docflow.Functions.Module.ApproveDocument(documentId, note);
    }
    public void BulkIndexDocumentsForFullTextSearch(global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.String mode)
    {
global::Sungero.Docflow.Functions.Module.BulkIndexDocumentsForFullTextSearch(periodBegin, periodEnd, mode);
    }
    public global::System.Boolean CanUpdateSmartProcessingSettings()
    {
      return global::Sungero.Docflow.Functions.Module.CanUpdateSmartProcessingSettings();
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> CaseFileFiltering(global::Sungero.Docflow.IOfficialDocument document, global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      return global::Sungero.Docflow.Functions.Module.CaseFileFiltering(document, query);
    }
    public global::System.Boolean CheckDocumentRegister(global::System.Int64 documentRegisterId, global::System.Int64 documentKindId, global::System.Nullable<global::System.Int64> businessUnitId, global::System.Nullable<global::System.Int64> departmentId)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDocumentRegister(documentRegisterId, documentKindId, businessUnitId, departmentId);
    }
    public global::System.Boolean CheckDocumentRegisterByTinAndTrrc(global::System.Int64 documentRegisterId, global::System.Int64 documentKindId, global::System.String businessUnitTin, global::System.String businessUnitTrrc, global::System.Nullable<global::System.Int64> departmentId)
    {
      return global::Sungero.Docflow.Functions.Module.CheckDocumentRegisterByTinAndTrrc(documentRegisterId, documentKindId, businessUnitTin, businessUnitTrrc, departmentId);
    }
    public void ClearExpiringTable(global::System.String expiringDocsTableName, global::System.Boolean taskIsNull)
    {
global::Sungero.Docflow.Functions.Module.ClearExpiringTable(expiringDocsTableName, taskIsNull);
    }
    public void ClearIdsFromExpiringDocsTable(global::System.String expiringDocsTableName, global::System.Collections.Generic.List<global::System.Int64> ids)
    {
global::Sungero.Docflow.Functions.Module.ClearIdsFromExpiringDocsTable(expiringDocsTableName, ids);
    }
    public void CompleteAssignment(global::System.Int64 assignmentId, global::System.String result)
    {
global::Sungero.Docflow.Functions.Module.CompleteAssignment(assignmentId, result);
    }
    public global::Sungero.Docflow.Structures.Module.IPdfConversionResult ConvertDocumentByArioAsync(System.Byte[] body, global::System.String fileName)
    {
      return global::Sungero.Docflow.Functions.Module.ConvertDocumentByArioAsync(body, fileName);
    }
    public global::Sungero.Docflow.Structures.Module.IPdfConversionResult ConvertDocumentToPdfByAspose(System.Byte[] body, global::System.String extension)
    {
      return global::Sungero.Docflow.Functions.Module.ConvertDocumentToPdfByAspose(body, extension);
    }
    public void ConvertToPdfWithRegistrationStamp(global::System.Int64 documentId, global::System.Double rightIndent, global::System.Double bottomIndent)
    {
global::Sungero.Docflow.Functions.Module.ConvertToPdfWithRegistrationStamp(documentId, rightIndent, bottomIndent);
    }
    public void ConvertToPdfWithSignatureMarkInteractively(global::System.Int64 documentId)
    {
global::Sungero.Docflow.Functions.Module.ConvertToPdfWithSignatureMarkInteractively(documentId);
    }
    public global::System.Int64 CreateApprovalTask(global::System.Int64 documentId, global::System.String text, global::System.Nullable<global::System.Int64> signatoryId, global::System.Collections.Generic.List<global::System.Int64> addApproverIds)
    {
      return global::Sungero.Docflow.Functions.Module.CreateApprovalTask(documentId, text, signatoryId, addApproverIds);
    }
    public global::System.Int64 CreateChildFolder(global::System.String folderName, global::System.Int64 parentFolderId)
    {
      return global::Sungero.Docflow.Functions.Module.CreateChildFolder(folderName, parentFolderId);
    }
    public void CreateClearAccessRightsRuleStateAsyncHandler(global::System.Int64 id)
    {
global::Sungero.Docflow.Functions.Module.CreateClearAccessRightsRuleStateAsyncHandler(id);
    }
    public Sungero.Core.StateBlockLabelStyle CreateDelayStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateDelayStyle();
    }
    public global::System.Int64 CreateDistributionList(global::System.String name, global::System.Collections.Generic.List<global::System.Int64> correspondentIds)
    {
      return global::Sungero.Docflow.Functions.Module.CreateDistributionList(name, correspondentIds);
    }
    public void CreateExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.Guid entityId)
    {
global::Sungero.Docflow.Functions.Module.CreateExternalLink(entity, entityId);
    }
    public global::System.Int64 CreateFreeApprovalTask(global::System.Int64 documentId, global::System.String text, global::System.Nullable<global::System.DateTime> deadline, global::System.Collections.Generic.List<global::System.Int64> approverIds)
    {
      return global::Sungero.Docflow.Functions.Module.CreateFreeApprovalTask(documentId, text, deadline, approverIds);
    }
    public void CreateGrantAccessRightsToDocumentAsyncHandler(global::System.Int64 documentId, global::System.Collections.Generic.List<global::System.Int64> ruleIds, global::System.Boolean grantAccessRightsToRelatedDocuments)
    {
global::Sungero.Docflow.Functions.Module.CreateGrantAccessRightsToDocumentAsyncHandler(documentId, ruleIds, grantAccessRightsToRelatedDocuments);
    }
    public void CreateGrantAccessRightsToDocumentAsyncHandlerBulk(global::System.Int64 queueItemId)
    {
global::Sungero.Docflow.Functions.Module.CreateGrantAccessRightsToDocumentAsyncHandlerBulk(queueItemId);
    }
    public void CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(global::System.Int64 ruleId, global::System.String launchId)
    {
global::Sungero.Docflow.Functions.Module.CreateGrantAccessRightsToDocumentsByRuleAsyncHandler(ruleId, launchId);
    }
    public Sungero.Core.StateBlockLabelStyle CreateHeaderStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreateHeaderStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreateHeaderStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateHeaderStyle();
    }
    public void CreateIncomingDocumentsReportTempTable(global::System.String tableName, global::System.Linq.IQueryable<global::System.Int64> availableIds)
    {
global::Sungero.Docflow.Functions.Module.CreateIncomingDocumentsReportTempTable(tableName, availableIds);
    }
    public void CreateIndexOnTable(global::System.String tableName, global::System.String indexName, global::System.String indexQuery)
    {
global::Sungero.Docflow.Functions.Module.CreateIndexOnTable(tableName, indexName, indexQuery);
    }
    public Sungero.Core.StateBlockLabelStyle CreateNoteStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreateNoteStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreateNoteStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateNoteStyle();
    }
    public Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle(global::System.Boolean italic)
    {
      return global::Sungero.Docflow.Functions.Module.CreatePerformerDeadlineStyle(italic);
    }
    public Sungero.Core.StateBlockLabelStyle CreatePerformerDeadlineStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreatePerformerDeadlineStyle();
    }
    public Sungero.Core.StateBlockLabelStyle CreateSeparatorStyle()
    {
      return global::Sungero.Docflow.Functions.Module.CreateSeparatorStyle();
    }
    public global::System.Int64 CreateSignatureSettingWithFormalizedPoA(global::System.Int64 employeeId, global::System.Int64 documentId, global::System.Int64 certificateId)
    {
      return global::Sungero.Docflow.Functions.Module.CreateSignatureSettingWithFormalizedPoA(employeeId, documentId, certificateId);
    }
    public global::System.Int64 CreateSimpleTask(global::System.String assignmentType, global::System.String subject, global::System.Nullable<global::System.DateTime> deadline, global::System.String importance, global::System.String text, global::System.Collections.Generic.List<global::System.Int64> performerIds, global::System.Collections.Generic.List<global::System.Int64> observerIds, global::System.Collections.Generic.List<global::System.Int64> documentIds)
    {
      return global::Sungero.Docflow.Functions.Module.CreateSimpleTask(assignmentType, subject, deadline, importance, text, performerIds, observerIds, documentIds);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(bolded, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(bolded, italic, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean grayed)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize, bolded, grayed);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::Sungero.Core.Color color)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(color);
    }
    public Sungero.Core.StateBlockLabelStyle CreateStyle(global::System.Nullable<global::System.Int32> fontSize, global::System.Boolean bolded, global::System.Boolean italic, global::System.Boolean grayed, global::Sungero.Core.Color color)
    {
      return global::Sungero.Docflow.Functions.Module.CreateStyle(fontSize, bolded, italic, grayed, color);
    }
    public void CreateVersionFromTemplate(global::System.Int64 documentId, global::System.Int64 templateId)
    {
global::Sungero.Docflow.Functions.Module.CreateVersionFromTemplate(documentId, templateId);
    }
    public global::System.String CutText(global::System.String text, global::System.Int32 maxLength)
    {
      return global::Sungero.Docflow.Functions.Module.CutText(text, maxLength);
    }
    public void DeleteLicense()
    {
global::Sungero.Docflow.Functions.Module.DeleteLicense();
    }
    public void DeleteReportData(global::System.String tableName, global::System.String reportSessionId)
    {
global::Sungero.Docflow.Functions.Module.DeleteReportData(tableName, reportSessionId);
    }
    public global::System.Boolean DocflowParamsTableExist()
    {
      return global::Sungero.Docflow.Functions.Module.DocflowParamsTableExist();
    }
    public void DropReportTempTable(global::System.String tableName)
    {
global::Sungero.Docflow.Functions.Module.DropReportTempTable(tableName);
    }
    public void DropReportTempTables(global::System.String[] tablesNames)
    {
global::Sungero.Docflow.Functions.Module.DropReportTempTables(tablesNames);
    }
    public void EndorseDocument(global::System.Int64 documentId, global::System.String note)
    {
global::Sungero.Docflow.Functions.Module.EndorseDocument(documentId, note);
    }
    public System.Object ExecuteScalarSQLCommand(global::System.String commandText)
    {
      return global::Sungero.Docflow.Functions.Module.ExecuteScalarSQLCommand(commandText);
    }
    public System.Object ExecuteScalarSQLCommand(global::System.String format, System.Object[] args)
    {
      return global::Sungero.Docflow.Functions.Module.ExecuteScalarSQLCommand(format, args);
    }
    public void ExecuteSQLCommand(global::System.String commandText)
    {
global::Sungero.Docflow.Functions.Module.ExecuteSQLCommand(commandText);
    }
    public void ExecuteSQLCommandFormat(global::System.String format, System.Object[] args)
    {
global::Sungero.Docflow.Functions.Module.ExecuteSQLCommandFormat(format, args);
    }
    public void ExecuteWaitAssignmentMonitoring(global::System.Collections.Generic.List<global::System.Int64> parentAssignmentIds)
    {
global::Sungero.Docflow.Functions.Module.ExecuteWaitAssignmentMonitoring(parentAssignmentIds);
    }
    public void FastDeleteQueueItems(global::System.Collections.Generic.List<global::System.Int64> itemsIds)
    {
global::Sungero.Docflow.Functions.Module.FastDeleteQueueItems(itemsIds);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> FilterDocumentKindsByAccessRights(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query)
    {
      return global::Sungero.Docflow.Functions.Module.FilterDocumentKindsByAccessRights(query);
    }
    public global::System.Boolean FolderHasContent(global::System.Int64 folderId)
    {
      return global::Sungero.Docflow.Functions.Module.FolderHasContent(folderId);
    }
    public global::System.String FormatUnsignedAttribute(global::System.String key, global::System.String attributeValue)
    {
      return global::Sungero.Docflow.Functions.Module.FormatUnsignedAttribute(key, attributeValue);
    }
    public global::System.Boolean GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState, global::System.Nullable<global::System.DateTime> startTime)
    {
      return global::Sungero.Docflow.Functions.Module.GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState, startTime);
    }
    public void GeneratePublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeState)
    {
global::Sungero.Docflow.Functions.Module.GeneratePublicBodyForExchangeDocument(document, versionId, exchangeState);
    }
    public void GenerateTempPublicBodyForExchangeDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
global::Sungero.Docflow.Functions.Module.GenerateTempPublicBodyForExchangeDocument(document, versionId);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.IActiveAssignmentsDynamicPoint> GetActiveAssignmentsDynamicPoints(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::Sungero.Company.IEmployee performer, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.Boolean unwrap, global::System.Boolean needFilter)
    {
      return global::Sungero.Docflow.Functions.Module.GetActiveAssignmentsDynamicPoints(businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, needFilter);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetActiveFormalizedPoAByBusinessUnit(global::Sungero.Company.IBusinessUnit businessUnit)
    {
      return global::Sungero.Docflow.Functions.Module.GetActiveFormalizedPoAByBusinessUnit(businessUnit);
    }
    public global::System.String GetArioToken()
    {
      return global::Sungero.Docflow.Functions.Module.GetArioToken();
    }
    public global::System.String GetArioUrl()
    {
      return global::Sungero.Docflow.Functions.Module.GetArioUrl();
    }
    public global::System.Nullable<global::System.Int32> GetAssignmentCompletion(global::System.Int32 assignmentCount, global::System.Int32 completedInTimeCount, global::System.Int32 overdueCount)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentCompletion(assignmentCount, completedInTimeCount, overdueCount);
    }
    public global::System.Nullable<global::System.Int32> GetAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::Sungero.Company.IEmployee performer, global::System.DateTime periodBegin, global::System.DateTime periodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentCompletionReportData(businessUnitIds, departmentIds, performer, periodBegin, periodEnd, unwrap, withSubstitution, needFilter);
    }
    public global::System.String GetAssignmentTypeName(global::Sungero.Workflow.IAssignmentBase assignment)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentTypeName(assignment);
    }
    public global::System.String GetAssignmentUserComment(global::Sungero.Workflow.IAssignment assignment)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssignmentUserComment(assignment);
    }
    public global::Sungero.Content.IAssociatedApplication GetAssociatedApplicationByFileName(global::System.String fileName)
    {
      return global::Sungero.Docflow.Functions.Module.GetAssociatedApplicationByFileName(fileName);
    }
    public System.Byte[] GetBinaryData(Sungero.Domain.Shared.IBinaryData documentBody)
    {
      return global::Sungero.Docflow.Functions.Module.GetBinaryData(documentBody);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      return global::Sungero.Docflow.Functions.Module.GetBusinessUnitAssignmentCompletionReportData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.DepartmentsAssignmentCompletionReport.ITableLine> GetBusinessUnitAssignmentCompletionWidgetData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      return global::Sungero.Docflow.Functions.Module.GetBusinessUnitAssignmentCompletionWidgetData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetCEOBusinessUnits(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      return global::Sungero.Docflow.Functions.Module.GetCEOBusinessUnits(managersIds);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetCEODepartments(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      return global::Sungero.Docflow.Functions.Module.GetCEODepartments(managersIds);
    }
    public global::System.String GetCertificateSignatoryName(System.Byte[] signatureContent)
    {
      return global::Sungero.Docflow.Functions.Module.GetCertificateSignatoryName(signatureContent);
    }
    public global::System.String GetCertificateSignatoryName(global::System.String subjectInfo)
    {
      return global::Sungero.Docflow.Functions.Module.GetCertificateSignatoryName(subjectInfo);
    }
    public global::Sungero.Docflow.Structures.Module.ICertificateSubject GetCertificateSubject(Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.Docflow.Functions.Module.GetCertificateSubject(signature);
    }
    public global::Sungero.Docflow.Structures.Module.IPdfConversionResult GetConversionResultFromArio(global::System.Int32 taskId)
    {
      return global::Sungero.Docflow.Functions.Module.GetConversionResultFromArio(taskId);
    }
    public global::System.String GetCurrentCultureName()
    {
      return global::Sungero.Docflow.Functions.Module.GetCurrentCultureName();
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetCurrentRecipients(global::System.Boolean withSubstitution)
    {
      return global::Sungero.Docflow.Functions.Module.GetCurrentRecipients(withSubstitution);
    }
    public global::System.String GetDateDisplayValue(global::System.Nullable<global::System.DateTime> date, global::Sungero.CoreEntities.IUser performer)
    {
      return global::Sungero.Docflow.Functions.Module.GetDateDisplayValue(date, performer);
    }
    public global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams GetDefaultExpiringDocsNotificationParams(global::System.String lastNotificationParamName, global::System.String noticesTableName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDefaultExpiringDocsNotificationParams(lastNotificationParamName, noticesTableName);
    }
    public global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams GetDefaultSignatureStampParams(global::System.Boolean withCertificate)
    {
      return global::Sungero.Docflow.Functions.Module.GetDefaultSignatureStampParams(withCertificate);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.EmployeesAssignmentCompletionReport.ITableLine> GetDepartmentAssignmentCompletionReportData(global::System.Collections.Generic.List<global::System.Int64> businessUnitIds, global::System.Collections.Generic.List<global::System.Int64> departmentIds, global::System.DateTime reportPeriodBegin, global::System.DateTime reportPeriodEnd, global::System.Boolean unwrap, global::System.Boolean withSubstitution, global::System.Boolean needFilter)
    {
      return global::Sungero.Docflow.Functions.Module.GetDepartmentAssignmentCompletionReportData(businessUnitIds, departmentIds, reportPeriodBegin, reportPeriodEnd, unwrap, withSubstitution, needFilter);
    }
    public System.Object GetDocflowParamsValue(global::System.String paramName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocflowParamsValue(paramName);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentComparisonInfo> GetDocumentComparisonInfosToDelete()
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentComparisonInfosToDelete();
    }
    public global::System.Int64 GetDocumentKindIdByGuid(global::System.Guid documentType, global::System.Guid kindGuid)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentKindIdByGuid(documentType, kindGuid);
    }
    public global::Sungero.Core.StateView GetDocumentSummary(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentSummary(document);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetDocumentsWithSendedTask(global::System.String expiringDocumentTableName)
    {
      return global::Sungero.Docflow.Functions.Module.GetDocumentsWithSendedTask(expiringDocumentTableName);
    }
    public global::Sungero.Domain.Shared.IEntity GetElectronicDocumentAsEntity(global::System.Int64 id)
    {
      return global::Sungero.Docflow.Functions.Module.GetElectronicDocumentAsEntity(id);
    }
    public global::System.Int64 GetEmployeeFavoritesFolderId(global::System.Int64 employeeId)
    {
      return global::Sungero.Docflow.Functions.Module.GetEmployeeFavoritesFolderId(employeeId);
    }
    public global::System.Int32 GetEmptyLineMargin()
    {
      return global::Sungero.Docflow.Functions.Module.GetEmptyLineMargin();
    }
    public Sungero.Domain.Shared.IExternalLink GetExternalLink(global::System.Guid entityType, global::System.Guid entityId)
    {
      return global::Sungero.Docflow.Functions.Module.GetExternalLink(entityType, entityId);
    }
    public Sungero.Domain.Shared.IExternalLink GetExternalLink(global::Sungero.Domain.Shared.IEntity entity, global::System.String additionalInfo)
    {
      return global::Sungero.Docflow.Functions.Module.GetExternalLink(entity, additionalInfo);
    }
    public global::System.Collections.Generic.List<Sungero.Domain.Shared.IExternalLink> GetExternalLinks(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Docflow.Functions.Module.GetExternalLinks(entity);
    }
    public global::System.Nullable<global::System.Int64> GetFolderIdByName(global::System.String folderName)
    {
      return global::Sungero.Docflow.Functions.Module.GetFolderIdByName(folderName);
    }
    public global::Sungero.Docflow.IFormalizedPowerOfAttorney GetFormalizedPoAByEmployee(global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Functions.Module.GetFormalizedPoAByEmployee(businessUnit, employee);
    }
    public global::System.String GetFormatedUserText(global::System.String userText)
    {
      return global::Sungero.Docflow.Functions.Module.GetFormatedUserText(userText);
    }
    public global::Sungero.Core.Color GetGrayColor()
    {
      return global::Sungero.Docflow.Functions.Module.GetGrayColor();
    }
    public global::System.DateTime GetLastAgentRunDate(global::System.String agentKey)
    {
      return global::Sungero.Docflow.Functions.Module.GetLastAgentRunDate(agentKey);
    }
    public global::System.DateTime GetLastNotificationDate(global::System.String lastNotificationParameterName, global::System.Nullable<global::System.DateTime> defaultDate)
    {
      return global::Sungero.Docflow.Functions.Module.GetLastNotificationDate(lastNotificationParameterName, defaultDate);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetManagersDepartments(global::System.Collections.Generic.List<global::System.Int64> managersIds)
    {
      return global::Sungero.Docflow.Functions.Module.GetManagersDepartments(managersIds);
    }
    public global::System.Nullable<global::System.DateTime> GetNewCoAssigneeDeadline(global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> coAssigneeDeadline, global::System.Nullable<global::System.DateTime> newDeadline, global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Functions.Module.GetNewCoAssigneeDeadline(deadline, coAssigneeDeadline, newDeadline, employee);
    }
    public global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetOrderedSignatureSettings(global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      return global::Sungero.Docflow.Functions.Module.GetOrderedSignatureSettings(settings);
    }
    public global::Sungero.Docflow.ISignatureSetting GetOurSigningReasonWithHighPriority(global::System.Collections.Generic.List<global::Sungero.Docflow.ISignatureSetting> settings, global::Sungero.CoreEntities.ICertificate certificate)
    {
      return global::Sungero.Docflow.Functions.Module.GetOurSigningReasonWithHighPriority(settings, certificate);
    }
    public global::System.String GetRegistrationStampAsHtml(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.Module.GetRegistrationStampAsHtml(document);
    }
    public global::System.Collections.Generic.List<Company.Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Docflow.Functions.Module.GetResponsibilitiesReportData(employee);
    }
    public global::System.Guid GetRightTypeGuid(global::System.Nullable<global::Sungero.Core.Enumeration> rightType)
    {
      return global::Sungero.Docflow.Functions.Module.GetRightTypeGuid(rightType);
    }
    public global::System.String GetSeparatorText()
    {
      return global::Sungero.Docflow.Functions.Module.GetSeparatorText();
    }
    public System.Object GetServerEntityFunctionResult(global::Sungero.Domain.Shared.IEntity entity, global::System.String name, global::System.Collections.Generic.List<System.Object> parameters)
    {
      return global::Sungero.Docflow.Functions.Module.GetServerEntityFunctionResult(entity, name, parameters);
    }
    public Sungero.Core.IX509CertificateInfo GetSignatureCertificateInfo(System.Byte[] signatureContent)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureCertificateInfo(signatureContent);
    }
    public global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkAsHtml(document, versionId);
    }
    public global::System.String GetSignatureMarkAsHtml(global::Sungero.Docflow.IOfficialDocument document, Sungero.Domain.Shared.ISignature signature)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkAsHtml(document, signature);
    }
    public global::System.String GetSignatureMarkForCertificateAsHtml(Sungero.Domain.Shared.ISignature signature, global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams signatureStampParams)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkForCertificateAsHtml(signature, signatureStampParams);
    }
    public global::System.String GetSignatureMarkForSimpleSignatureAsHtml(Sungero.Domain.Shared.ISignature signature, global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams signatureStampParams)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureMarkForSimpleSignatureAsHtml(signature, signatureStampParams);
    }
    public global::System.String GetSignatureValidationErrorsAsString(Sungero.Domain.Shared.ISignature signature, global::System.String separator)
    {
      return global::Sungero.Docflow.Functions.Module.GetSignatureValidationErrorsAsString(signature, separator);
    }
    public global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.String autoGeneratedText)
    {
      return global::Sungero.Docflow.Functions.Module.GetTaskUserComment(task, autoGeneratedText);
    }
    public global::System.String GetTaskUserComment(global::Sungero.Workflow.ITask task, global::System.DateTime date, global::System.String autoGeneratedText)
    {
      return global::Sungero.Docflow.Functions.Module.GetTaskUserComment(task, date, autoGeneratedText);
    }
    public global::System.String GetTemplateDocumentKindsGuids(global::System.Int64 id)
    {
      return global::Sungero.Docflow.Functions.Module.GetTemplateDocumentKindsGuids(id);
    }
    public global::System.String GetTemplateHash(global::System.Int64 id)
    {
      return global::Sungero.Docflow.Functions.Module.GetTemplateHash(id);
    }
    public global::System.String GetUnsignedAttribute(Sungero.Domain.Shared.ISignature signature, global::System.String key)
    {
      return global::Sungero.Docflow.Functions.Module.GetUnsignedAttribute(signature, key);
    }
    public Sungero.Domain.Shared.IBinaryData GetVersionBody(global::System.Int64 documentId, global::System.Int32 versionNumber)
    {
      return global::Sungero.Docflow.Functions.Module.GetVersionBody(documentId, versionNumber);
    }
    public global::System.Boolean GrantAccessRightsOnEntity(global::Sungero.Domain.Shared.IEntity entity, global::Sungero.CoreEntities.IRecipient recipient, global::System.Guid accessRightsType)
    {
      return global::Sungero.Docflow.Functions.Module.GrantAccessRightsOnEntity(entity, recipient, accessRightsType);
    }
    public void GrantAccessRightsToDocument(global::System.Int64 documentId, global::System.Int64 recipientId, global::System.String accessRightsTypeGuid)
    {
global::Sungero.Docflow.Functions.Module.GrantAccessRightsToDocument(documentId, recipientId, accessRightsTypeGuid);
    }
    public void GrantAccessRightsToFolder(global::System.Int64 folderId, global::System.Int64 recipientId, global::System.String accessRightsTypeGuid)
    {
global::Sungero.Docflow.Functions.Module.GrantAccessRightsToFolder(folderId, recipientId, accessRightsTypeGuid);
    }
    public void GrantManualReadRightForAttachments(global::Sungero.Workflow.ITask task, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachments)
    {
global::Sungero.Docflow.Functions.Module.GrantManualReadRightForAttachments(task, attachments);
    }
    public void GrantReadAccessRightsForAttachments(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
global::Sungero.Docflow.Functions.Module.GrantReadAccessRightsForAttachments(attachments, users);
    }
    public void GrantReadAccessRightsForAttachmentsConsideringCurrentRights(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> attachments, System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> users)
    {
global::Sungero.Docflow.Functions.Module.GrantReadAccessRightsForAttachmentsConsideringCurrentRights(attachments, users);
    }
    public global::System.Boolean HasGrantedAccessRights(global::System.Guid classTypeGuid)
    {
      return global::Sungero.Docflow.Functions.Module.HasGrantedAccessRights(classTypeGuid);
    }
    public void ImportFormalizedPoABodyAndSign(global::System.Int64 documentId, global::System.String xmlDataBase64, global::System.String signatureDataBase64)
    {
global::Sungero.Docflow.Functions.Module.ImportFormalizedPoABodyAndSign(documentId, xmlDataBase64, signatureDataBase64);
    }
    public global::System.Boolean IncludedInBusinessUnitHeadsRole()
    {
      return global::Sungero.Docflow.Functions.Module.IncludedInBusinessUnitHeadsRole();
    }
    public global::System.Boolean IncludedInDepartmentManagersRole()
    {
      return global::Sungero.Docflow.Functions.Module.IncludedInDepartmentManagersRole();
    }
    public void IndexDocumentsForFullTextSearch(global::System.Int64 documentId)
    {
global::Sungero.Docflow.Functions.Module.IndexDocumentsForFullTextSearch(documentId);
    }
    public void InsertDocflowParam(global::System.String key, global::System.String value)
    {
global::Sungero.Docflow.Functions.Module.InsertDocflowParam(key, value);
    }
    public void InsertOrUpdateDocflowParam(global::System.String key, global::System.String value)
    {
global::Sungero.Docflow.Functions.Module.InsertOrUpdateDocflowParam(key, value);
    }
    public global::System.Boolean IsAllNotificationsStarted(global::System.String expiringDocsTableName)
    {
      return global::Sungero.Docflow.Functions.Module.IsAllNotificationsStarted(expiringDocsTableName);
    }
    public void LogPdfConverting(global::System.String message, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Content.IElectronicDocumentVersions version)
    {
global::Sungero.Docflow.Functions.Module.LogPdfConverting(message, document, version);
    }
    public void MarkBlock(Sungero.Core.StateBlock block)
    {
global::Sungero.Docflow.Functions.Module.MarkBlock(block);
    }
    public global::Sungero.Docflow.Structures.Module.ICertificateSubject ParseCertificateSubject(global::System.String subjectInfo)
    {
      return global::Sungero.Docflow.Functions.Module.ParseCertificateSubject(subjectInfo);
    }
    public void PrepareAllAttachmentsPreviews(global::Sungero.Workflow.ITask task)
    {
global::Sungero.Docflow.Functions.Module.PrepareAllAttachmentsPreviews(task);
    }
    public System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]> ReadLicense()
    {
      return global::Sungero.Docflow.Functions.Module.ReadLicense();
    }
    public void RegisterDocument(global::System.Int64 documentId, global::System.Int64 documentRegisterId, global::System.Nullable<global::System.DateTime> registrationDate, global::System.String registrationNumber, global::System.Nullable<global::System.Boolean> numberReservation)
    {
global::Sungero.Docflow.Functions.Module.RegisterDocument(documentId, documentRegisterId, registrationDate, registrationNumber, numberReservation);
    }
    public void RestoreLicense(System.Collections.Generic.Dictionary<global::System.Int64, System.Byte[]> licenses)
    {
global::Sungero.Docflow.Functions.Module.RestoreLicense(licenses);
    }
    public void SetDataSignature(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 signatureId, System.Byte[] newDataSignature)
    {
global::Sungero.Docflow.Functions.Module.SetDataSignature(document, signatureId, newDataSignature);
    }
    public void SetSmartProcessingSettings(global::System.String arioUrl, global::System.String lowerConfidenceLimit, global::System.String upperConfidenceLimit, global::System.String firstPageClassifierName, global::System.String typeClassifierName)
    {
global::Sungero.Docflow.Functions.Module.SetSmartProcessingSettings(arioUrl, lowerConfidenceLimit, upperConfidenceLimit, firstPageClassifierName, typeClassifierName);
    }
    public void StartTask(global::System.Int64 taskId)
    {
global::Sungero.Docflow.Functions.Module.StartTask(taskId);
    }
    public global::System.String ToShortDateShortTime(global::System.DateTime date)
    {
      return global::Sungero.Docflow.Functions.Module.ToShortDateShortTime(date);
    }
    public global::System.Boolean TryExternalRegisterDocument(global::System.Int64 documentId, global::System.String number, global::System.Nullable<global::System.DateTime> date)
    {
      return global::Sungero.Docflow.Functions.Module.TryExternalRegisterDocument(documentId, number, date);
    }
    public void TrySendExpiringDocNotifications(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
global::Sungero.Docflow.Functions.Module.TrySendExpiringDocNotifications(notificationParams);
    }
    public void UpdateLastAgentRunDate(global::System.String agentKey, global::System.DateTime notificationDate)
    {
global::Sungero.Docflow.Functions.Module.UpdateLastAgentRunDate(agentKey, notificationDate);
    }
    public void UpdateLastNotificationDate(global::Sungero.Docflow.Structures.Module.IExpiringDocsNotificationParams notificationParams)
    {
global::Sungero.Docflow.Functions.Module.UpdateLastNotificationDate(notificationParams);
    }
    public void WriteStructuresToTable(global::System.String table, System.Collections.Generic.IEnumerable<Domain.Shared.ISimpleAppliedStructure> structures)
    {
global::Sungero.Docflow.Functions.Module.WriteStructuresToTable(table, structures);
    }
  }
}

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Docflow.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobSendMailNotificationId = global::System.Guid.Parse("d7044e44-89bc-4fb3-9e44-5491514d9b05");

      public void Enqueue_SendMailNotification()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendMailNotificationId, null);
      }
 
      private static readonly global::System.Guid JobSendNotificationForExpiringPowerOfAttorneyId = global::System.Guid.Parse("2ff6172c-7964-4df7-a294-88c77bc97ef2");

      public void Enqueue_SendNotificationForExpiringPowerOfAttorney()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendNotificationForExpiringPowerOfAttorneyId, null);
      }
 
      private static readonly global::System.Guid JobTransferDocumentsByStoragePolicyId = global::System.Guid.Parse("0df1dbd4-8cd1-407d-90ba-537a251d4f7c");

      public void Enqueue_TransferDocumentsByStoragePolicy()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobTransferDocumentsByStoragePolicyId, null);
      }
 
      private static readonly global::System.Guid JobSendSummaryMailNotificationsId = global::System.Guid.Parse("35ba6be5-acff-4551-9f4d-48f0c7bb6419");

      public void Enqueue_SendSummaryMailNotifications()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendSummaryMailNotificationsId, null);
      }
 
      private static readonly global::System.Guid JobGrantAccessRightsToDocumentsId = global::System.Guid.Parse("622cfeba-32e5-4bd0-a85f-f216afe0c210");

      public void Enqueue_GrantAccessRightsToDocuments()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGrantAccessRightsToDocumentsId, null);
      }
 
      private static readonly global::System.Guid JobDeleteComparisonInfosId = global::System.Guid.Parse("3069c638-bc15-4cba-bd4d-2d0dca77906d");

      public void Enqueue_DeleteComparisonInfos()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobDeleteComparisonInfosId, null);
      }
 
      private static readonly global::System.Guid JobIndexDocumentsForFullTextSearchId = global::System.Guid.Parse("9d346c59-72e0-4957-b13a-9becf38218b1");

      public void Enqueue_IndexDocumentsForFullTextSearch()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobIndexDocumentsForFullTextSearchId, null);
      }
 
      private static readonly global::System.Guid JobSyncFormalizedPowerOfAttorneyStateId = global::System.Guid.Parse("91cb2efd-0ef2-4073-b1d0-fce8bec52690");

      public void Enqueue_SyncFormalizedPowerOfAttorneyState()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSyncFormalizedPowerOfAttorneyStateId, null);
      }
 


      private static readonly global::System.Guid AsyncHandlerGrantAccessRightsToDocumentId = global::System.Guid.Parse("767ae28b-d043-48b3-9e31-e54c288bde75");

      public void Enqueue_GrantAccessRightsToDocument(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerGrantAccessRightsToDocumentId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerGrantAccessRightsToDocumentsByRuleId = global::System.Guid.Parse("c4352760-6439-484b-9e00-6c878427d64e");

      public void Enqueue_GrantAccessRightsToDocumentsByRule(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerGrantAccessRightsToDocumentsByRuleId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetDocumentStorageId = global::System.Guid.Parse("4f03b0d0-f0f5-45ed-b1c5-98d32b864503");

      public void Enqueue_SetDocumentStorage(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetDocumentStorageId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerConvertDocumentToPdfId = global::System.Guid.Parse("a416fcc6-b361-48de-a665-d19de3c5379d");

      public void Enqueue_ConvertDocumentToPdf(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerConvertDocumentToPdfId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerCopyCaseFilesId = global::System.Guid.Parse("accf7175-912e-48e7-aa12-c7288559f709");

      public void Enqueue_CopyCaseFiles(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.RegularDelayStrategy;
           int delayInterval = 60;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerCopyCaseFilesId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetDocumentStateAbortedId = global::System.Guid.Parse("1a9bf2e4-4778-4fdb-8edc-1f8b5777416b");

      public void Enqueue_SetDocumentStateAborted(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetDocumentStateAbortedId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerExecuteApprovalFunctionId = global::System.Guid.Parse("0dafb1e3-1520-40a8-ab6e-09deeae72e8f");

      public void Enqueue_ExecuteApprovalFunction(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerExecuteApprovalFunctionId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerAddRegistrationStampId = global::System.Guid.Parse("3e3240a6-f984-406f-a2e5-79467cb926ea");

      public void Enqueue_AddRegistrationStamp(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerAddRegistrationStampId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerGrantAccessRightsToDocumentsBulkId = global::System.Guid.Parse("e243048a-0320-4bb6-b9b0-b3e1b1c1770f");

      public void Enqueue_GrantAccessRightsToDocumentsBulk(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerGrantAccessRightsToDocumentsBulkId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerClearAccessRightsRuleStateId = global::System.Guid.Parse("1789c9a0-c48c-4a00-8d0e-fdc2a9c274a8");

      public void Enqueue_ClearAccessRightsRuleState(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.RegularDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerClearAccessRightsRuleStateId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerCompareDocumentsId = global::System.Guid.Parse("dd7a5d44-7c4e-41bc-97b6-957f45a4f8c2");

      public void Enqueue_CompareDocuments(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerCompareDocumentsId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerIndexDocumentForFullTextSearchId = global::System.Guid.Parse("f5517a1a-7aa1-4702-ae21-77f029b08be8");

      public void Enqueue_IndexDocumentForFullTextSearch(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerIndexDocumentForFullTextSearchId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerBulkIndexDocumentsForFullTextSearchId = global::System.Guid.Parse("32f27e17-010a-4b36-8523-47926dc70f33");

      public void Enqueue_BulkIndexDocumentsForFullTextSearch(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.RegularDelayStrategy;
           int delayInterval = 1;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerBulkIndexDocumentsForFullTextSearchId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetFPoARegistrationStateId = global::System.Guid.Parse("8d3ccc00-7327-4fc4-b055-781286f29e0e");

      public void Enqueue_SetFPoARegistrationState(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetFPoARegistrationStateId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetSignatureSettingValidTillId = global::System.Guid.Parse("75ae1f1f-a990-481a-92d1-ae1a9d866fff");

      public void Enqueue_SetSignatureSettingValidTill(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetSignatureSettingValidTillId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSyncFormalizedPoAWithServiceId = global::System.Guid.Parse("1a842c29-0f70-4340-99c9-84362dc91144");

      public void Enqueue_SyncFormalizedPoAWithService(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSyncFormalizedPoAWithServiceId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerSetFPoARevocationStateId = global::System.Guid.Parse("d310685d-fdab-482c-ad16-548b0a8833b8");

      public void Enqueue_SetFPoARevocationState(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerSetFPoARevocationStateId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Docflow.Server.IModuleServerInitializationFunctions
  {
         public void AddConditionToRule(global::Sungero.Docflow.IApprovalRuleBase rule, global::Sungero.Docflow.IConditionBase condition, global::System.Int32 stageNumber)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddConditionToRule(rule, condition, stageNumber);
         }
         public void AddConvertPdfStage(global::Sungero.Docflow.IApprovalRuleBase rule)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddConvertPdfStage(rule);
         }
         public void AddGiveInvoiceApprovalStage(global::Sungero.Docflow.IApprovalRuleBase rule)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddGiveInvoiceApprovalStage(rule);
         }
         public void AddProcessRule(global::Sungero.Docflow.ISmartProcessingSetting smartProcessingSettings, global::System.String className, global::System.String grammarName, global::System.String moduleName, global::System.String functionName)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddProcessRule(smartProcessingSettings, className, grammarName, moduleName, functionName);
         }
         public void AddReviewTaskStage(global::Sungero.Docflow.IApprovalRuleBase rule)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.AddReviewTaskStage(rule);
         }
         public void CheckRightsToInitialize()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CheckRightsToInitialize();
         }
         public void CreateAccessRightsType(global::System.String entityTypeGuid, global::System.String operationName, global::System.Int32 operationSet, global::System.Int32 grantedMask, global::Sungero.Core.Enumeration area, global::System.Guid sid, global::System.Boolean isOverride, global::System.String description)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateAccessRightsType(entityTypeGuid, operationName, operationSet, grantedMask, area, sid, isOverride, description);
         }
         public global::Sungero.Docflow.IApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateDefaultRule(ruleName, documentFlow, stages);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Guid entityId, global::System.Boolean isDefault)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, entityId, isDefault);
         }
         public void CreateDocumentKind(global::System.String name, global::System.String shortName, global::Sungero.Core.Enumeration numerationType, global::Sungero.Core.Enumeration direction, global::System.Boolean autoFormattedName, global::System.Boolean autoNumerable, global::System.Guid typeGuid, Domain.Shared.IActionInfo[] actions, global::System.Boolean projectAccounting, global::System.Boolean grantRightsToProject, global::System.Guid entityId, global::System.Boolean isDefault)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentKind(name, shortName, numerationType, direction, autoFormattedName, autoNumerable, typeGuid, actions, projectAccounting, grantRightsToProject, entityId, isDefault);
         }
         public void CreateDocumentRegisterNumberTable()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentRegisterNumberTable();
         }
         public void CreateDocumentSendAction(Domain.Shared.IActionInfo action, global::System.String name)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentSendAction(action, name);
         }
         public void CreateDocumentType(global::System.String name, global::System.Guid documentTypeGuid, global::Sungero.Core.Enumeration direction, global::System.Boolean isRegistrationAllowed)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateDocumentType(name, documentTypeGuid, direction, isRegistrationAllowed);
         }
         public void CreateFolderChangeAccessRights()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateFolderChangeAccessRights();
         }
         public void CreateMailDeliveryMethod(global::System.String name, global::System.String sid)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateMailDeliveryMethod(name, sid);
         }
         public global::Sungero.Docflow.IApprovalRule CreateMemoDefaultRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateMemoDefaultRule(ruleName, stages);
         }
         public global::Sungero.Docflow.IDocumentRegister CreateNumerationDocumentRegister(global::System.String name, global::System.String index, global::Sungero.Core.Enumeration documentFlow, global::System.Guid entityId)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateNumerationDocumentRegister(name, index, documentFlow, entityId);
         }
         public void CreateNumerationSetting(global::System.Guid documentGuid, global::Sungero.Core.Enumeration documentFlow, global::Sungero.Docflow.IDocumentRegister documentRegister)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreateNumerationSetting(documentGuid, documentFlow, documentRegister);
         }
         public void CreatePowerOfAttorneySetting(global::Sungero.Docflow.IDocumentRegister documentRegister)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.CreatePowerOfAttorneySetting(documentRegister);
         }
         public global::Sungero.CoreEntities.IRelationType CreateRelationType(global::System.String name, global::System.String sourceTitle, global::System.String targetTitle, global::System.String sourceDescription, global::System.String targetDescription, global::System.Boolean hasDirection, global::System.Boolean needRight, global::System.Boolean useSource, global::System.Boolean useTarget)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRelationType(name, sourceTitle, targetTitle, sourceDescription, targetDescription, hasDirection, needRight, useSource, useTarget);
         }
         public global::Sungero.CoreEntities.IRole CreateRole(global::System.String roleName, global::System.String roleDescription, global::System.Guid roleGuid)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRole(roleName, roleDescription, roleGuid);
         }
         public global::Sungero.Docflow.IConditionBase CreateRoleCompareSignatoryAndInitManagerCondition(global::Sungero.Docflow.IConditionBase condition)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateRoleCompareSignatoryAndInitManagerCondition(condition);
         }
         public global::Sungero.Docflow.IDocumentRegister CreateYearSectionDocumentRegister(global::System.String name, global::System.String index, global::System.Guid entityId)
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.CreateYearSectionDocumentRegister(name, index, entityId);
         }
         public void FillSmartProcessingRules()
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.FillSmartProcessingRules();
         }
         public global::Sungero.CoreEntities.IRole GetCounterpartyResponsibleRole()
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.GetCounterpartyResponsibleRole();
         }
         public global::Sungero.CoreEntities.IRole GetProjectManagersRole()
         {
           return global:: Sungero.Docflow.ModuleInitialization.Module.GetProjectManagersRole();
         }
         public void SetRuleStages(global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
     global:: Sungero.Docflow.ModuleInitialization.Module.SetRuleStages(rule, stages);
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server.DocflowBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string CreateAccessRightsType
    {
       get { return resolver.GetQuery("CreateAccessRightsType"); }
    }
    public static string CreateParametersTable
    {
       get { return resolver.GetQuery("CreateParametersTable"); }
    }
    public static string CreateSungeroDocregisterCurrentNumbersTable
    {
       get { return resolver.GetQuery("CreateSungeroDocregisterCurrentNumbersTable"); }
    }
    public static string CreateProcedureSungeroDocRegisterGetNextNumber
    {
       get { return resolver.GetQuery("CreateProcedureSungeroDocRegisterGetNextNumber"); }
    }
    public static string CreateIndicesSungeroDocRegisterCurrentNumber
    {
       get { return resolver.GetQuery("CreateIndicesSungeroDocRegisterCurrentNumber"); }
    }
    public static string CreateIndexOnTable
    {
       get { return resolver.GetQuery("CreateIndexOnTable"); }
    }
    public static string SungeroWFAssignmentIndex0Query
    {
       get { return resolver.GetQuery("SungeroWFAssignmentIndex0Query"); }
    }
    public static string SungeroContentEDocIndex0Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex0Query"); }
    }
    public static string SungeroContentEDocIndex1Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex1Query"); }
    }
    public static string SungeroContentEDocIndex2Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex2Query"); }
    }
    public static string DropTable
    {
       get { return resolver.GetQuery("DropTable"); }
    }
    public static string CreateTempTableForRights
    {
       get { return resolver.GetQuery("CreateTempTableForRights"); }
    }
    public static string InsertIntoTempTableForRights
    {
       get { return resolver.GetQuery("InsertIntoTempTableForRights"); }
    }
    public static string ReadLicense
    {
       get { return resolver.GetQuery("ReadLicense"); }
    }
    public static string DeleteLicense
    {
       get { return resolver.GetQuery("DeleteLicense"); }
    }
    public static string RestoreLicense
    {
       get { return resolver.GetQuery("RestoreLicense"); }
    }
    public static string CreateProcedureSungeroDocRegisterSetCurrentNumber
    {
       get { return resolver.GetQuery("CreateProcedureSungeroDocRegisterSetCurrentNumber"); }
    }
    public static string InsertOrUpdateDocflowParamsValue
    {
       get { return resolver.GetQuery("InsertOrUpdateDocflowParamsValue"); }
    }
    public static string SelectDocflowParamsValue
    {
       get { return resolver.GetQuery("SelectDocflowParamsValue"); }
    }
    public static string DeleteReportData
    {
       get { return resolver.GetQuery("DeleteReportData"); }
    }
    public static string GetAllRecipientMembers
    {
       get { return resolver.GetQuery("GetAllRecipientMembers"); }
    }
    public static string SungeroContentEDocIndex3Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex3Query"); }
    }
    public static string OneFieldIndexQuery
    {
       get { return resolver.GetQuery("OneFieldIndexQuery"); }
    }
    public static string SungeroContentEDocIndex4Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex4Query"); }
    }
    public static string SungeroContentEDocIndex5Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex5Query"); }
    }
    public static string SungeroWFTaskIndex1Query
    {
       get { return resolver.GetQuery("SungeroWFTaskIndex1Query"); }
    }
    public static string SungeroWFTaskIndex2Query
    {
       get { return resolver.GetQuery("SungeroWFTaskIndex2Query"); }
    }
    public static string SungeroContentEDocIndex6Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex6Query"); }
    }
    public static string AddGrantRightsTypeToDocflowParams
    {
       get { return resolver.GetQuery("AddGrantRightsTypeToDocflowParams"); }
    }
    public static string SelectDocflowParamsValueByKey
    {
       get { return resolver.GetQuery("SelectDocflowParamsValueByKey"); }
    }
    public static string CreateTableForExpiringPowerOfAttorney
    {
       get { return resolver.GetQuery("CreateTableForExpiringPowerOfAttorney"); }
    }
    public static string SelectDocumentWithSendedTask
    {
       get { return resolver.GetQuery("SelectDocumentWithSendedTask"); }
    }
    public static string DeleteDocumentIdsWithoutTask
    {
       get { return resolver.GetQuery("DeleteDocumentIdsWithoutTask"); }
    }
    public static string AddExpiringDocumentsToTable
    {
       get { return resolver.GetQuery("AddExpiringDocumentsToTable"); }
    }
    public static string AddTaskExpiringDocumentTable
    {
       get { return resolver.GetQuery("AddTaskExpiringDocumentTable"); }
    }
    public static string CountNullExpiringTasks
    {
       get { return resolver.GetQuery("CountNullExpiringTasks"); }
    }
    public static string UpdateLastExpiringNotificationDate
    {
       get { return resolver.GetQuery("UpdateLastExpiringNotificationDate"); }
    }
    public static string ClearExpiringTableWithoutTasks
    {
       get { return resolver.GetQuery("ClearExpiringTableWithoutTasks"); }
    }
    public static string ClearExpiringTableWithTasks
    {
       get { return resolver.GetQuery("ClearExpiringTableWithTasks"); }
    }
    public static string CreateStoragePolicySettings
    {
       get { return resolver.GetQuery("CreateStoragePolicySettings"); }
    }
    public static string SelectDocumentsToTransfer
    {
       get { return resolver.GetQuery("SelectDocumentsToTransfer"); }
    }
    public static string SungeroContentEDocIndex7Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex7Query"); }
    }
    public static string ConvertDocumentKindsAccessRights
    {
       get { return resolver.GetQuery("ConvertDocumentKindsAccessRights"); }
    }
    public static string SungeroWFAssignmentIndex1Query
    {
       get { return resolver.GetQuery("SungeroWFAssignmentIndex1Query"); }
    }
    public static string ReservIdsQuery
    {
       get { return resolver.GetQuery("ReservIdsQuery"); }
    }
    public static string InsertDocflowParamsValue
    {
       get { return resolver.GetQuery("InsertDocflowParamsValue"); }
    }
    public static string ParametersTableExist
    {
       get { return resolver.GetQuery("ParametersTableExist"); }
    }
    public static string GetLastVerModifiedAfterDateDocsForFullTextSearch
    {
       get { return resolver.GetQuery("GetLastVerModifiedAfterDateDocsForFullTextSearch"); }
    }
    public static string GetCreatedDocumentsForFullTextSearch
    {
       get { return resolver.GetQuery("GetCreatedDocumentsForFullTextSearch"); }
    }
    public static string GetModifiedDocumentsForFullTextSearch
    {
       get { return resolver.GetQuery("GetModifiedDocumentsForFullTextSearch"); }
    }
    public static string SungeroContentEDocIndex8Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex8Query"); }
    }
    public static string SungeroContentEDocIndex9Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex9Query"); }
    }
    public static string GetLastVerDeletedAfterDateDocsForFullTextSearch
    {
       get { return resolver.GetQuery("GetLastVerDeletedAfterDateDocsForFullTextSearch"); }
    }
    public static string SungeroContentEDocIndex10Query
    {
       get { return resolver.GetQuery("SungeroContentEDocIndex10Query"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

