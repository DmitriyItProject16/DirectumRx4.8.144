
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ExchangeModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"); }
    }

    public override string Name
    {
      get { return "Sungero.Exchange"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IModuleServerInitializationFunctions, global::Sungero.Exchange.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4c57f798-1547-4de0-b240-d9d97901df5f"), new Sungero.Exchange.Shared.CancellationAgreementInfo(typeof(global::Sungero.Exchange.ICancellationAgreement)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.ICancellationAgreementServerPublicFunctions, global::Sungero.Exchange.Server.CancellationAgreementServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.ICancellationAgreementSharedPublicFunctions, global::Sungero.Exchange.Shared.CancellationAgreementSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a7cbaaf6-5be8-4cb9-9b07-4a2857669a6e"), new Sungero.Exchange.Shared.CancellationAgreementTrackingInfo(typeof(global::Sungero.Exchange.ICancellationAgreementTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("20738bb0-f250-4c98-997d-269b5f1f0fe3"), new Sungero.Exchange.Shared.CancellationAgreementVersionsInfo(typeof(global::Sungero.Exchange.ICancellationAgreementVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ee04eb99-cc71-4a97-b532-fd05b31cf7b2"), new Sungero.Exchange.Shared.ExchangeDocumentInfoInfo(typeof(global::Sungero.Exchange.IExchangeDocumentInfo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentInfoServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentInfoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentInfoSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentInfoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4d60313f-8a20-4c5c-be36-0904819e0627"), new Sungero.Exchange.Shared.ExchangeDocumentInfoServiceDocumentsInfo(typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0917ca0b-898f-429d-be37-c12da50c5a95"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentProcessingAssignmentServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentProcessingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentProcessingAssignmentSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ae03c598-ab50-4781-b1b2-968510b338b9"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IExchangeDocumentProcessingTaskServerPublicFunctions, global::Sungero.Exchange.Server.ExchangeDocumentProcessingTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IExchangeDocumentProcessingTaskSharedPublicFunctions, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4b78f549-6d32-45f4-80ab-4acc76d46af8"), new Sungero.Exchange.Shared.ExchangeDocumentProcessingTaskObserversInfo(typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTaskObservers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ad88c31d-5ae1-4821-9615-7d2fa575726b"), new Sungero.Exchange.Shared.ReceiptNotificationSendingAssignmentInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingAssignment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IReceiptNotificationSendingAssignmentServerPublicFunctions, global::Sungero.Exchange.Server.ReceiptNotificationSendingAssignmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IReceiptNotificationSendingAssignmentSharedPublicFunctions, global::Sungero.Exchange.Shared.ReceiptNotificationSendingAssignmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("490e66a0-8618-4eb9-aab8-2dbc8a884d98"), new Sungero.Exchange.Shared.ReceiptNotificationSendingTaskInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingTask)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IReceiptNotificationSendingTaskServerPublicFunctions, global::Sungero.Exchange.Server.ReceiptNotificationSendingTaskServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IReceiptNotificationSendingTaskSharedPublicFunctions, global::Sungero.Exchange.Shared.ReceiptNotificationSendingTaskSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("44aba064-f682-4733-9219-60d573598a58"), new Sungero.Exchange.Shared.ReceiptNotificationSendingTaskObserversInfo(typeof(global::Sungero.Exchange.IReceiptNotificationSendingTaskObservers)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.ICancellationAgreementFilterState, global::Sungero.Exchange.Shared.CancellationAgreement.CancellationAgreementFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentInfoFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentInfo.ExchangeDocumentInfoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentProcessingAssignmentFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingAssignment.ExchangeDocumentProcessingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IExchangeDocumentProcessingTaskFilterState, global::Sungero.Exchange.Shared.ExchangeDocumentProcessingTask.ExchangeDocumentProcessingTaskFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IReceiptNotificationSendingAssignmentFilterState, global::Sungero.Exchange.Shared.ReceiptNotificationSendingAssignment.ReceiptNotificationSendingAssignmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.IReceiptNotificationSendingTaskFilterState, global::Sungero.Exchange.Shared.ReceiptNotificationSendingTask.ReceiptNotificationSendingTaskFilterState>();



      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Server.IModuleServerPublicFunctions, global::Sungero.Exchange.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Exchange.Shared.IModuleSharedPublicFunctions, global::Sungero.Exchange.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SyncLiteMessages(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SyncLiteMessages", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SyncLiteMessages(businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SyncLiteHistoricalMessages(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SyncLiteHistoricalMessages", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SyncLiteHistoricalMessages(businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage> FilterLiteMessages(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage> messages)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FilterLiteMessages", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage>)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox, messages});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FilterLiteMessages(businessUnitBox, messages);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void RunMessagesOnAsyncHandler(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage> messages, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession downloadSession)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunMessagesOnAsyncHandler", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage>), typeof(global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox, messages, downloadSession});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).RunMessagesOnAsyncHandler(businessUnitBox, messages, downloadSession);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem> CreateLiteQueueItems(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage> messages, global::System.String asyncHandlerId, global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession downloadSession)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateLiteQueueItems", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IMessage>), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession)});
        return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox, messages, asyncHandlerId, downloadSession});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateLiteQueueItems(businessUnitBox, messages, asyncHandlerId, downloadSession);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void UpdateLastMessageIds(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.String currentIncomingId, global::System.String currentOutgoingId, global::System.String lastIncomingId, global::System.String lastOutgoingId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastMessageIds", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox, currentIncomingId, currentOutgoingId, lastIncomingId, lastOutgoingId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateLastMessageIds(businessUnitBox, currentIncomingId, currentOutgoingId, lastIncomingId, lastOutgoingId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Int32 GetMaxMessagesToLoading()
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMaxMessagesToLoading", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMaxMessagesToLoading();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Int32 GetMaxAttemptsToReceiveMessages()
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMaxAttemptsToReceiveMessages", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMaxAttemptsToReceiveMessages();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void RunOldMessagesOnAsyncHandler(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Boolean isHistoricalDownloading)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunOldMessagesOnAsyncHandler", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox, isHistoricalDownloading});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).RunOldMessagesOnAsyncHandler(businessUnitBox, isHistoricalDownloading);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void CreateQueueItem(global::System.Int64 businessUnitBoxId, global::System.String serviceMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateQueueItem", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId, serviceMessageId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateQueueItem(businessUnitBoxId, serviceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void DeleteProcessedQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteProcessedQueueItem", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(NpoComputer.DCX.ClientApi.Client)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, client});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).DeleteProcessedQueueItem(queueItem, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastIncomingMessageId", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLastIncomingMessageId(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLastOutgoingMessageId", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLastOutgoingMessageId(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void UpdateLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String incomingMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastIncomingMessageId", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, incomingMessageId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateLastIncomingMessageId(box, incomingMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void UpdateLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String outgoingMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateLastOutgoingMessageId", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, outgoingMessageId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateLastOutgoingMessageId(box, outgoingMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessMessageLiteQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::System.String asyncHandlerId, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessMessageLiteQueueItem", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(global::System.String), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, asyncHandlerId, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessMessageLiteQueueItem(queueItem, asyncHandlerId, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.IMessage GetMessageFromQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMessageFromQueueItem", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (NpoComputer.DCX.Common.IMessage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMessageFromQueueItem(queueItem, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessMessageQueueItem(NpoComputer.DCX.ClientApi.Client client, NpoComputer.DCX.Common.IMessage message, global::Sungero.ExchangeCore.IMessageQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessMessageQueueItem", new global::System.Type[]{typeof(NpoComputer.DCX.ClientApi.Client), typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.ExchangeCore.IMessageQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{client, message, queueItem});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessMessageQueueItem(client, message, queueItem);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void FillQueueItem(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillQueueItem", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillQueueItem(queueItem, message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean NeedSkipMessageQueueItemProcessing(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, NpoComputer.DCX.ClientApi.Client client, global::System.String asyncHandlerId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("NeedSkipMessageQueueItemProcessing", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, client, asyncHandlerId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).NeedSkipMessageQueueItemProcessing(queueItem, client, asyncHandlerId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsMessageValid(NpoComputer.DCX.Common.IMessage message, global::Sungero.ExchangeCore.IMessageQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsMessageValid", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.ExchangeCore.IMessageQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItem});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsMessageValid(message, queueItem);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsRootMessageQueueItemProcessed(global::Sungero.ExchangeCore.IMessageQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRootMessageQueueItemProcessed", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsRootMessageQueueItemProcessed(queueItem);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessMessage(NpoComputer.DCX.Common.IMessage message, global::Sungero.ExchangeCore.IMessageQueueItem queueItem, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessMessage", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItem, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessMessage(message, queueItem, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessMessage(NpoComputer.DCX.Common.IMessage message, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem> queueItems, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessMessage", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem>), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItems, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessMessage(message, queueItems, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddServiceCounterpartyDepartmentNote(NpoComputer.DCX.Common.IMessage message, global::System.Boolean isIncomingMessage, global::System.String branchInn, global::System.String branchKpp, global::System.String branchName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddServiceCounterpartyDepartmentNote", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::System.Boolean), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, isIncomingMessage, branchInn, branchKpp, branchName});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddServiceCounterpartyDepartmentNote(message, isIncomingMessage, branchInn, branchKpp, branchName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::Sungero.Core.Enumeration> ResolveReceiptStatus(global::System.Nullable<NpoComputer.DCX.Common.ReceiptStatus> receiptStatus)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ResolveReceiptStatus", new global::System.Type[]{typeof(global::System.Nullable<NpoComputer.DCX.Common.ReceiptStatus>)});
        return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{receiptStatus});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.ResolveReceiptStatus(receiptStatus);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddRelations(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo relatedExchangeDocumentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddRelations", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, relatedExchangeDocumentInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddRelations(document, relatedExchangeDocumentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.ITaxDocumentClassifier GetTaxDocumentClassifierByContent(System.IO.Stream content)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTaxDocumentClassifierByContent", new global::System.Type[]{typeof(System.IO.Stream)});
        return (global::Sungero.Exchange.Structures.Module.ITaxDocumentClassifier)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{content});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetTaxDocumentClassifierByContent(content);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean GeneratePublicBodyFromService(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodyFromService", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBodyFromService(document, versionId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.IExchangeDocumentProcessingTask CreateExchangeTask(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> infos, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBoxBase box, global::System.DateTime incomeDate, global::Sungero.Workflow.ITask mainProcessingTask)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateExchangeTask", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.DateTime), typeof(global::Sungero.Workflow.ITask)});
        return (global::Sungero.Exchange.IExchangeDocumentProcessingTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{infos, counterparty, box, incomeDate, mainProcessingTask});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateExchangeTask(infos, counterparty, box, incomeDate, mainProcessingTask);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddObserversToCancellationAgreementProcessingTask(global::Sungero.Exchange.IExchangeDocumentProcessingTask task, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddObserversToCancellationAgreementProcessingTask", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTask), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, parentInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddObserversToCancellationAgreementProcessingTask(task, parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetCancellationAgreementProcessingTaskObservers(global::Sungero.Exchange.IExchangeDocumentProcessingTask task, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationAgreementProcessingTaskObservers", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTask), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, parentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationAgreementProcessingTaskObservers(task, parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetResponsiblesFromParentDocument(global::Sungero.Exchange.IExchangeDocumentProcessingTask task, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResponsiblesFromParentDocument", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentProcessingTask), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{task, parentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResponsiblesFromParentDocument(task, parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> GetSignedNonformalizedPrimaryDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignedNonformalizedPrimaryDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignedNonformalizedPrimaryDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> GetRejectReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRejectReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRejectReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.IOfficialDocumentTracking AddTrackingAfterSignOrReject(global::Sungero.Exchange.IExchangeDocumentInfo info, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddTrackingAfterSignOrReject", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Docflow.IOfficialDocumentTracking)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info, document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddTrackingAfterSignOrReject(info, document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void FillNoteAfterReject(global::Sungero.Docflow.IOfficialDocument document, global::System.String rejectReason)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillNoteAfterReject", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, rejectReason});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillNoteAfterReject(document, rejectReason);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void WriteHistoryAfterReject(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Content.IElectronicDocumentVersions rejectedVersion, global::Sungero.Parties.ICounterparty sender, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteHistoryAfterReject", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, rejectedVersion, sender, businessUnitBox, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).WriteHistoryAfterReject(document, rejectedVersion, sender, businessUnitBox, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void WriteHistoryAfterReject(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Content.IElectronicDocumentVersions rejectedVersion, global::Sungero.Core.Enumeration historyOperation, global::System.String historyComment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteHistoryAfterReject", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Content.IElectronicDocumentVersions), typeof(global::Sungero.Core.Enumeration), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, rejectedVersion, historyOperation, historyComment});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).WriteHistoryAfterReject(document, rejectedVersion, historyOperation, historyComment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.IHistoryInfo GetHistoryInfoAfterReject(global::Sungero.Parties.ICounterparty sender, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetHistoryInfoAfterReject", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean)});
        return (global::Sungero.Exchange.Structures.Module.IHistoryInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{sender, businessUnitBox, isIncomingMessage});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetHistoryInfoAfterReject(sender, businessUnitBox, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void GeneratePublicBody(global::System.Int64 documentId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBody", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBody(documentId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessCancellationAgreement(NpoComputer.DCX.Common.IMessage message, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem> queueItems, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessCancellationAgreement", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItems, sender, isIncomingMessage, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessCancellationAgreement(message, queueItems, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> GetRevocationOfferPrimaryDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRevocationOfferPrimaryDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRevocationOfferPrimaryDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsParentDocumentMessageInProcess(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsParentDocumentMessageInProcess", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, isIncomingMessage, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsParentDocumentMessageInProcess(message, parentInfo, dcxCancellationAgreement, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessTwoSidedCancellationAgreement(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessTwoSidedCancellationAgreement", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessTwoSidedCancellationAgreement(message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SaveRejectToParentDocumentInfo(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SaveRejectToParentDocumentInfo", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SaveRejectToParentDocumentInfo(message, parentInfo, dcxCancellationAgreement, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsCancellationAgreementReply(NpoComputer.DCX.Common.IMessage message, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsCancellationAgreementReply", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, dcxCancellationAgreement, isIncomingMessage, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsCancellationAgreementReply(message, dcxCancellationAgreement, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessCancellationAgreementRequest(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessCancellationAgreementRequest", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessCancellationAgreementRequest(message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessCancellationAgreementReply(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, NpoComputer.DCX.Common.IMessage message, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessCancellationAgreementReply", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, dcxCancellationAgreement, message, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessCancellationAgreementReply(parentInfo, dcxCancellationAgreement, message, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessOldVersionCancellationAgreementReply(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, NpoComputer.DCX.Common.IMessage message, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessOldVersionCancellationAgreementReply", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, dcxCancellationAgreement, message, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessOldVersionCancellationAgreementReply(parentInfo, dcxCancellationAgreement, message, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessApprovedCancellationAgreementReply(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessApprovedCancellationAgreementReply", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessApprovedCancellationAgreementReply(message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessRejectedCancellationAgreementReply(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessRejectedCancellationAgreementReply", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessRejectedCancellationAgreementReply(message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddCancellationAgreementToServiceDocuments(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage, global::Sungero.Core.Enumeration documentType)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddCancellationAgreementToServiceDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, isIncomingMessage, documentType});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddCancellationAgreementToServiceDocuments(message, parentInfo, dcxCancellationAgreement, isIncomingMessage, documentType);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.IExchangeDocumentInfo CreateCancellationAgreementInfoWithoutDocument(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage, global::System.DateTime messageDate, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCancellationAgreementInfoWithoutDocument", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean), typeof(global::System.DateTime), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::Sungero.Exchange.IExchangeDocumentInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, dcxCancellationAgreement, isIncomingMessage, messageDate, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateCancellationAgreementInfoWithoutDocument(parentInfo, dcxCancellationAgreement, isIncomingMessage, messageDate, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddCancellationAgreementTracking(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Nullable<NpoComputer.DCX.Common.SignStatus> signStatus)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddCancellationAgreementTracking", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.Nullable<NpoComputer.DCX.Common.SignStatus>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo, cancellationAgreement, signStatus});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddCancellationAgreementTracking(cancellationAgreementInfo, cancellationAgreement, signStatus);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentDocumentInfoStatesRejected(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentDocumentInfoStatesRejected", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentDocumentInfoStatesRejected(parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentExchangeDocumentInfoStateAfterAnnulment(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Core.Enumeration exchangeState)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentExchangeDocumentInfoStateAfterAnnulment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, exchangeState});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentExchangeDocumentInfoStateAfterAnnulment(parentInfo, exchangeState);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentDocumentExchangeStateAfterTwoSidedAnnulment(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Core.Enumeration exchangeState)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentDocumentExchangeStateAfterTwoSidedAnnulment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, exchangeState});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentDocumentExchangeStateAfterTwoSidedAnnulment(parentInfo, exchangeState);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentDocumentExchangeStateAfterOneSidedAnnulment(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Core.Enumeration exchangeState)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentDocumentExchangeStateAfterOneSidedAnnulment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, exchangeState});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentDocumentExchangeStateAfterOneSidedAnnulment(parentInfo, exchangeState);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentExchangeDocumentInfoStateWaiting(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentExchangeDocumentInfoStateWaiting", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentExchangeDocumentInfoStateWaiting(parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void WriteHistoryAfterAnnulment(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Parties.ICounterparty sender, global::System.Nullable<global::Sungero.Core.Enumeration> cancellationAgreementMessageType, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("WriteHistoryAfterAnnulment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, sender, cancellationAgreementMessageType, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).WriteHistoryAfterAnnulment(parentInfo, sender, cancellationAgreementMessageType, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendCancellationAgreementProcessingTaskOrNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendCancellationAgreementProcessingTaskOrNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, dcxCancellationAgreement, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendCancellationAgreementProcessingTaskOrNotice(message, parentInfo, cancellationAgreement, dcxCancellationAgreement, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendCancellationAgreementProcessingTask(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String reason, global::System.String signatoryName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendCancellationAgreementProcessingTask", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, reason, signatoryName});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendCancellationAgreementProcessingTask(message, parentInfo, cancellationAgreement, reason, signatoryName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendApprovedCancellationAgreementNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::System.Nullable<global::Sungero.Core.Enumeration> cancellationAgreementMessageType, global::Sungero.ExchangeCore.IBoxBase box, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendApprovedCancellationAgreementNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, dcxCancellationAgreement, cancellationAgreementInfo, cancellationAgreementMessageType, box, returnAssignments});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendApprovedCancellationAgreementNotice(message, parentInfo, cancellationAgreement, dcxCancellationAgreement, cancellationAgreementInfo, cancellationAgreementMessageType, box, returnAssignments);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendApprovedCancellationAgreementReturnTaskNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.ExchangeCore.IBoxBase box, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendApprovedCancellationAgreementReturnTaskNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, cancellationAgreementInfo, dcxCancellationAgreement, box, returnAssignments});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendApprovedCancellationAgreementReturnTaskNotice(message, cancellationAgreementInfo, dcxCancellationAgreement, box, returnAssignments);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendOneSidedCancellationAgreementNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.ExchangeCore.IBoxBase box, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendOneSidedCancellationAgreementNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, dcxCancellationAgreement, box, returnAssignments});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendOneSidedCancellationAgreementNotice(message, parentInfo, cancellationAgreement, dcxCancellationAgreement, box, returnAssignments);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendOneSidedCancellationAgreementNotice(NpoComputer.DCX.Common.IMessage message, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::Sungero.Workflow.ITask parentTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendOneSidedCancellationAgreementNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Workflow.ITask), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, dcxCancellationAgreement, parentInfo, cancellationAgreementInfo, parentTask, performers});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendOneSidedCancellationAgreementNotice(message, dcxCancellationAgreement, parentInfo, cancellationAgreementInfo, parentTask, performers);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendRejectedCancellationAgreementNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, NpoComputer.DCX.Common.IReglamentDocument rejectDocument)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendRejectedCancellationAgreementNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IReglamentDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, cancellationAgreementInfo, rejectDocument});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendRejectedCancellationAgreementNotice(message, parentInfo, cancellationAgreement, cancellationAgreementInfo, rejectDocument);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendRejectedCancellationAgreementReturnTaskNotice(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, NpoComputer.DCX.Common.IReglamentDocument rejectDocument, global::Sungero.ExchangeCore.IBoxBase box, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendRejectedCancellationAgreementReturnTaskNotice", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IReglamentDocument), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, cancellationAgreementInfo, rejectDocument, box, returnAssignments});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendRejectedCancellationAgreementReturnTaskNotice(message, cancellationAgreementInfo, rejectDocument, box, returnAssignments);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ImportAnnulmentReplySign(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ImportAnnulmentReplySign", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, cancellationAgreement, dcxCancellationAgreement, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ImportAnnulmentReplySign(message, parentInfo, cancellationAgreement, dcxCancellationAgreement, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetTwoSidedCancellationAgreementExchangeDocumentInfoStateSigned(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetTwoSidedCancellationAgreementExchangeDocumentInfoStateSigned", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetTwoSidedCancellationAgreementExchangeDocumentInfoStateSigned(cancellationAgreementInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetTwoSidedCancellationAgreementStateSigned(global::Sungero.Docflow.IOfficialDocument cancellationAgreement, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetTwoSidedCancellationAgreementStateSigned", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetTwoSidedCancellationAgreementStateSigned(cancellationAgreement, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetCancellationAgreementExchangeDocumentInfoStateWaiting(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetCancellationAgreementExchangeDocumentInfoStateWaiting", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetCancellationAgreementExchangeDocumentInfoStateWaiting(cancellationAgreementInfo, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetCancellationAgreementStateWaiting(global::Sungero.Docflow.IOfficialDocument cancellationAgreement, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetCancellationAgreementStateWaiting", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetCancellationAgreementStateWaiting(cancellationAgreement, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetCancellationAgreementStateRejected(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetCancellationAgreementStateRejected", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, cancellationAgreement, dcxCancellationAgreement, cancellationAgreementInfo, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetCancellationAgreementStateRejected(message, cancellationAgreement, dcxCancellationAgreement, cancellationAgreementInfo, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessOneSidedCancellationAgreement(NpoComputer.DCX.Common.IMessage message, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessOneSidedCancellationAgreement", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessOneSidedCancellationAgreement(message, parentInfo, dcxCancellationAgreement, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetOneSidedCancellationAgreementExchangeDocumentInfoStateSigned(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetOneSidedCancellationAgreementExchangeDocumentInfoStateSigned", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetOneSidedCancellationAgreementExchangeDocumentInfoStateSigned(cancellationAgreementInfo, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetOneSidedCancellationAgreementStateSigned(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Boolean isIncomingMessage)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetOneSidedCancellationAgreementStateSigned", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, isIncomingMessage});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetOneSidedCancellationAgreementStateSigned(cancellationAgreement, isIncomingMessage);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void UpdateParentDocumentTracking(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::System.Nullable<global::Sungero.Core.Enumeration> cancellationAgreementMessageType)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateParentDocumentTracking", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, cancellationAgreementMessageType});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateParentDocumentTracking(parentInfo, cancellationAgreementMessageType);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetParentDocumentInfoDeliveryConfirmationStatusAfterAnnulment(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetParentDocumentInfoDeliveryConfirmationStatusAfterAnnulment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetParentDocumentInfoDeliveryConfirmationStatusAfterAnnulment(parentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void UpdateCancellationAgreementTracking(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateCancellationAgreementTracking", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateCancellationAgreementTracking(cancellationAgreementInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> CompleteParentDocumentReturnTask(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteParentDocumentReturnTask", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, cancellationAgreementInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteParentDocumentReturnTask(parentInfo, cancellationAgreementInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> CompleteCancellationAgreementReturnTask(global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo, global::Sungero.Core.Enumeration completeResult)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteCancellationAgreementReturnTask", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreementInfo, completeResult});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteCancellationAgreementReturnTask(cancellationAgreementInfo, completeResult);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void CompleteSignedOneSidedCancellationAgreementReturnTask(NpoComputer.DCX.Common.IMessage message, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteSignedOneSidedCancellationAgreementReturnTask", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, dcxCancellationAgreement, parentInfo, cancellationAgreementInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteSignedOneSidedCancellationAgreementReturnTask(message, dcxCancellationAgreement, parentInfo, cancellationAgreementInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SetCancellationAgreementExternalApprovalStateEmpty(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetCancellationAgreementExternalApprovalStateEmpty", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetCancellationAgreementExternalApprovalStateEmpty(cancellationAgreement);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> GetApprovalCheckReturnAssignment(global::Sungero.Exchange.IExchangeDocumentInfo info)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetApprovalCheckReturnAssignment", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetApprovalCheckReturnAssignment(info);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddCancellationAgreementToApprovalTaskAttachments(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Exchange.IExchangeDocumentInfo cancellationAgreementInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddCancellationAgreementToApprovalTaskAttachments", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, cancellationAgreementInfo});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddCancellationAgreementToApprovalTaskAttachments(parentInfo, cancellationAgreementInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void CompleteReturnTask(global::Sungero.Exchange.IExchangeDocumentInfo info, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments, global::System.String activeText, global::Sungero.Core.Enumeration completeResult)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteReturnTask", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info, returnAssignments, activeText, completeResult});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteReturnTask(info, returnAssignments, activeText, completeResult);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void CompleteReturnAssignments(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments, global::System.String activeText, global::Sungero.Core.Enumeration completeResult)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CompleteReturnAssignments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>), typeof(global::System.String), typeof(global::Sungero.Core.Enumeration)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{returnAssignments, activeText, completeResult});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CompleteReturnAssignments(returnAssignments, activeText, completeResult);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetCancellationAgreementNoticePerformers(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment> returnAssignments, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationAgreementNoticePerformers", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalCheckReturnAssignment>), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, returnAssignments, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationAgreementNoticePerformers(parentInfo, returnAssignments, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.IExchangeDocumentProcessingTask GetExchangeDocumentProcessingTask(global::Sungero.Exchange.IExchangeDocumentInfo info)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeDocumentProcessingTask", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Exchange.IExchangeDocumentProcessingTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeDocumentProcessingTask(info);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void GeneratePublicBodies(global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.ExchangeCore.IBoxBase box, NpoComputer.DCX.Common.IDocument dcxCancellationAgreement)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBodies", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(NpoComputer.DCX.Common.IDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{parentInfo, box, dcxCancellationAgreement});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GeneratePublicBodies(parentInfo, box, dcxCancellationAgreement);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void FillCancellationAgreementTaskAssignmentText(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Workflow.ITask task, global::System.String reason)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillCancellationAgreementTaskAssignmentText", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Workflow.ITask), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, parentInfo, task, reason});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillCancellationAgreementTaskAssignmentText(cancellationAgreement, parentInfo, task, reason);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ProcessAnnulmentOrCancellation(NpoComputer.DCX.Common.IMessage message, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem> queueItems, global::Sungero.Parties.ICounterparty sender, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessAnnulmentOrCancellation", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IMessageQueueItem>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItems, sender, isIncomingMessage, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessAnnulmentOrCancellation(message, queueItems, sender, isIncomingMessage, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> GetInvoiceConfirmationReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetInvoiceConfirmationReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetInvoiceConfirmationReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> GetReceiptReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReceiptReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetReceiptReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> GetNotificationReceiptReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotificationReceiptReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNotificationReceiptReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> GetNotificationOnReceiptOfNotificationReceiptReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotificationOnReceiptOfNotificationReceiptReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNotificationOnReceiptOfNotificationReceiptReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean FixReceiptNotificationForSbis(global::Sungero.Exchange.IExchangeDocumentInfo info)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FixReceiptNotificationForSbis", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FixReceiptNotificationForSbis(info);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void MarkDocumentAsSended(global::Sungero.Exchange.IExchangeDocumentInfo info, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty receiver, global::System.Boolean isIncomingMessage, global::Sungero.ExchangeCore.IBoxBase box, global::System.Nullable<NpoComputer.DCX.Common.SignStatus> signStatus)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("MarkDocumentAsSended", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.Nullable<NpoComputer.DCX.Common.SignStatus>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info, document, receiver, isIncomingMessage, box, signStatus});
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.MarkDocumentAsSended(info, document, receiver, isIncomingMessage, box, signStatus);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetExchangeDocumentHistoryComment(global::System.String counterpartyName, global::System.String exchangeServiceName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeDocumentHistoryComment", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterpartyName, exchangeServiceName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeDocumentHistoryComment(counterpartyName, exchangeServiceName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.ClientApi.Client GetClient(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetClient", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (NpoComputer.DCX.ClientApi.Client)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetClient(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentHyperlink", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetDocumentHyperlink(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetDocumentHyperlink(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentHyperlink", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{messageQueueItem});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetDocumentHyperlink(messageQueueItem);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Content.IAssociatedApplication GetOrCreateAssociatedApplicationByDocumentName(global::System.String documentName)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOrCreateAssociatedApplicationByDocumentName", new global::System.Type[]{typeof(global::System.String)});
        return (global::Sungero.Content.IAssociatedApplication)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentName});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetOrCreateAssociatedApplicationByDocumentName(documentName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsMessageWithUnsupportedDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsMessageWithUnsupportedDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsMessageWithUnsupportedDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAnswers", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, counterparty, box, certificate, isAgent});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendAnswers(documents, counterparty, box, certificate, isAgent);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendPackageAnswersForCancellationAgreement(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::Sungero.Parties.ICounterparty receiver, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendPackageAnswersForCancellationAgreement", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.CoreEntities.ICertificate)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, senderBox, receiver, certificate});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendPackageAnswersForCancellationAgreement(documents, senderBox, receiver, certificate);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendAnswerDocumentsPackage(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAnswerDocumentsPackage", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, box, certificate, isAgent});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendAnswerDocumentsPackage(documents, box, certificate, isAgent);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendAnswerToNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAnswerToNonformalizedDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, counterparty, box, certificate, isAgent});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendAnswerToNonformalizedDocument(document, counterparty, box, certificate, isAgent);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean ValidateBeforeSendAnswer(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.Structures.Module.Signature signature, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeSendAnswer", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.Structures.Module.Signature), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, signature, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateBeforeSendAnswer(document, documentInfo, signature, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void SendBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase waybill, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendBuyerTitle", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{waybill, box, certificate, isAgent});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendBuyerTitle(waybill, box, certificate, isAgent);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAmendmentRequest", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signedDocuments, receiver, box, note});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendAmendmentRequest(signedDocuments, receiver, box, note);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDeliveryConfirmation", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{signedDocuments, box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendDeliveryConfirmation(signedDocuments, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.Message CreateMessage(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> primaryDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> reglamentDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature> signs, NpoComputer.DCX.ClientApi.Client client, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceHeadId, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::System.String parentServiceMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateMessage", new global::System.Type[]{typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature>), typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.Message)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocuments, reglamentDocuments, signs, client, receiver, receiverServiceHeadId, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, parentServiceMessageId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateMessage(primaryDocuments, reglamentDocuments, signs, client, receiver, receiverServiceHeadId, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, parentServiceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.SentMessage SendMessage(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> primaryDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> reglamentDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature> signs, NpoComputer.DCX.ClientApi.Client client, global::Sungero.Parties.ICounterparty receiver, global::System.String serviceCounterpartyId, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String parentServiceMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendMessage", new global::System.Type[]{typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature>), typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.SentMessage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocuments, reglamentDocuments, signs, client, receiver, serviceCounterpartyId, box, parentServiceMessageId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendMessage(primaryDocuments, reglamentDocuments, signs, client, receiver, serviceCounterpartyId, box, parentServiceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.SentMessage SendMessage(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> primaryDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> reglamentDocuments, global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature> signs, NpoComputer.DCX.ClientApi.Client client, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceHeadId, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::System.String parentServiceMessageId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendMessage", new global::System.Type[]{typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature>), typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.SentMessage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocuments, reglamentDocuments, signs, client, receiver, receiverServiceHeadId, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, parentServiceMessageId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendMessage(primaryDocuments, reglamentDocuments, signs, client, receiver, receiverServiceHeadId, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, parentServiceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void PrepareReplyMessage(NpoComputer.DCX.Common.IMessage outcomeReplyMessage, global::Sungero.CoreEntities.ICertificate certificate, NpoComputer.DCX.ClientApi.Client client, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> documents, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("PrepareReplyMessage", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.CoreEntities.ICertificate), typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{outcomeReplyMessage, certificate, client, documents, box, document});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).PrepareReplyMessage(outcomeReplyMessage, certificate, client, documents, box, document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, receiver, box, certificate, needSign, comment});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendDocuments(document, addenda, receiver, box, certificate, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendDocuments(document, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ValidateDocumentsBeforeSending(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateDocumentsBeforeSending", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.CoreEntities.ICertificate)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, certificate});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateDocumentsBeforeSending(documents, certificate);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument> CreatePrimaryExchangeDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePrimaryExchangeDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreatePrimaryExchangeDocuments(document, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature> CreateExchangeDocumentsSignatures(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateExchangeDocumentsSignatures", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.Signature>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateExchangeDocumentsSignatures(documents, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void AddFPoaUnifiedRegNumberToSignatureData(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.Signature signature, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, NpoComputer.DCX.Common.SentMessage sentMessage, global::System.String serviceDocumentId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AddFPoaUnifiedRegNumberToSignatureData", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.Signature), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(NpoComputer.DCX.Common.SentMessage), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, signature, senderBox, sentMessage, serviceDocumentId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AddFPoaUnifiedRegNumberToSignatureData(document, signature, senderBox, sentMessage, serviceDocumentId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ProcessDocumentAfterSendingToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::Sungero.CoreEntities.ICertificate certificate, NpoComputer.DCX.Common.SentMessage sentMessage, global::System.Nullable<global::Sungero.Core.Enumeration> deliveryConfirmationStatus, global::System.String serviceId, global::System.Boolean isPrimaryDocument, global::System.Boolean needSign)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ProcessDocumentAfterSendingToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(NpoComputer.DCX.Common.SentMessage), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, receiver, receiverServiceDepartmentId, senderBox, certificate, sentMessage, deliveryConfirmationStatus, serviceId, isPrimaryDocument, needSign});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ProcessDocumentAfterSendingToCounterparty(document, receiver, receiverServiceDepartmentId, senderBox, certificate, sentMessage, deliveryConfirmationStatus, serviceId, isPrimaryDocument, needSign);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsRoamingExchange(global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRoamingExchange", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{receiver, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsRoamingExchange(receiver, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.IExchangeDocumentInfo SaveExternalDocumentInfo(global::Sungero.Docflow.IOfficialDocument document, global::System.String serviceId, global::System.String messageId, global::System.Boolean needSign, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Nullable<global::Sungero.Core.Enumeration> receiptStatus)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SaveExternalDocumentInfo", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
        return (global::Sungero.Exchange.IExchangeDocumentInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, serviceId, messageId, needSign, counterparty, counterpartyDepartmentBox, box, receiptStatus});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.SaveExternalDocumentInfo(document, serviceId, messageId, needSign, counterparty, counterpartyDepartmentBox, box, receiptStatus);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.Signature GetDocumentSignature(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentSignature", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.CoreEntities.ICertificate)});
        return (global::Sungero.Exchange.Structures.Module.Signature)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, certificate});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentSignature(document, certificate);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.IDocument CreatePrimaryDocumentForCancellationAgreement(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String serviceMessageId, global::System.String parentServiceEntityId, global::System.String serviceEntityId, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePrimaryDocumentForCancellationAgreement", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.IDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, serviceMessageId, parentServiceEntityId, serviceEntityId, needSign, comment});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreatePrimaryDocumentForCancellationAgreement(cancellationAgreement, serviceMessageId, parentServiceEntityId, serviceEntityId, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.IDocument CreatePrimaryExchangeServiceDocument(global::Sungero.Docflow.IOfficialDocument document, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreatePrimaryExchangeServiceDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Boolean), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.IDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, needSign, comment});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreatePrimaryExchangeServiceDocument(document, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetExchangeDocumentName(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeDocumentName", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeDocumentName(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.Signature CreateExchangeDocumentSignature(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String documentId, System.Byte[] signature, global::System.String formalizedPoAUnifiedRegNumber)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateExchangeDocumentSignature", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(System.Byte[]), typeof(global::System.String)});
        return (NpoComputer.DCX.Common.Signature)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, documentId, signature, formalizedPoAUnifiedRegNumber});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.CreateExchangeDocumentSignature(box, documentId, signature, formalizedPoAUnifiedRegNumber);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.ReglamentDocument CreateReglamentExchangeServiceDocument(global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate document, NpoComputer.DCX.Common.ReglamentDocumentType documentType)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateReglamentExchangeServiceDocument", new global::System.Type[]{typeof(global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate), typeof(NpoComputer.DCX.Common.ReglamentDocumentType)});
        return (NpoComputer.DCX.Common.ReglamentDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentType});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateReglamentExchangeServiceDocument(document, documentType);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.DocumentType GetDCXDocumentType(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDCXDocumentType", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (NpoComputer.DCX.Common.DocumentType)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDCXDocumentType(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void GenerateBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement, global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateBuyerTitle", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase), typeof(global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{statement, buyerTitle});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateBuyerTitle(statement, buyerTitle);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetBuyerConsigneeJobTitle(global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerConsigneeJobTitle", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{buyerTitle});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerConsigneeJobTitle(buyerTitle);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetBuyerSignatoryJobTitle(global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerSignatoryJobTitle", new global::System.Type[]{typeof(global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{buyerTitle});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerSignatoryJobTitle(buyerTitle);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasUnsignedBuyerTitle", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{statement});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.HasUnsignedBuyerTitle(statement);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean CanSendSign(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CanSendSign", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CanSendSign(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.SignerPowers GetSignerPowers(global::System.String authority)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSignerPowers", new global::System.Type[]{typeof(global::System.String)});
        return (NpoComputer.DCX.Common.SignerPowers)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{authority});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSignerPowers(authority);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean generateServiceDocuments)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetGeneratedDeliveryConfirmationDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfos, box, certificate, generateServiceDocuments});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetGeneratedDeliveryConfirmationDocuments(documentInfos, box, certificate, generateServiceDocuments);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note, global::System.Boolean throwError, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean sendInvoiceAmendmentRequest)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateAmendmentRequestDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, box, note, throwError, certificate, sendInvoiceAmendmentRequest});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GenerateAmendmentRequestDocuments(documents, box, note, throwError, certificate, sendInvoiceAmendmentRequest);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.IDocument CreateDocumentForAmendmentRequest(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocumentForAmendmentRequest", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (NpoComputer.DCX.Common.IDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDocumentForAmendmentRequest(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Int64 ImportCancellationAgreement(System.Byte[] body, global::System.Int64 leadingDocumentId, global::System.String reason, global::System.String extentionObject)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ImportCancellationAgreement", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, leadingDocumentId, reason, extentionObject});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ImportCancellationAgreement(body, leadingDocumentId, reason, extentionObject);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.ICancellationAgreement ImportCancellationAgreement(System.Byte[] body, global::System.Int64 leadingDocumentId, global::System.String reason)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ImportCancellationAgreement", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.Int64), typeof(global::System.String)});
        return (global::Sungero.Exchange.ICancellationAgreement)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, leadingDocumentId, reason});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ImportCancellationAgreement(body, leadingDocumentId, reason);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Exchange.ICancellationAgreement CreateCancellationAgreement(global::Sungero.Docflow.IOfficialDocument leadingDocument, global::System.String reason, global::Sungero.Company.IEmployee ourSignatory)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateCancellationAgreement", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.String), typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.Exchange.ICancellationAgreement)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{leadingDocument, reason, ourSignatory});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateCancellationAgreement(leadingDocument, reason, ourSignatory);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String ValidateBeforeImportCancellationAgreement(System.Byte[] body, global::System.Int64 leadingDocumentId, global::System.String reason, global::System.String options)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeImportCancellationAgreement", new global::System.Type[]{typeof(System.Byte[]), typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{body, leadingDocumentId, reason, options});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateBeforeImportCancellationAgreement(body, leadingDocumentId, reason, options);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void FinalizeCancellationAgreementImporting(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String options)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FinalizeCancellationAgreementImporting", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement, options});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FinalizeCancellationAgreementImporting(cancellationAgreement, options);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String ValidateBeforeCreatingCancellationAgreement(global::System.Int64 leadingDocumentId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeCreatingCancellationAgreement", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{leadingDocumentId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateBeforeCreatingCancellationAgreement(leadingDocumentId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String ValidateBeforeSendingCancellationAgreement(global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeSendingCancellationAgreement", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{leadingDocument});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateBeforeSendingCancellationAgreement(leadingDocument);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsLeadingDocumentRevoked(global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsLeadingDocumentRevoked", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{leadingDocument});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsLeadingDocumentRevoked(leadingDocument);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean IsCancellationAgreementInProcess(global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsCancellationAgreementInProcess", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{leadingDocument});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsCancellationAgreementInProcess(leadingDocument);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetInfoForSendToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetInfoForSendToCounterparty(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetCancellationAgreementInfoForSendToCounterparty(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationAgreementInfoForSendToCounterparty", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationAgreementInfoForSendToCounterparty(cancellationAgreement);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetSbisCancellationAgreementAddenda(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSbisCancellationAgreementAddenda", new global::System.Type[]{typeof(global::Sungero.Exchange.ICancellationAgreement)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{cancellationAgreement});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSbisCancellationAgreementAddenda(cancellationAgreement);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetFormalizedDocumentInfoForSendToCounterparty(global::Sungero.Docflow.IAccountingDocumentBase document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormalizedDocumentInfoForSendToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IAccountingDocumentBase)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFormalizedDocumentInfoForSendToCounterparty(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetNonFormalizedDocumentInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNonFormalizedDocumentInfoForSendToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNonFormalizedDocumentInfoForSendToCounterparty(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo FillSignInfo(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo exchangeDocumentInfo, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillSignInfo", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, exchangeDocumentInfo, result});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillSignInfo(document, exchangeDocumentInfo, result);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo FillExchangeBoxes(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo exchangeDocumentInfo, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result, global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillExchangeBoxes", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::Sungero.Company.IBusinessUnit)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, exchangeDocumentInfo, result, businessUnit});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillExchangeBoxes(document, exchangeDocumentInfo, result, businessUnit);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo FillCertificates(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FillCertificates", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)});
        return (global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, box, result});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FillCertificates(document, box, result);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.DocumentAllowedAnswer GetAllowedAnswers(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo exchangeDocumentInfo, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result, global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllowedAnswers", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::Sungero.Company.IBusinessUnit)});
        return (NpoComputer.DCX.Common.DocumentAllowedAnswer)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, exchangeDocumentInfo, result, businessUnit});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllowedAnswers(document, exchangeDocumentInfo, result, businessUnit);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static NpoComputer.DCX.Common.DocumentAllowedAnswer GetDocumentAllowedAnswers(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo exchangeDocumentInfo, NpoComputer.DCX.ClientApi.Client client)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentAllowedAnswers", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(NpoComputer.DCX.ClientApi.Client)});
        return (NpoComputer.DCX.Common.DocumentAllowedAnswer)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, exchangeDocumentInfo, client});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentAllowedAnswers(document, exchangeDocumentInfo, client);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String CheckExchangeForCounterparty(global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Company.IBusinessUnit businessUnit, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckExchangeForCounterparty", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Company.IBusinessUnit), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty, document, businessUnit, result});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckExchangeForCounterparty(counterparty, document, businessUnit, result);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentCertificatesToBox", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentCertificatesToBox(document, box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetConnectedExchangeBoxesToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)});
        return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, counterparties});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetConnectedExchangeBoxesToCounterparty(document, counterparties);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.ExchangeCore.ICounterpartyDepartmentBox GetCounterpartyDepartmentBox(global::Sungero.Parties.ICounterparty counterparty, global::System.String counterpartyDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCounterpartyDepartmentBox", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBox)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty, counterpartyDepartmentId, businessUnitBox});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetCounterpartyDepartmentBox(counterparty, counterpartyDepartmentId, businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox> GetCounterpartyDepartments(global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCounterpartyDepartments", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty, businessUnitBox});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetCounterpartyDepartments(counterparty, businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllExchangeBoxesToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)});
        return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, counterparties});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetAllExchangeBoxesToCounterparty(document, counterparties);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Boolean HasNotApprovedDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasNotApprovedDocuments", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documents});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.HasNotApprovedDocuments(document, documents);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Int32 skip, global::System.Int32 take, global::System.Boolean withoutGenerated)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentInfosWithoutReceiptNotificationPart", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Int32), typeof(global::System.Int32), typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, skip, take, withoutGenerated});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentInfosWithoutReceiptNotificationPart(box, skip, take, withoutGenerated);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Boolean withoutGenerated)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentInfosWithoutReceiptNotification", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean)});
        return (global::System.Linq.IQueryable<global::Sungero.Exchange.IExchangeDocumentInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, withoutGenerated});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentInfosWithoutReceiptNotification(box, withoutGenerated);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetUnprocessedReceiptStatuses()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUnprocessedReceiptStatuses", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetUnprocessedReceiptStatuses();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetUnprocessedBuyerReceiptStatuses()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUnprocessedBuyerReceiptStatuses", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetUnprocessedBuyerReceiptStatuses();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Boolean IsReglamentDocumentsNotSent(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsReglamentDocumentsNotSent", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfos});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsReglamentDocumentsNotSent(documentInfos);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsWithoutReceiptNotification", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentsWithoutReceiptNotification(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo info, global::System.String comment, global::System.Boolean sent)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FixReceiptNotification", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.String), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{info, comment, sent});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FixReceiptNotification(info, comment, sent);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FixReceiptNotification", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfos, comment});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).FixReceiptNotification(documentInfos, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Exchange.IReceiptNotificationSendingTask CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateReceiptNotificationSendingTask", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::Sungero.Exchange.IReceiptNotificationSendingTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateReceiptNotificationSendingTask(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> documentsToSign)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SaveDeliveryConfirmationSigns", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentsToSign});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SaveDeliveryConfirmationSigns(documentsToSign);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void EnqueueXmlToPdfBodyConverter(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EnqueueXmlToPdfBodyConverter", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Int64), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, versionId, exchangeStatus});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).EnqueueXmlToPdfBodyConverter(document, versionId, exchangeStatus);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void RemoveNamespaces(System.Xml.Linq.XDocument document)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RemoveNamespaces", new global::System.Type[]{typeof(System.Xml.Linq.XDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RemoveNamespaces(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsJobEnabled(global::System.String id)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsJobEnabled", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.IsJobEnabled(id);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueMessagesGet()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueMessagesGet", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueMessagesGet();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueGetHistoricalMessages()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueGetHistoricalMessages", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueGetHistoricalMessages();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueBodyConverterJob()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueBodyConverterJob", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueBodyConverterJob();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueGenerateServiceDocuments()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueGenerateServiceDocuments", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueGenerateServiceDocuments();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendSignedReceiptNotifications()
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueSendSignedReceiptNotifications", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Server.ModuleFunctions.RequeueSendSignedReceiptNotifications();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetValidFileName(global::System.String name)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetValidFileName", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetValidFileName(name);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.CoreEntities.IUser owner)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificates", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{owner});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCertificates(owner);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetPackageDocumentsExchangeInfos(global::System.String serviceMessageId)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPackageDocumentsExchangeInfos", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{serviceMessageId});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetPackageDocumentsExchangeInfos(serviceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetPackageCancellationAgreementInfos(global::System.String serviceMessageId)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPackageCancellationAgreementInfos", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{serviceMessageId});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetPackageCancellationAgreementInfos(serviceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetSbisPackageDocuments(global::Sungero.ExchangeCore.IBusinessUnitBox rootBox, global::System.String serviceMessageId)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSbisPackageDocuments", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rootBox, serviceMessageId});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.GetSbisPackageDocuments(rootBox, serviceMessageId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean HasRightsToPackageExchangeDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> exchangeDocumentsInfos)
    {
      var __typeName = "Sungero.Exchange.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasRightsToPackageExchangeDocuments", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{exchangeDocumentsInfos});
      }
      else
      {
        return global::Sungero.Exchange.Server.ModuleFunctions.HasRightsToPackageExchangeDocuments(exchangeDocumentsInfos);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void RunExchangeCheckup(global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunExchangeCheckup", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).RunExchangeCheckup(box);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::Sungero.Core.Enumeration> GetBuyerAcceptanceStatus(NpoComputer.DCX.Common.IDocument primaryDocument)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerAcceptanceStatus", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IDocument)});
        return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{primaryDocument});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerAcceptanceStatus(primaryDocument);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetFormalizedPoALink(global::System.String unifiedRegistrationNumber)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormalizedPoALink", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{unifiedRegistrationNumber});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFormalizedPoALink(unifiedRegistrationNumber);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetFormalizedPoALinkTitle(global::System.String unifiedRegistrationNumber)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFormalizedPoALinkTitle", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{unifiedRegistrationNumber});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFormalizedPoALinkTitle(unifiedRegistrationNumber);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetExchangeCertificatesForEmployee(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeCertificatesForEmployee", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, employee});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeCertificatesForEmployee(box, employee);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetExchangeOrderReportRows(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExchangeOrderReportRows", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExchangeOrderReportRows(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetLeadingDocumentReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLeadingDocumentReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLeadingDocumentReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetCancellationAgreementReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationAgreementReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationAgreementReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetSellerTitleOrDocumentReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSellerTitleOrDocumentReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSellerTitleOrDocumentReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetServiceDocumentsReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetServiceDocumentsReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetReceiptConfirmationReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments receipt, global::System.String groupName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetReceiptConfirmationReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, receipt, groupName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetReceiptConfirmationReportRow(documentInfo, receipt, groupName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetBuyerTitleAndServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerTitleAndServiceDocumentsReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerTitleAndServiceDocumentsReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetRejectDocumentAndServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRejectDocumentAndServiceDocumentsReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRejectDocumentAndServiceDocumentsReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetBuyerTitleServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerTitleServiceDocumentsReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerTitleServiceDocumentsReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetRejectDocumentReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRejectDocumentReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRejectDocumentReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetRejectServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRejectServiceDocumentsReportRows", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRejectServiceDocumentsReportRows(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentStatusReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentStatusReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentStatusReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetCancellationStatusReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationStatusReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationStatusReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetCancellationReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments cancellation, global::System.String cancellationSenderName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, cancellation, cancellationSenderName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationReportRow(documentInfo, cancellation, cancellationSenderName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetCancellationReplyReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments cancellation, global::System.String сancellationReplySenderName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationReplyReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, cancellation, сancellationReplySenderName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationReplyReportRow(documentInfo, cancellation, сancellationReplySenderName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetRejectCancellationReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments cancellation, global::System.String сancellationReplySenderName, global::System.String cancellationGroupName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRejectCancellationReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, cancellation, сancellationReplySenderName, cancellationGroupName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetRejectCancellationReportRow(documentInfo, cancellation, сancellationReplySenderName, cancellationGroupName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetSecondSignCancellationReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments cancellation, global::System.String сancellationReplySenderName, global::System.String cancellationGroupName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecondSignCancellationReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, cancellation, сancellationReplySenderName, cancellationGroupName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSecondSignCancellationReportRow(documentInfo, cancellation, сancellationReplySenderName, cancellationGroupName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Exchange.Structures.Module.IAnnulmentCounterpartyNames GetCancellationCounterpartyNamesFromBody(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments cancellation)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCancellationCounterpartyNamesFromBody", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments)});
        return (global::Sungero.Exchange.Structures.Module.IAnnulmentCounterpartyNames)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, cancellation});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetCancellationCounterpartyNamesFromBody(documentInfo, cancellation);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentReceiverNameForReport(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentReceiverNameForReport", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentReceiverNameForReport(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetDocumentSenderNameForReport(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentSenderNameForReport", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetDocumentSenderNameForReport(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetFullCounterpartyNameForReport(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFullCounterpartyNameForReport", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetFullCounterpartyNameForReport(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetServiceDocumentMessageType(global::Sungero.Core.Enumeration documentType, global::Sungero.Core.Enumeration messageType)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetServiceDocumentMessageType", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Core.Enumeration)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentType, messageType});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetServiceDocumentMessageType(documentType, messageType);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetServiceDocumentReportRow(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments serviceDocument, global::System.String documentSenderName, global::System.String messageType, System.Byte[] signature, global::System.String groupName, global::System.String documentName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetServiceDocumentReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfoServiceDocuments), typeof(global::System.String), typeof(global::System.String), typeof(System.Byte[]), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{serviceDocument, documentSenderName, messageType, signature, groupName, documentName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetServiceDocumentReportRow(serviceDocument, documentSenderName, messageType, signature, groupName, documentName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetBuyerTitleOrSecondSignatureReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerTitleOrSecondSignatureReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerTitleOrSecondSignatureReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetBuyerTitleReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBuyerTitleReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBuyerTitleReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetSecondSignatureReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSecondSignatureReportRow", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSecondSignatureReportRow(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String SendedFrom(global::System.String organizationName, global::System.String signedName)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendedFrom", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{organizationName, signedName});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SendedFrom(organizationName, signedName);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String DateWithTimeReportFormat(global::System.Nullable<global::System.DateTime> datetime)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DateWithTimeReportFormat", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{datetime});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).DateWithTimeReportFormat(datetime);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String DateReportFormat(global::System.Nullable<global::System.DateTime> datetime)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DateReportFormat", new global::System.Type[]{typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{datetime});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).DateReportFormat(datetime);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ExecuteConvertDocumentToPdfAsyncHandler(global::Sungero.ExchangeCore.IBodyConverterQueueItem queueItem)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteConvertDocumentToPdfAsyncHandler", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBodyConverterQueueItem)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteConvertDocumentToPdfAsyncHandler(queueItem);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String RunHistoricalDownload(global::System.Int64 businessUnitBoxId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RunHistoricalDownload", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId, periodBegin, periodEnd});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).RunHistoricalDownload(businessUnitBoxId, periodBegin, periodEnd);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String AbortHistoricalDownload(global::System.Int64 businessUnitBoxId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AbortHistoricalDownload", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AbortHistoricalDownload(businessUnitBoxId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ValidateCreateHistoricalDownloadSessionData(global::System.Int64 businessUnitBoxId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateCreateHistoricalDownloadSessionData", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.DateTime)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId, periodBegin, periodEnd});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateCreateHistoricalDownloadSessionData(businessUnitBoxId, periodBegin, periodEnd);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void ValidateAbortHistoricalDownloadSessionData(global::System.Int64 businessUnitBoxId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateAbortHistoricalDownloadSessionData", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ValidateAbortHistoricalDownloadSessionData(businessUnitBoxId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession CreateHistoricalDownloadSession(global::System.Int64 businessUnitBoxId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateHistoricalDownloadSession", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.DateTime)});
        return (global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId, periodBegin, periodEnd});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateHistoricalDownloadSession(businessUnitBoxId, periodBegin, periodEnd);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession AbortHistoricalDownloadSession(global::System.Int64 businessUnitBoxId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AbortHistoricalDownloadSession", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AbortHistoricalDownloadSession(businessUnitBoxId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetHistoricalDownloadSessions(global::System.Int64 businessUnitBoxId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetHistoricalDownloadSessions", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetHistoricalDownloadSessions(businessUnitBoxId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetActiveHistoricalDownloadSessions()
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveHistoricalDownloadSessions", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActiveHistoricalDownloadSessions();
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String GetHistoricalDownloadSessionInfo(global::System.Int64 downloadSessionId)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetHistoricalDownloadSessionInfo", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{downloadSessionId});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetHistoricalDownloadSessionInfo(downloadSessionId);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogFullMessage(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogFullMessage", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogFullMessage(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogMessage(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogMessage", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogMessage(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogMessagePrimaryDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogMessagePrimaryDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogMessagePrimaryDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogMessageReglamentDocuments(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogMessageReglamentDocuments", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogMessageReglamentDocuments(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogMessageSignatures(NpoComputer.DCX.Common.IMessage message)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogMessageSignatures", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogMessageSignatures(message);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static global::System.String ExchangeLogPattern(global::System.String text, global::System.String paramsInformation)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExchangeLogPattern", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, paramsInformation});
      }
      else
      {
        return ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExchangeLogPattern(text, paramsInformation);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::System.Int64 documentId, global::System.Int64 versionId, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, versionId, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(documentId, versionId, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(box, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(documentInfo, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IBodyConverterQueueItem queueItem, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBodyConverterQueueItem), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterpartyDepartmentBox, text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(counterpartyDepartmentBox, text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(box, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(NpoComputer.DCX.Common.IMessage message, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(message, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(NpoComputer.DCX.Common.IMessage message, NpoComputer.DCX.Common.IDocument primaryDocument, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(NpoComputer.DCX.Common.IDocument), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, primaryDocument, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(message, primaryDocument, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(NpoComputer.DCX.Common.IMessage message, NpoComputer.DCX.Common.IReglamentDocument reglamentDocument, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(NpoComputer.DCX.Common.IReglamentDocument), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, reglamentDocument, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(message, reglamentDocument, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(NpoComputer.DCX.Common.IMessage message, global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::Sungero.ExchangeCore.IBoxBase box, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, queueItem, box, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(message, queueItem, box, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(NpoComputer.DCX.Common.IMessage message, global::Sungero.ExchangeCore.IBoxBase box, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(NpoComputer.DCX.Common.IMessage), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{message, box, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(message, box, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(documentInfo, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.IBodyConverterQueueItem queueItem, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBodyConverterQueueItem), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(queueItem, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument> reglamentDocuments, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IReglamentDocument>), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo, reglamentDocuments, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(documentInfo, reglamentDocuments, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogDebugFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterpartyDepartmentBox, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogDebugFormat(counterpartyDepartmentBox, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::System.String text)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(text);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::System.String text, System.Exception ex)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::System.String), typeof(System.Exception)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{text, ex});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(text, ex);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::System.Int64 documentId, global::System.Int64 versionId, global::System.String text, System.Exception ex)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.String), typeof(System.Exception)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, versionId, text, ex});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(documentId, versionId, text, ex);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String logFormat, System.Object[] args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(System.Object[])});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, logFormat, args});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(box, logFormat, args);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String text, System.Exception ex)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::System.String), typeof(System.Exception)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, text, ex});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(box, text, ex);
      }
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
    internal static void LogErrorFormat(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::System.String text, System.Exception ex)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("LogErrorFormat", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IMessageQueueItem), typeof(global::System.String), typeof(System.Exception)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queueItem, text, ex});
      }
      else
      {
    ((global::Sungero.Exchange.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).LogErrorFormat(queueItem, text, ex);
      }
    }

    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.String GenerateAndSendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
      var __typeName = "Sungero.Exchange.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateAndSendAmendmentRequest", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest});
      }
      else
      {
        return global::Sungero.Exchange.Shared.ModuleFunctions.GenerateAndSendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsInvoiceFlowDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Exchange.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsInvoiceFlowDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Exchange.Shared.ModuleFunctions.IsInvoiceFlowDocument(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasCurrentUserExchangeServiceCertificate(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasCurrentUserExchangeServiceCertificate", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox});
      }
      else
      {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).HasCurrentUserExchangeServiceCertificate(businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.String GenerateAndSendDeliveryConfirmation(global::Sungero.ExchangeCore.IBusinessUnitBox rootBox, global::Sungero.CoreEntities.ICertificate certificate, global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.Boolean bulkMode, global::System.Int32 partSize)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateAndSendDeliveryConfirmation", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>), typeof(global::System.Boolean), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rootBox, certificate, documentInfos, bulkMode, partSize});
      }
      else
      {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GenerateAndSendDeliveryConfirmation(rootBox, certificate, documentInfos, bulkMode, partSize);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Exchange.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleInitializer" />
      internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Exchange.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDocuments", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Exchange.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
        }
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleInitializer" />
      internal static void CreateDocumentTypes()
      {
        var __typeName = "Sungero.Exchange.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Exchange.Server.ModuleInitializer.CreateDocumentTypes();
        }
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleInitializer" />
      internal static void CreateDocumentKinds()
      {
        var __typeName = "Sungero.Exchange.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Exchange.Server.ModuleInitializer.CreateDocumentKinds();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Exchange.Server.IModuleServerPublicFunctions
  {
    public global::System.String AbortHistoricalDownload(global::System.Int64 businessUnitBoxId)
    {
      return global::Sungero.Exchange.Functions.Module.AbortHistoricalDownload(businessUnitBoxId);
    }
    public global::System.String DateReportFormat(global::System.Nullable<global::System.DateTime> datetime)
    {
      return global::Sungero.Exchange.Functions.Module.DateReportFormat(datetime);
    }
    public global::System.String DateWithTimeReportFormat(global::System.Nullable<global::System.DateTime> datetime)
    {
      return global::Sungero.Exchange.Functions.Module.DateWithTimeReportFormat(datetime);
    }
    public void EnqueueXmlToPdfBodyConverter(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId, global::System.Nullable<global::Sungero.Core.Enumeration> exchangeStatus)
    {
global::Sungero.Exchange.Functions.Module.EnqueueXmlToPdfBodyConverter(document, versionId, exchangeStatus);
    }
    public void FinalizeCancellationAgreementImporting(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String options)
    {
global::Sungero.Exchange.Functions.Module.FinalizeCancellationAgreementImporting(cancellationAgreement, options);
    }
    public void GenerateBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement, global::Sungero.Docflow.Structures.AccountingDocumentBase.IBuyerTitle buyerTitle)
    {
global::Sungero.Exchange.Functions.Module.GenerateBuyerTitle(statement, buyerTitle);
    }
    public global::System.Boolean GeneratePublicBodyFromService(global::Sungero.Docflow.IOfficialDocument document, global::System.Int64 versionId)
    {
      return global::Sungero.Exchange.Functions.Module.GeneratePublicBodyFromService(document, versionId);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetActiveHistoricalDownloadSessions()
    {
      return global::Sungero.Exchange.Functions.Module.GetActiveHistoricalDownloadSessions();
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetBuyerTitleAndServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetBuyerTitleAndServiceDocumentsReportRows(documentInfo);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetCancellationAgreementReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetCancellationAgreementReportRows(documentInfo);
    }
    public global::System.String GetCancellationStatusReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetCancellationStatusReportRow(documentInfo);
    }
    public global::System.Linq.IQueryable<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Boolean withoutGenerated)
    {
      return global::Sungero.Exchange.Functions.Module.GetDocumentInfosWithoutReceiptNotification(box, withoutGenerated);
    }
    public global::System.String GetDocumentStatusReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetDocumentStatusReportRow(documentInfo);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetExchangeOrderReportRows(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Exchange.Functions.Module.GetExchangeOrderReportRows(document);
    }
    public global::System.String GetHistoricalDownloadSessionInfo(global::System.Int64 downloadSessionId)
    {
      return global::Sungero.Exchange.Functions.Module.GetHistoricalDownloadSessionInfo(downloadSessionId);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetHistoricalDownloadSessions(global::System.Int64 businessUnitBoxId)
    {
      return global::Sungero.Exchange.Functions.Module.GetHistoricalDownloadSessions(businessUnitBoxId);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetLeadingDocumentReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetLeadingDocumentReportRows(documentInfo);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetRejectDocumentAndServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetRejectDocumentAndServiceDocumentsReportRows(documentInfo);
    }
    public global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo GetSellerTitleOrDocumentReportRow(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetSellerTitleOrDocumentReportRow(documentInfo);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ExchangeOrderReport.IExchangeOrderInfo> GetServiceDocumentsReportRows(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      return global::Sungero.Exchange.Functions.Module.GetServiceDocumentsReportRows(documentInfo);
    }
    public global::Sungero.Exchange.Structures.Module.ITaxDocumentClassifier GetTaxDocumentClassifierByContent(System.IO.Stream content)
    {
      return global::Sungero.Exchange.Functions.Module.GetTaxDocumentClassifierByContent(content);
    }
    public global::System.Int64 ImportCancellationAgreement(System.Byte[] body, global::System.Int64 leadingDocumentId, global::System.String reason, global::System.String extentionObject)
    {
      return global::Sungero.Exchange.Functions.Module.ImportCancellationAgreement(body, leadingDocumentId, reason, extentionObject);
    }
    public void LogDebugFormat(global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(text);
    }
    public void LogDebugFormat(global::System.Int64 documentId, global::System.Int64 versionId, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(documentId, versionId, text);
    }
    public void LogDebugFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(box, text);
    }
    public void LogDebugFormat(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(documentInfo, text);
    }
    public void LogDebugFormat(global::Sungero.ExchangeCore.IBodyConverterQueueItem queueItem, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(queueItem, text);
    }
    public void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(queueItem, text);
    }
    public void LogDebugFormat(global::Sungero.ExchangeCore.IMessageQueueItem queueItem, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(queueItem, text);
    }
    public void LogDebugFormat(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogDebugFormat(counterpartyDepartmentBox, text);
    }
    public void LogErrorFormat(global::System.String text)
    {
global::Sungero.Exchange.Functions.Module.LogErrorFormat(text);
    }
    public void LogErrorFormat(global::System.String text, System.Exception ex)
    {
global::Sungero.Exchange.Functions.Module.LogErrorFormat(text, ex);
    }
    public void LogErrorFormat(global::System.Int64 documentId, global::System.Int64 versionId, global::System.String text, System.Exception ex)
    {
global::Sungero.Exchange.Functions.Module.LogErrorFormat(documentId, versionId, text, ex);
    }
    public void LogErrorFormat(global::Sungero.ExchangeCore.IBoxBase box, global::System.String text, System.Exception ex)
    {
global::Sungero.Exchange.Functions.Module.LogErrorFormat(box, text, ex);
    }
    public void RemoveNamespaces(System.Xml.Linq.XDocument document)
    {
global::Sungero.Exchange.Functions.Module.RemoveNamespaces(document);
    }
    public global::System.String RunHistoricalDownload(global::System.Int64 businessUnitBoxId, global::System.DateTime periodBegin, global::System.DateTime periodEnd)
    {
      return global::Sungero.Exchange.Functions.Module.RunHistoricalDownload(businessUnitBoxId, periodBegin, periodEnd);
    }
    public void SendAnswerToNonformalizedDocument(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Exchange.Functions.Module.SendAnswerToNonformalizedDocument(document, counterparty, box, certificate, isAgent);
    }
    public void SendBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase waybill, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
global::Sungero.Exchange.Functions.Module.SendBuyerTitle(waybill, box, certificate, isAgent);
    }
    public global::System.String SendedFrom(global::System.String organizationName, global::System.String signedName)
    {
      return global::Sungero.Exchange.Functions.Module.SendedFrom(organizationName, signedName);
    }
    public global::System.String ValidateBeforeImportCancellationAgreement(System.Byte[] body, global::System.Int64 leadingDocumentId, global::System.String reason, global::System.String options)
    {
      return global::Sungero.Exchange.Functions.Module.ValidateBeforeImportCancellationAgreement(body, leadingDocumentId, reason, options);
    }
  }
}

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Exchange.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobBodyConverterJobId = global::System.Guid.Parse("65fa7815-170d-489c-b613-c2c2366161a4");

      public void Enqueue_BodyConverterJob()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobBodyConverterJobId, null);
      }
 
      private static readonly global::System.Guid JobGetMessagesId = global::System.Guid.Parse("13f61e21-8bb9-4a3d-b72b-e92da64c60b4");

      public void Enqueue_GetMessages()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGetMessagesId, null);
      }
 
      private static readonly global::System.Guid JobSendReceiptNotificationTasksId = global::System.Guid.Parse("e7b6f44d-78eb-4c9f-b6e5-ffa66a262e91");

      public void Enqueue_SendReceiptNotificationTasks()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendReceiptNotificationTasksId, null);
      }
 
      private static readonly global::System.Guid JobCreateReceiptNotificationsId = global::System.Guid.Parse("b54f0e86-0cac-49bf-b99b-30ffd8030d9b");

      public void Enqueue_CreateReceiptNotifications()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobCreateReceiptNotificationsId, null);
      }
 
      private static readonly global::System.Guid JobSendSignedReceiptNotificationsId = global::System.Guid.Parse("a050e9dc-ac0a-40c2-a322-7f1832e53f36");

      public void Enqueue_SendSignedReceiptNotifications()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendSignedReceiptNotificationsId, null);
      }
 
      private static readonly global::System.Guid JobGetHistoricalMessagesId = global::System.Guid.Parse("86815fea-c9d8-4531-b90d-44100affbaa6");

      public void Enqueue_GetHistoricalMessages()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobGetHistoricalMessagesId, null);
      }
 


      private static readonly global::System.Guid AsyncHandlerProcessMessagesId = global::System.Guid.Parse("a55a422f-8052-4ad2-bf69-f7e362bf9d4e");

      public void Enqueue_ProcessMessages(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerProcessMessagesId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerConvertExchangeDocumentToPdfId = global::System.Guid.Parse("a0d6af7a-25e1-4ca0-b01b-169b2478fdbb");

      public void Enqueue_ConvertExchangeDocumentToPdf(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerConvertExchangeDocumentToPdfId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Exchange.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server.ExchangeBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Exchange.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string UpdateLastMessageId
    {
       get { return resolver.GetQuery("UpdateLastMessageId"); }
    }
    public static string GetLastMessageId
    {
       get { return resolver.GetQuery("GetLastMessageId"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

