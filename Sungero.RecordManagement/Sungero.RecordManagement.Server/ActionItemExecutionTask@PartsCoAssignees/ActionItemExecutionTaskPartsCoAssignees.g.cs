
// ==================================================================
// ActionItemExecutionTaskPartsCoAssignees.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskPartsCoAssigneesFilterForCoAssignee<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees
    where TRootEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesCoAssigneePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity, rootEntity });
        var methodInfo = genericType.GetMethod("PartsCoAssigneesCoAssigneeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesCoAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).PartsCoAssigneesCoAssigneeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskPartsCoAssigneesFilterForCoAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskPartsCoAssigneesSearchFilterForCoAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesCoAssigneeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("PartsCoAssigneesCoAssigneeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesCoAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().PartsCoAssigneesCoAssigneeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskPartsCoAssigneesSearchFilterForCoAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesFilterForCoAssignee<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees, global::Sungero.RecordManagement.IActionItemExecutionTask>), "CoAssignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesSearchFilterForCoAssignee<global::Sungero.CoreEntities.IRecipient>), "CoAssignee")]


  public class ActionItemExecutionTaskPartsCoAssignees :
    global::Sungero.Domain.ChildEntity, global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("6320352c-d110-4211-bbdf-056c3ed38c76");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssignees.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesState State
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskPartsCoAssigneesState(this);
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesInfo Info
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesInfo)base.Info; }
    }


    public global::Sungero.RecordManagement.IActionItemExecutionTask ActionItemExecutionTask { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ActionItemExecutionTask; }
      set { this.ActionItemExecutionTask = (global::Sungero.RecordManagement.IActionItemExecutionTask)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedHandlers(this);
    }

    private global::System.String _PartGuid;
    public virtual global::System.String PartGuid
    {
      get
      {
        return this._PartGuid;
      }

      set
      {
        this.SetPropertyValue("PartGuid", this._PartGuid, value, (propertyValue) => { this._PartGuid = propertyValue; }, this.PartGuidChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _CoAssignee;
    public virtual global::Sungero.Company.IEmployee CoAssignee
    {
      get
      {
        return this._CoAssignee;
      }

      set
      {
        this.SetPropertyValue("CoAssignee", this._CoAssignee, value, (propertyValue) => { this._CoAssignee = propertyValue; }, this.CoAssigneeChangedHandler);
      }
    }




    #region Framework events

    protected void CoAssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskPartsCoAssigneesCoAssigneeChangedEventArgs(this.State.Properties.CoAssignee, this.CoAssignee, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesSharedHandlers)this.SharedHandlers).PartsCoAssigneesCoAssigneeChanged(args);
    }

    protected void PartGuidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.PartGuid, this.PartGuid, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssigneesSharedHandlers)this.SharedHandlers).PartsCoAssigneesPartGuidChanged(args);
    }



    #endregion


    public ActionItemExecutionTaskPartsCoAssignees()
    {
    }

  }
}

// ==================================================================
// ActionItemExecutionTaskPartsCoAssigneesHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class ActionItemExecutionTaskPartsCoAssigneesCoAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees)this.Entity; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _root
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Root; }
    }

    public virtual global::System.Linq.IQueryable<T> PartsCoAssigneesCoAssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskPartsCoAssigneesCoAssigneePropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees entity, global::Sungero.RecordManagement.IActionItemExecutionTask root)
      : base(entity, root)
    {
    }
  }

  public partial class ActionItemExecutionTaskPartsCoAssigneesCoAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> PartsCoAssigneesCoAssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskPartsCoAssigneesCoAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// ActionItemExecutionTaskPartsCoAssigneesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
