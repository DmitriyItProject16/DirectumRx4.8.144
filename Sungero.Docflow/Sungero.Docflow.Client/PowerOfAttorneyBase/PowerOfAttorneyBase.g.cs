
// ==================================================================
// PowerOfAttorneyBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class PowerOfAttorneyBase :
    global::Sungero.Docflow.Client.InternalDocumentBase, global::Sungero.Docflow.IPowerOfAttorneyBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("a8d955b1-4b35-4013-b643-3ea9d80bd1ea");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Client.PowerOfAttorneyBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IPowerOfAttorneyBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Docflow.IPowerOfAttorneyBaseState State
    {
      get
      {
        return (global::Sungero.Docflow.IPowerOfAttorneyBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.PowerOfAttorneyBaseState(this);
    }

    public new global::Sungero.Docflow.IPowerOfAttorneyBaseInfo Info
    {
      get
      {
        return (global::Sungero.Docflow.IPowerOfAttorneyBaseInfo)base.Info;
      }
    }

    public new global::Sungero.Docflow.IPowerOfAttorneyBaseAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Docflow.IPowerOfAttorneyBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Client.PowerOfAttorneyBaseAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ValidTill;

        public virtual global::System.DateTime? ValidTill
        {
          get { return this._ValidTill.Value; }
          set { this._ValidTill.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _DaysToFinishWorks;

        public virtual global::System.Int32? DaysToFinishWorks
        {
          get { return this._DaysToFinishWorks.Value; }
          set { this._DaysToFinishWorks.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _ValidFrom;

        public virtual global::System.DateTime? ValidFrom
        {
          get { return this._ValidFrom.Value; }
          set { this._ValidFrom.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _AgentType;

        public virtual global::Sungero.Core.Enumeration? AgentType
        {
          get { return this._AgentType.Value; }
          set { this._AgentType.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _AgentTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Docflow.PowerOfAttorneyBase.AgentType),
          typeof(global::Sungero.Docflow.Client.PowerOfAttorneyBase),
          "AgentType");

        public static global::Sungero.Domain.Shared.EnumerationItems AgentTypeItems
        {
          get { return global::Sungero.Docflow.Client.PowerOfAttorneyBase._AgentTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems AgentTypeAllowedItems
        {
          get { return global::Sungero.Docflow.Client.PowerOfAttorneyBase.AgentTypeItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _IssuedTo;

              public virtual global::Sungero.Company.IEmployee IssuedTo
              {
              get
              {
                return this._IssuedTo.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._IssuedTo as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _IssuedToParty;

              public virtual global::Sungero.Parties.ICounterparty IssuedToParty
              {
              get
              {
                return this._IssuedToParty.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._IssuedToParty as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.IPerson> _Representative;

              public virtual global::Sungero.Parties.IPerson Representative
              {
              get
              {
                return this._Representative.Value as global::Sungero.Parties.IPerson;
              }

              set
              {
                (this._Representative as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }








      protected global::Sungero.Domain.Client.TextProperty _Powers;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String Powers
      {
        get { return this._Powers.Value; }
        set { this._Powers.Value = value; }
      }



    #endregion

    #region Methods


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Docflow.Client.PowerOfAttorneyBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.PowerOfAttorneyBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.PowerOfAttorneyBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void IssuedToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PowerOfAttorneyBaseIssuedToChangedEventArgs(this.State.Properties.IssuedTo, this.IssuedTo, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).IssuedToChanged(args);
    }

    protected void ValidTillChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ValidTill, this.ValidTill, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).ValidTillChanged(args);
    }

    protected void DaysToFinishWorksChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.DaysToFinishWorks, this.DaysToFinishWorks, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).DaysToFinishWorksChanged(args);
    }

    protected void ValidFromChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ValidFrom, this.ValidFrom, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).ValidFromChanged(args);
    }

    protected void PowersChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Powers, this.Powers, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).PowersChanged(args);
    }

    protected void AgentTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.AgentType, this.AgentType, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).AgentTypeChanged(args);
    }

    protected void IssuedToPartyChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PowerOfAttorneyBaseIssuedToPartyChangedEventArgs(this.State.Properties.IssuedToParty, this.IssuedToParty, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).IssuedToPartyChanged(args);
    }

    protected void RepresentativeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.PowerOfAttorneyBaseRepresentativeChangedEventArgs(this.State.Properties.Representative, this.Representative, this);
     ((global::Sungero.Docflow.IPowerOfAttorneyBaseSharedHandlers)this.SharedHandlers).RepresentativeChanged(args);
    }





  protected global::Sungero.Company.IEmployee IssuedToValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.Docflow.Client.PowerOfAttorneyBaseIssuedToValueInputEventArgs(this.IssuedTo, value, this, this.Info.Properties.IssuedTo);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).IssuedToValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ValidTillValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ValidTill, value, this, this.Info.Properties.ValidTill);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).ValidTillValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? DaysToFinishWorksValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.DaysToFinishWorks, value, this, this.Info.Properties.DaysToFinishWorks);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).DaysToFinishWorksValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ValidFromValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.ValidFrom, value, this, this.Info.Properties.ValidFrom);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).ValidFromValueInput(args);
    return args.NewValue;
  }

  protected global::System.String PowersValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.Powers, value, this, this.Info.Properties.Powers);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).PowersValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? AgentTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.AgentType, value, this, this.Info.Properties.AgentType);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).AgentTypeValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty IssuedToPartyValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.Docflow.Client.PowerOfAttorneyBaseIssuedToPartyValueInputEventArgs(this.IssuedToParty, value, this, this.Info.Properties.IssuedToParty);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).IssuedToPartyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.IPerson RepresentativeValueInputHandler(global::Sungero.Parties.IPerson value)
  {
    var args = new global::Sungero.Docflow.Client.PowerOfAttorneyBaseRepresentativeValueInputEventArgs(this.Representative, value, this, this.Info.Properties.Representative);
    ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).RepresentativeValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> AgentTypeFilteringHandler()
  {
    return ((global::Sungero.Docflow.PowerOfAttorneyBaseClientHandlers)this.Handlers).AgentTypeFiltering(this.AgentTypeAllowedItems);
  }




    #endregion

    #region Constructors























              protected virtual void InitIssuedToNavigationProperty()
              {
                this._IssuedTo = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("IssuedTo", this);
                this._IssuedTo.ValueChanged += (sender, e) => { this.IssuedToChangedHandler(); };
                this.AddProperty(this._IssuedTo as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitIssuedToPartyNavigationProperty()
              {
                this._IssuedToParty = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("IssuedToParty", this);
                this._IssuedToParty.ValueChanged += (sender, e) => { this.IssuedToPartyChangedHandler(); };
                this.AddProperty(this._IssuedToParty as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitRepresentativeNavigationProperty()
              {
                this._Representative = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.IPerson>("Representative", this);
                this._Representative.ValueChanged += (sender, e) => { this.RepresentativeChangedHandler(); };
                this.AddProperty(this._Representative as global::Sungero.Domain.Client.IProperty);
              }



            protected override void InitVersionsCollectionProperty()
            {
              this._Versions = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IPowerOfAttorneyBaseVersions>("Versions", this);
              this._Versions.ValueChanged += (sender, e) => { this.VersionsChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Versions);
              this.SetVersionsEventHandlers();
            }

            protected override void InitTrackingCollectionProperty()
            {
              this._Tracking = new global::Sungero.Domain.Client.ListProperty<global::Sungero.Docflow.IPowerOfAttorneyBaseTracking>("Tracking", this);
              this._Tracking.ValueChanged += (sender, e) => { this.TrackingChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Tracking);
              this.SetTrackingEventHandlers();
            }


    public PowerOfAttorneyBase()
    {
            this._ValidTill = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ValidTill", this);
            this._ValidTill.ValueChanged += (sender, e) => { this.ValidTillChangedHandler(); };
            this.AddProperty(this._ValidTill);

            this._DaysToFinishWorks = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("DaysToFinishWorks", this);
            this._DaysToFinishWorks.ValueChanged += (sender, e) => { this.DaysToFinishWorksChangedHandler(); };
            this.AddProperty(this._DaysToFinishWorks);

            this._ValidFrom = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("ValidFrom", this);
            this._ValidFrom.ValueChanged += (sender, e) => { this.ValidFromChangedHandler(); };
            this.AddProperty(this._ValidFrom);

            this._AgentType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("AgentType", this);
            this._AgentType.ValueChanged += (sender, e) => { this.AgentTypeChangedHandler(); };
            this.AddProperty(this._AgentType);

            this.InitIssuedToNavigationProperty();

            this.InitIssuedToPartyNavigationProperty();

            this.InitRepresentativeNavigationProperty();



            this._Powers = new global::Sungero.Domain.Client.TextProperty("Powers", this);
            this._Powers.ValueChanged += (sender, e) => { this.PowersChangedHandler(); };
            this.AddProperty(this._Powers);






    }

    #endregion

  }
}

// ==================================================================
// PowerOfAttorneyBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class PowerOfAttorneyBasePresenter<T> :
    global::Sungero.Docflow.Client.InternalDocumentBasePresenter<T>
    where T : class, global::Sungero.Docflow.IPowerOfAttorneyBase
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _FindSignatureSettingCommand;

          public global::System.Windows.Input.ICommand FindSignatureSettingCommand
          {
            get
            {
              if (this._FindSignatureSettingCommand == null)
                  this._FindSignatureSettingCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("FindSignatureSetting", this, this.FindSignatureSetting, this.CanFindSignatureSetting) { IsEmptyParameterAllowed = true };
              return this._FindSignatureSettingCommand;
            }
          }
          private global::System.Windows.Input.ICommand _FindActiveSignatureSettingCommand;

          public global::System.Windows.Input.ICommand FindActiveSignatureSettingCommand
          {
            get
            {
              if (this._FindActiveSignatureSettingCommand == null)
                  this._FindActiveSignatureSettingCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("FindActiveSignatureSetting", this, this.FindActiveSignatureSetting, this.CanFindActiveSignatureSetting) { IsEmptyParameterAllowed = true };
              return this._FindActiveSignatureSettingCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanFindSignatureSetting(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.PowerOfAttorneyBaseActions)(entity as Sungero.Docflow.Client.PowerOfAttorneyBase).ActionsHandlers).CanFindSignatureSetting(args);
              }

              private void FindSignatureSetting(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.FindSignatureSetting);
                ((Sungero.Docflow.Client.PowerOfAttorneyBaseActions)(entity as Sungero.Docflow.Client.PowerOfAttorneyBase).ActionsHandlers).FindSignatureSetting(args);
              }
              private bool CanFindActiveSignatureSetting(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.Docflow.Client.PowerOfAttorneyBaseActions)(entity as Sungero.Docflow.Client.PowerOfAttorneyBase).ActionsHandlers).CanFindActiveSignatureSetting(args);
              }

              private void FindActiveSignatureSetting(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.FindActiveSignatureSetting);
                ((Sungero.Docflow.Client.PowerOfAttorneyBaseActions)(entity as Sungero.Docflow.Client.PowerOfAttorneyBase).ActionsHandlers).FindActiveSignatureSetting(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _IssuedToCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter IssuedToCollectionPresenter
              {
          get { return this._IssuedToCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _IssuedToPartyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter IssuedToPartyCollectionPresenter
              {
          get { return this._IssuedToPartyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _RepresentativeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter RepresentativeCollectionPresenter
              {
          get { return this._RepresentativeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AssociatedApplicationCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(T), "AssociatedApplication");

              this._DeliveryMethodCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IMailDeliveryMethod>(() => this.Entity.Id, typeof(T), "DeliveryMethod");

              this._CaseFileCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ICaseFile>(() => this.Entity, typeof(T), "CaseFile");

              this._DeliveredToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "DeliveredTo");

              this._ResponsibleForReturnEmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "ResponsibleForReturnEmployee");

              this._ProjectCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IProjectBase>(() => this.Entity.Id, typeof(T), "Project");

              this._LeadingDocumentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.IOfficialDocument>(() => this.Entity.Id, typeof(T), "LeadingDocument");

              this._StorageCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IStorage>(() => this.Entity.Id, typeof(T), "Storage");

              this._TopicCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Docflow.ITopic>(() => this.Entity.Id, typeof(T), "Topic");

              this._SubtopicCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ITopic>(() => this.Entity, typeof(T), "Subtopic");

              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._DocumentRegisterCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentRegister>(() => this.Entity, typeof(T), "DocumentRegister");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._DocumentGroupCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentGroupBase>(() => this.Entity, typeof(T), "DocumentGroup");

              this._AssigneeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Assignee");

              this._OurSignatoryCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Company.IEmployee>(() => this.Entity, typeof(T), "OurSignatory");

              this._PreparedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "PreparedBy");

              this._OurSigningReasonCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.ISignatureSetting>(() => this.Entity, typeof(T), "OurSigningReason");

              this._BusinessUnitCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IBusinessUnit>(() => this.Entity.Id, typeof(T), "BusinessUnit");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");

                  this._IssuedToCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("27dee161-2fb4-46bb-9fd9-da61c92e534c"));
              this._IssuedToCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "IssuedTo");

                  this._IssuedToPartyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("6e284451-f1b1-4a00-9eed-98eac5ff1f86"));
              this._IssuedToPartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Parties.ICounterparty>(() => this.Entity, typeof(T), "IssuedToParty");

                  this._RepresentativeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.IPerson>(global::System.Guid.Parse("b096a18a-4775-4a27-a5c1-38a9818b24d8"));
              this._RepresentativeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.IPerson>(() => this.Entity.Id, typeof(T), "Representative");


                        this._VersionsAuthorCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseVersions), "Author");

                        this._VersionsModifiedByCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseVersions), "ModifiedBy");

                        this._VersionsAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseVersions), "AssociatedApplication");

                        this._VersionsBodyAssociatedApplicationCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Content.IAssociatedApplication>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseVersions), "BodyAssociatedApplication");


                        this._TrackingDeliveredToCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseTracking), "DeliveredTo");

                        this._TrackingReturnTaskCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(Sungero.Docflow.IPowerOfAttorneyBaseTracking), "ReturnTask");



    }

    public PowerOfAttorneyBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// PowerOfAttorneyBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class PowerOfAttorneyBaseCollectionPresenter<T> : 
    global::Sungero.Docflow.Client.InternalDocumentBaseCollectionPresenter<T>
    where T: class, global::Sungero.Docflow.IPowerOfAttorneyBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public PowerOfAttorneyBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public PowerOfAttorneyBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public PowerOfAttorneyBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public PowerOfAttorneyBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// PowerOfAttorneyBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{ 
  public class PowerOfAttorneyBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Client.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IPowerOfAttorneyBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IPowerOfAttorneyBase
    {
       public new global::Sungero.Docflow.IPowerOfAttorneyBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IPowerOfAttorneyBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IPowerOfAttorneyBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IPowerOfAttorneyBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Client.PowerOfAttorneyBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// PowerOfAttorneyBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Client
{
  public class PowerOfAttorneyBaseAccessRights : 
    Sungero.Docflow.Client.InternalDocumentBaseAccessRights, Sungero.Docflow.IPowerOfAttorneyBaseAccessRights
  {

    public PowerOfAttorneyBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class PowerOfAttorneyBaseTypeAccessRights : 
    Sungero.Docflow.Client.InternalDocumentBaseTypeAccessRights, Sungero.Docflow.IPowerOfAttorneyBaseAccessRights
  {

    public PowerOfAttorneyBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
