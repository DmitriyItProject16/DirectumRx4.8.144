
// ==================================================================
// Topic.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class TopicFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.ITopic
    {
      protected new global::Sungero.Docflow.ITopicFilterState Filter { get; private set; }

      private global::Sungero.Docflow.ITopicFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public TopicFilter(global::Sungero.Docflow.ITopicFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected TopicFilter()
      {
      }
    }
      public class TopicUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.ITopic
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class TopicSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Code { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.ITopic> Parent { get; protected set; }


        }




  public class TopicFilterForParent<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
    where TSourceEntity : class, global::Sungero.Docflow.ITopic
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.TopicParentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ParentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.TopicParentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ParentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public TopicFilterForParent(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class TopicSearchFilterForParent<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.ITopic
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.TopicParentSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ParentSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.TopicParentSearchPropertyFilteringServerHandler<TQueryEntity>().ParentSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public TopicSearchFilterForParent(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.TopicFilter<global::Sungero.Docflow.ITopic>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.TopicUiFilter<global::Sungero.Docflow.ITopic>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.TopicFilterForParent<global::Sungero.Docflow.ITopic, global::Sungero.Docflow.ITopic>), "Parent")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.TopicSearchFilterForParent<global::Sungero.Docflow.ITopic>), "Parent")]


  public class Topic :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.ITopic, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("cafa896a-2675-4e54-ba88-5f2f4f06f805");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.Topic.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.ITopic, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.ITopicState State
    {
      get { return (global::Sungero.Docflow.ITopicState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.TopicState(this);
    }

    public new virtual global::Sungero.Docflow.ITopicInfo Info
    {
      get { return (global::Sungero.Docflow.ITopicInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.ITopicAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.ITopicAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.TopicAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.TopicFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.TopicFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.TopicServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.TopicSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _Code;
    public virtual global::System.String Code
    {
      get
      {
        return this._Code;
      }

      set
      {
        this.SetPropertyValue("Code", this._Code, value, (propertyValue) => { this._Code = propertyValue; }, this.CodeChangedHandler);
      }
    }



    private global::System.String _Note;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }





    private global::Sungero.Docflow.ITopic _Parent;
    public virtual global::Sungero.Docflow.ITopic Parent
    {
      get
      {
        return this._Parent;
      }

      set
      {
        this.SetPropertyValue("Parent", this._Parent, value, (propertyValue) => { this._Parent = propertyValue; }, this.ParentChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.TopicCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.ITopic)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.TopicCreatingFromServerHandler((global::Sungero.Docflow.ITopic)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.ITopicSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void CodeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Code, this.Code, this);
     ((global::Sungero.Docflow.ITopicSharedHandlers)this.SharedHandlers).CodeChanged(args);
    }

    protected void ParentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.TopicParentChangedEventArgs(this.State.Properties.Parent, this.Parent, this);
     ((global::Sungero.Docflow.ITopicSharedHandlers)this.SharedHandlers).ParentChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.ITopicSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }



    #endregion


    public Topic()
    {
    }

  }
}

// ==================================================================
// TopicHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class TopicParentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {
    private global::Sungero.Docflow.ITopic _obj
    {
      get { return (global::Sungero.Docflow.ITopic)this.Entity; }
    }

    public TopicParentPropertyFilteringServerHandler(global::Sungero.Docflow.ITopic entity)
      : base(entity)
    {
    }
  }

  public partial class TopicParentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.ITopic
  {

    public virtual global::System.Linq.IQueryable<T> ParentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public TopicParentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class TopicFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.ITopic
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.ITopicFilterState Filter { get; private set; }

    private global::Sungero.Docflow.ITopicFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public TopicFilteringServerHandler(global::Sungero.Docflow.ITopicFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected TopicFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class TopicUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.ITopic
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class TopicSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.TopicSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.TopicSearchDialogModel)this.Dialog;
       }
     }

     public TopicSearchDialogServerHandler(global::Sungero.Docflow.Server.TopicSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class TopicServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.ITopic _obj
    {
      get { return (global::Sungero.Docflow.ITopic)this.Entity; }
    }

    public TopicServerHandlers(global::Sungero.Docflow.ITopic entity)
      : base(entity)
    {
    }
  }

  public partial class TopicCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.ITopic _source
    {
      get { return (global::Sungero.Docflow.ITopic)this.Source; }
    }

    private global::Sungero.Docflow.ITopicInfo _info
    {
      get { return (global::Sungero.Docflow.ITopicInfo)this._Info; }
    }

    public TopicCreatingFromServerHandler(global::Sungero.Docflow.ITopic source, global::Sungero.Docflow.ITopicInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// TopicEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// TopicAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class TopicAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.ITopicAccessRights
  {

    public TopicAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class TopicTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.ITopicAccessRights
  {

    public TopicTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// TopicRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class TopicRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.ITopicRepositoryImplementer<T>
      where T : global::Sungero.Docflow.ITopic 
    {
       public new global::Sungero.Docflow.ITopicAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.ITopicAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.ITopicInfo Info
       {
          get { return (global::Sungero.Docflow.ITopicInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.TopicTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// TopicPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// TopicServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class TopicFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.ITopic _obj
    {
      get { return (global::Sungero.Docflow.ITopic)this.Entity; }
    }

    public TopicFunctions(global::Sungero.Docflow.ITopic entity) : base(entity) { }
  }
}

// ==================================================================
// TopicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class Topic
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.TopicFunctions" />
    internal static  global::System.Boolean HasSubtopics(global::Sungero.Docflow.ITopic topic)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)topic).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasSubtopics", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.TopicFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetDocumentsWithTopic(global::Sungero.Docflow.ITopic topic)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)topic).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentsWithTopic", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// TopicServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class TopicServerPublicFunctions : global::Sungero.Docflow.Server.ITopicServerPublicFunctions
  {
    public global::System.Boolean HasSubtopics(global::Sungero.Docflow.ITopic topic)
    {
      return global::Sungero.Docflow.Functions.Topic.HasSubtopics(topic);
    }
  }
}

// ==================================================================
// TopicQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class Topic
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.Topic.TopicQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
