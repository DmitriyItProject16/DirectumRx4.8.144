
// ==================================================================
// RecordManagementSettingState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class RecordManagementSettingState : 
    global::Sungero.CoreEntities.Shared.DatabookEntryState, global::Sungero.RecordManagement.IRecordManagementSettingState
  {
    public RecordManagementSettingState(global::Sungero.RecordManagement.IRecordManagementSetting entity) : base(entity) { }

    public new global::Sungero.RecordManagement.IRecordManagementSettingPropertyStates Properties
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSettingPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.RecordManagementSettingPropertyStates(entity);
    }


    public new global::Sungero.RecordManagement.IRecordManagementSettingControlStates Controls
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSettingControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.RecordManagementSettingControlStates(entity);
    }

    public new global::Sungero.RecordManagement.IRecordManagementSettingPageStates Pages
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSettingPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.RecordManagement.Shared.RecordManagementSettingPageStates(entity);
    }

  }


  public class RecordManagementSettingControlStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryControlStates, global::Sungero.RecordManagement.IRecordManagementSettingControlStates
  {

    protected internal RecordManagementSettingControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class RecordManagementSettingPageStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPageStates, global::Sungero.RecordManagement.IRecordManagementSettingPageStates
  {
        public global::Sungero.Domain.Shared.IStandalonePageState MainPage
        {
        get { return this.GetPageState<Sungero.Domain.Shared.IStandalonePageState>("Card"); }
        }


    protected internal RecordManagementSettingPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class RecordManagementSettingPropertyStates : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertyStates, global::Sungero.RecordManagement.IRecordManagementSettingPropertyStates
  {
            public global::Sungero.Domain.Shared.IPropertyState<global::System.String> Name 
            {
              get { return this.GetPropertyState<global::System.String>("Name"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> AllowActionItemsWithIndefiniteDeadline 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("AllowActionItemsWithIndefiniteDeadline"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Int32?> ControlRelativeDeadlineInDays 
            {
              get { return this.GetPropertyState<global::System.Int32?>("ControlRelativeDeadlineInDays"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Int32?> ControlRelativeDeadlineInHours 
            {
              get { return this.GetPropertyState<global::System.Int32?>("ControlRelativeDeadlineInHours"); }
            }
            public global::Sungero.Domain.Shared.IPropertyState<global::System.Boolean?> AllowAcquaintanceBySubstitute 
            {
              get { return this.GetPropertyState<global::System.Boolean?>("AllowAcquaintanceBySubstitute"); }
            }


    protected internal RecordManagementSettingPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// RecordManagementSettingInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class RecordManagementSettingInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryInfo, global::Sungero.RecordManagement.IRecordManagementSettingInfo
  {
    public RecordManagementSettingInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.RecordManagement.IRecordManagementSettingPropertiesInfo Properties
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSettingPropertiesInfo)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.RecordManagement.Shared.RecordManagementSettingPropertiesInfo(entityType);
    }

  }

  public class RecordManagementSettingPropertiesInfo : 
    global::Sungero.CoreEntities.Shared.DatabookEntryPropertiesInfo, global::Sungero.RecordManagement.IRecordManagementSettingPropertiesInfo
  {
        public global::Sungero.Domain.Shared.IStringPropertyInfo Name 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.StringPropertyMetadata>("Name");
             return new global::Sungero.Domain.Shared.StringPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo AllowActionItemsWithIndefiniteDeadline 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("AllowActionItemsWithIndefiniteDeadline");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IIntegerPropertyInfo ControlRelativeDeadlineInDays 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.IntegerPropertyMetadata>("ControlRelativeDeadlineInDays");
             return new global::Sungero.Domain.Shared.IntegerPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IIntegerPropertyInfo ControlRelativeDeadlineInHours 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.IntegerPropertyMetadata>("ControlRelativeDeadlineInHours");
             return new global::Sungero.Domain.Shared.IntegerPropertyInfo(propertyMetadata);
          }
        }
        public global::Sungero.Domain.Shared.IBooleanPropertyInfo AllowAcquaintanceBySubstitute 
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.BooleanPropertyMetadata>("AllowAcquaintanceBySubstitute");
             return new global::Sungero.Domain.Shared.BooleanPropertyInfo(propertyMetadata);
          }
        }


    protected internal RecordManagementSettingPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

}

// ==================================================================
// RecordManagementSettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class RecordManagementSettingSharedHandlers : global::Sungero.CoreEntities.DatabookEntrySharedHandlers, IRecordManagementSettingSharedHandlers
  {
    private global::Sungero.RecordManagement.IRecordManagementSetting _obj
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSetting)this.Entity; }
    }
    public virtual void NameChanged(global::Sungero.Domain.Shared.StringPropertyChangedEventArgs e) { }


    public virtual void AllowActionItemsWithIndefiniteDeadlineChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }




    public virtual void AllowAcquaintanceBySubstituteChanged(global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs e) { }




    public RecordManagementSettingSharedHandlers(global::Sungero.RecordManagement.IRecordManagementSetting entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// RecordManagementSettingResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared.RecordManagementSetting
{
  /// <summary>
  /// Represents RecordManagementSetting resources.
  /// </summary>
  public class RecordManagementSettingResources : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryResources, global::Sungero.RecordManagement.RecordManagementSetting.IRecordManagementSettingResources
  {
    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentDeadline
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting) , "IncorrectAssignmentDeadline");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentDeadlineFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting), "IncorrectAssignmentDeadline", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentMaxDeadlineInDays
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting) , "IncorrectAssignmentMaxDeadlineInDays");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentMaxDeadlineInDaysFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting), "IncorrectAssignmentMaxDeadlineInDays", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentMaxDeadlineInHours
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting) , "IncorrectAssignmentMaxDeadlineInHours");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectAssignmentMaxDeadlineInHoursFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting), "IncorrectAssignmentMaxDeadlineInHours", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IncorrectHoursAssignmentDeadline
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting) , "IncorrectHoursAssignmentDeadline");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectHoursAssignmentDeadlineFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.RecordManagement.IRecordManagementSetting), "IncorrectHoursAssignmentDeadline", false, args);
    }

  }
}

// ==================================================================
// RecordManagementSettingSharedFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared
{
  public partial class RecordManagementSettingFunctions : global::Sungero.CoreEntities.Shared.DatabookEntryFunctions
  {
    private global::Sungero.RecordManagement.IRecordManagementSetting _obj
    {
      get { return (global::Sungero.RecordManagement.IRecordManagementSetting)this.Entity; }
    }

    public RecordManagementSettingFunctions(global::Sungero.RecordManagement.IRecordManagementSetting entity) : base(entity) { }
  }
}

// ==================================================================
// RecordManagementSettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class RecordManagementSetting
  {
  }
}

// ==================================================================
// RecordManagementSettingFilterState.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Shared.RecordManagementSetting
{

  public class RecordManagementSettingFilterInfo : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterInfo,
    global::Sungero.RecordManagement.IRecordManagementSettingFilterInfo
  {
  }

  public class RecordManagementSettingFilterState : global::Sungero.CoreEntities.Shared.DatabookEntry.DatabookEntryFilterState,
    global::Sungero.RecordManagement.IRecordManagementSettingFilterState
  {



    public new Sungero.RecordManagement.IRecordManagementSettingFilterInfo Info
    {
      get
      {
        return (Sungero.RecordManagement.IRecordManagementSettingFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.RecordManagement.Shared.RecordManagementSetting.RecordManagementSettingFilterInfo();
    }

  }
}

// ==================================================================
// RecordManagementSettingSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Shared
{
  public class RecordManagementSettingSharedPublicFunctions : global::Sungero.RecordManagement.Shared.IRecordManagementSettingSharedPublicFunctions
  {
  }
}
