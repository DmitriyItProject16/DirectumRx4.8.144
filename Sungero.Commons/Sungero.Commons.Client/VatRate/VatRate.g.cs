
// ==================================================================
// VatRate.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class VatRate :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.Commons.IVatRate
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("fe0ed345-5965-40d6-a559-24dcde189a95");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Commons.Client.VatRate.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Commons.IVatRate, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.Commons.IVatRateState State
    {
      get
      {
        return (global::Sungero.Commons.IVatRateState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Commons.Shared.VatRateState(this);
    }

    public new global::Sungero.Commons.IVatRateInfo Info
    {
      get
      {
        return (global::Sungero.Commons.IVatRateInfo)base.Info;
      }
    }

    public new global::Sungero.Commons.IVatRateAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.Commons.IVatRateAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Commons.Client.VatRateAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _Rate;

        public virtual global::System.Int32? Rate
        {
          get { return this._Rate.Value; }
          set { this._Rate.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Sid;

        public virtual global::System.String Sid
        {
          get { return this._Sid.Value; }
          set { this._Sid.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.Commons.Client.VatRateActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.VatRateCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.Commons.Client.VatRateAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.Commons.Client.VatRateAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.Commons.Client.VatRateFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Commons.Shared.VatRateFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.Commons.VatRateClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Commons.VatRateSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Commons.IVatRateSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void RateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Rate, this.Rate, this);
     ((global::Sungero.Commons.IVatRateSharedHandlers)this.SharedHandlers).RateChanged(args);
    }

    protected void SidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Sid, this.Sid, this);
     ((global::Sungero.Commons.IVatRateSharedHandlers)this.SharedHandlers).SidChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.Commons.VatRateClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? RateValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.Rate, value, this, this.Info.Properties.Rate);
    ((global::Sungero.Commons.VatRateClientHandlers)this.Handlers).RateValueInput(args);
    return args.NewValue;
  }

  protected global::System.String SidValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Sid, value, this, this.Info.Properties.Sid);
    ((global::Sungero.Commons.VatRateClientHandlers)this.Handlers).SidValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public VatRate()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._Rate = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("Rate", this);
            this._Rate.ValueChanged += (sender, e) => { this.RateChangedHandler(); };
            this.AddProperty(this._Rate);

            this._Sid = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Sid", this);
            this._Sid.ValueChanged += (sender, e) => { this.SidChangedHandler(); };
            this.AddProperty(this._Sid);








    }

    #endregion

  }
}

// ==================================================================
// VatRatePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class VatRatePresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.Commons.IVatRate
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public VatRatePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// VatRateCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class VatRateCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.Commons.IVatRate
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public VatRateCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public VatRateCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public VatRateCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public VatRateCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// VatRateRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{ 
  public class VatRateRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.Commons.IVatRateRepositoryImplementer<T>
      where T : global::Sungero.Commons.IVatRate
    {
       public new global::Sungero.Commons.IVatRateAccessRights AccessRights
       {
          get { return (global::Sungero.Commons.IVatRateAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Commons.IVatRateInfo Info
       {
          get { return (global::Sungero.Commons.IVatRateInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Commons.Client.VatRateTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// VatRateAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Client
{
  public class VatRateAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.Commons.IVatRateAccessRights
  {

    public VatRateAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class VatRateTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.Commons.IVatRateAccessRights
  {

    public VatRateTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
