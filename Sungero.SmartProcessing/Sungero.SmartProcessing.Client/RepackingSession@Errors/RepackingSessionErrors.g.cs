
// ==================================================================
// RepackingSessionErrors.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class RepackingSessionErrors :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.SmartProcessing.IRepackingSessionErrors
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("1e7730d1-c8c7-4ea8-b96f-6949b6bce18f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Client.RepackingSessionErrors.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IRepackingSessionErrors, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.SmartProcessing.IRepackingSessionErrorsState State
    {
      get
      {
        return (global::Sungero.SmartProcessing.IRepackingSessionErrorsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.RepackingSessionErrorsState(this);
    }

    public new global::Sungero.SmartProcessing.IRepackingSessionErrorsInfo Info
    {
      get
      {
        return (global::Sungero.SmartProcessing.IRepackingSessionErrorsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.SmartProcessing.IRepackingSession> _RepackingSession;

    public global::Sungero.SmartProcessing.IRepackingSession RepackingSession
    {
      get { return this._RepackingSession.Value; }
      set { this._RepackingSession.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.RepackingSession; }
      set { this.RepackingSession = (global::Sungero.SmartProcessing.IRepackingSession)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Text;

        public virtual global::System.String Text
        {
          get { return this._Text.Value; }
          set { this._Text.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionErrorsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionErrorsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void TextChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Text, this.Text, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionErrorsSharedHandlers)this.SharedHandlers).ErrorsTextChanged(args);
    }



  protected global::System.String TextValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Text, value, this, this.Info.Properties.Text);
    ((global::Sungero.SmartProcessing.RepackingSessionErrorsClientHandlers)this.Handlers).ErrorsTextValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public RepackingSessionErrors()
    {
      this._RepackingSession = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.SmartProcessing.IRepackingSession>("RepackingSession", this, true);

            this._Text = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Text", this);
            this._Text.ValueChanged += (sender, e) => { this.TextChangedHandler(); };
            this.AddProperty(this._Text);








    }

    #endregion

  }
}
