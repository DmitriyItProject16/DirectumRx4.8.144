
// ==================================================================
// RepackingSession.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class RepackingSessionFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.SmartProcessing.IRepackingSession
    {
      protected new global::Sungero.SmartProcessing.IRepackingSessionFilterState Filter { get; private set; }

      private global::Sungero.SmartProcessing.IRepackingSessionFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public RepackingSessionFilter(global::Sungero.SmartProcessing.IRepackingSessionFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected RepackingSessionFilter()
      {
      }
    }
      public class RepackingSessionUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.SmartProcessing.IRepackingSession
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class RepackingSessionSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String SessionId { get; protected set; }
                  public virtual global::System.Int64? AssignmentId { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> CloseDate { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RepackingSessionOriginalDocumentsModel OriginalDocuments { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RepackingSessionNewDocumentsModel NewDocuments { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public RepackingSessionErrorsModel Errors { get; protected set; }

        }


      public class RepackingSessionOriginalDocumentsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class RepackingSessionNewDocumentsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class RepackingSessionErrorsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }




  [global::Sungero.Domain.Filter(typeof(global::Sungero.SmartProcessing.Server.RepackingSessionFilter<global::Sungero.SmartProcessing.IRepackingSession>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.SmartProcessing.Server.RepackingSessionUiFilter<global::Sungero.SmartProcessing.IRepackingSession>))]

  public class RepackingSession :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.SmartProcessing.IRepackingSession
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("3724e760-a28a-42ec-a91a-217df42c3665");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Server.RepackingSession.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IRepackingSession, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.SmartProcessing.IRepackingSessionState State
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSessionState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.RepackingSessionState(this);
    }

    public new virtual global::Sungero.SmartProcessing.IRepackingSessionInfo Info
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSessionInfo)base.Info; }
    }

    public new virtual global::Sungero.SmartProcessing.IRepackingSessionAccessRights AccessRights
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSessionAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.SmartProcessing.Server.RepackingSessionAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.SmartProcessing.Server.RepackingSessionFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.SmartProcessing.Shared.RepackingSessionFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.String _SessionId;
    public virtual global::System.String SessionId
    {
      get
      {
        return this._SessionId;
      }

      set
      {
        this.SetPropertyValue("SessionId", this._SessionId, value, (propertyValue) => { this._SessionId = propertyValue; }, this.SessionIdChangedHandler);
      }
    }
    private global::System.Int64? _AssignmentId;
    public virtual global::System.Int64? AssignmentId
    {
      get
      {
        return this._AssignmentId;
      }

      set
      {
        this.SetPropertyValue("AssignmentId", this._AssignmentId, value, (propertyValue) => { this._AssignmentId = propertyValue; }, this.AssignmentIdChangedHandler);
      }
    }
    private global::System.DateTime? _CloseDate;
    public virtual global::System.DateTime? CloseDate
    {
      get
      {
        return this._CloseDate;
      }

      set
      {
        this.SetPropertyValue("CloseDate", this._CloseDate, value, (propertyValue) => { this._CloseDate = propertyValue; }, this.CloseDateChangedHandler);
      }
    }
    private global::System.Boolean? _ResultsApplied;
    public virtual global::System.Boolean? ResultsApplied
    {
      get
      {
        return this._ResultsApplied;
      }

      set
      {
        this.SetPropertyValue("ResultsApplied", this._ResultsApplied, value, (propertyValue) => { this._ResultsApplied = propertyValue; }, this.ResultsAppliedChangedHandler);
      }
    }








    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionOriginalDocuments> _OriginalDocuments;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionOriginalDocuments> OriginalDocuments
    {
      get
      {
        if (this._OriginalDocuments == null)
        {
          this._OriginalDocuments = this.CreateOriginalDocumentsCollection();
          this.SetOriginalDocumentsEventHandlers();
        }
        return this._OriginalDocuments;
      }

      set
      {
        if (this._OriginalDocuments != null)
          this.UnsetChildCollectionEventHandlers(this._OriginalDocuments);

        this._OriginalDocuments = value;
        this.SetOriginalDocumentsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionOriginalDocuments> CreateOriginalDocumentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionOriginalDocuments>() { RootEntity = this };
    }

    private void SetOriginalDocumentsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._OriginalDocuments, "OriginalDocuments");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._OriginalDocuments;
      changeNotifier.Added += this.OriginalDocumentsAddedHandler;
      changeNotifier.Deleted += this.OriginalDocumentsDeletedHandler;
      changeNotifier.Added += this.OriginalDocumentsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.OriginalDocumentsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.OriginalDocumentsCollectionUpdateEventHandler;
    }

    private void OriginalDocumentsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("OriginalDocuments"))
        this.OriginalDocumentsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionNewDocuments> _NewDocuments;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionNewDocuments> NewDocuments
    {
      get
      {
        if (this._NewDocuments == null)
        {
          this._NewDocuments = this.CreateNewDocumentsCollection();
          this.SetNewDocumentsEventHandlers();
        }
        return this._NewDocuments;
      }

      set
      {
        if (this._NewDocuments != null)
          this.UnsetChildCollectionEventHandlers(this._NewDocuments);

        this._NewDocuments = value;
        this.SetNewDocumentsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionNewDocuments> CreateNewDocumentsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionNewDocuments>() { RootEntity = this };
    }

    private void SetNewDocumentsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._NewDocuments, "NewDocuments");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._NewDocuments;
      changeNotifier.Added += this.NewDocumentsAddedHandler;
      changeNotifier.Deleted += this.NewDocumentsDeletedHandler;
      changeNotifier.Added += this.NewDocumentsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.NewDocumentsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.NewDocumentsCollectionUpdateEventHandler;
    }

    private void NewDocumentsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("NewDocuments"))
        this.NewDocumentsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionErrors> _Errors;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionErrors> Errors
    {
      get
      {
        if (this._Errors == null)
        {
          this._Errors = this.CreateErrorsCollection();
          this.SetErrorsEventHandlers();
        }
        return this._Errors;
      }

      set
      {
        if (this._Errors != null)
          this.UnsetChildCollectionEventHandlers(this._Errors);

        this._Errors = value;
        this.SetErrorsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionErrors> CreateErrorsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.SmartProcessing.IRepackingSessionErrors>() { RootEntity = this };
    }

    private void SetErrorsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Errors, "Errors");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Errors;
      changeNotifier.Added += this.ErrorsAddedHandler;
      changeNotifier.Deleted += this.ErrorsDeletedHandler;
      changeNotifier.Added += this.ErrorsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ErrorsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ErrorsCollectionUpdateEventHandler;
    }

    private void ErrorsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Errors"))
        this.ErrorsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.SmartProcessing.RepackingSessionCreatingFromServerHandler", new object[] { (global::Sungero.SmartProcessing.IRepackingSession)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.SmartProcessing.RepackingSessionCreatingFromServerHandler((global::Sungero.SmartProcessing.IRepackingSession)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void SessionIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.SessionId, this.SessionId, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).SessionIdChanged(args);
    }

    protected void AssignmentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.AssignmentId, this.AssignmentId, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).AssignmentIdChanged(args);
    }

    protected void OriginalDocumentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).OriginalDocumentsChanged(args);
    }

    protected void NewDocumentsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).NewDocumentsChanged(args);
    }

    protected void ErrorsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).ErrorsChanged(args);
    }

    protected void CloseDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.CloseDate, this.CloseDate, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).CloseDateChanged(args);
    }

    protected void ResultsAppliedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.ResultsApplied, this.ResultsApplied, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionSharedHandlers)this.SharedHandlers).ResultsAppliedChanged(args);
    }



    protected virtual global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers CreateOriginalDocumentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers CreateOriginalDocumentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void OriginalDocumentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("OriginalDocumentsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateOriginalDocumentsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.OriginalDocumentsAdded(args);
        }
      }
    }

    protected virtual void OriginalDocumentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("OriginalDocumentsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateOriginalDocumentsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.OriginalDocumentsDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers CreateNewDocumentsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers CreateNewDocumentsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void NewDocumentsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("NewDocumentsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateNewDocumentsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.NewDocumentsAdded(args);
        }
      }
    }

    protected virtual void NewDocumentsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionNewDocumentsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("NewDocumentsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateNewDocumentsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.NewDocumentsDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers CreateErrorsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers CreateErrorsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ErrorsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ErrorsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateErrorsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ErrorsAdded(args);
        }
      }
    }

    protected virtual void ErrorsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.RepackingSessionErrorsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ErrorsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateErrorsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ErrorsDeleted(args);
        }
      }
    }


    #endregion


    public RepackingSession()
    {
    }

  }
}

// ==================================================================
// RepackingSessionHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing
{

  public partial class RepackingSessionFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.SmartProcessing.IRepackingSession
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.SmartProcessing.IRepackingSessionFilterState Filter { get; private set; }

    private global::Sungero.SmartProcessing.IRepackingSessionFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public RepackingSessionFilteringServerHandler(global::Sungero.SmartProcessing.IRepackingSessionFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected RepackingSessionFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class RepackingSessionUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.SmartProcessing.IRepackingSession
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class RepackingSessionSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.SmartProcessing.Server.RepackingSessionSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.SmartProcessing.Server.RepackingSessionSearchDialogModel)this.Dialog;
       }
     }

     public RepackingSessionSearchDialogServerHandler(global::Sungero.SmartProcessing.Server.RepackingSessionSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class RepackingSessionServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.SmartProcessing.IRepackingSession _obj
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSession)this.Entity; }
    }

    public RepackingSessionServerHandlers(global::Sungero.SmartProcessing.IRepackingSession entity)
      : base(entity)
    {
    }
  }

  public partial class RepackingSessionCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.SmartProcessing.IRepackingSession _source
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSession)this.Source; }
    }

    private global::Sungero.SmartProcessing.IRepackingSessionInfo _info
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSessionInfo)this._Info; }
    }

    public RepackingSessionCreatingFromServerHandler(global::Sungero.SmartProcessing.IRepackingSession source, global::Sungero.SmartProcessing.IRepackingSessionInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// RepackingSessionEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// RepackingSessionAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class RepackingSessionAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.SmartProcessing.IRepackingSessionAccessRights
  {

    public RepackingSessionAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class RepackingSessionTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.SmartProcessing.IRepackingSessionAccessRights
  {

    public RepackingSessionTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// RepackingSessionRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
    public class RepackingSessionRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.SmartProcessing.IRepackingSessionRepositoryImplementer<T>
      where T : global::Sungero.SmartProcessing.IRepackingSession 
    {
       public new global::Sungero.SmartProcessing.IRepackingSessionAccessRights AccessRights
       {
          get { return (global::Sungero.SmartProcessing.IRepackingSessionAccessRights)base.AccessRights; }
       }

       public new global::Sungero.SmartProcessing.IRepackingSessionInfo Info
       {
          get { return (global::Sungero.SmartProcessing.IRepackingSessionInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.SmartProcessing.Server.RepackingSessionTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// RepackingSessionPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
}

// ==================================================================
// RepackingSessionServerFunctions.g.cs
// ==================================================================

namespace Sungero.SmartProcessing.Server
{
  public partial class RepackingSessionFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.SmartProcessing.IRepackingSession _obj
    {
      get { return (global::Sungero.SmartProcessing.IRepackingSession)this.Entity; }
    }

    public RepackingSessionFunctions(global::Sungero.SmartProcessing.IRepackingSession entity) : base(entity) { }
  }
}

// ==================================================================
// RepackingSessionFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Functions
{
  internal static class RepackingSession
  {
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String GetUrl(global::Sungero.SmartProcessing.IRepackingSession repackingSession)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetUrl", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::System.String GetClientUrl(global::Sungero.SmartProcessing.IRepackingSession repackingSession)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetClientUrl", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::System.String GetConfigSettingsWebHostPathBase(global::Sungero.SmartProcessing.IRepackingSession repackingSession)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetConfigSettingsWebHostPathBase", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void DeleteDocumentsAfterRepacking(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.Collections.Generic.List<global::System.Int64> deletedDocuments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeleteDocumentsAfterRepacking", new System.Type[] { typeof(global::System.Collections.Generic.List<global::System.Int64>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { deletedDocuments });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void ChangeDocumentsAfterRepacking(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.IChangedDocument> changedDocuments, global::System.Guid builderGuid)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentsAfterRepacking", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.IChangedDocument>), typeof(global::System.Guid) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changedDocuments, builderGuid });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void ReorderFactsHighlights(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.SmartProcessing.Structures.Module.IChangedDocument changedDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ReorderFactsHighlights", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.SmartProcessing.Structures.Module.IChangedDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, changedDocument });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void CreateNewDocumentsAfterRepacking(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.INewDocument> newDocuments, global::System.Guid builderGuid, global::Sungero.SmartProcessing.IVerificationTask task, global::System.Collections.Generic.List<global::System.Int64> documentsForDeletion)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateNewDocumentsAfterRepacking", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.INewDocument>), typeof(global::System.Guid), typeof(global::Sungero.SmartProcessing.IVerificationTask), typeof(global::System.Collections.Generic.List<global::System.Int64>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { newDocuments, builderGuid, task, documentsForDeletion });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::Sungero.Docflow.IOfficialDocument CreateNewDocumentAfterRepacking(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::Sungero.SmartProcessing.Structures.Module.INewDocument newDocument, global::Sungero.Docflow.IOfficialDocument leadingDocument, global::System.Guid builderGuid)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateNewDocumentAfterRepacking", new System.Type[] { typeof(global::Sungero.SmartProcessing.Structures.Module.INewDocument), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Guid) });
      return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { newDocument, leadingDocument, builderGuid });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::Sungero.Docflow.IOfficialDocument CreateDocumentByTypeGuid(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.String typeGuid)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateDocumentByTypeGuid", new System.Type[] { typeof(global::System.String) });
      return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { typeGuid });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::System.Boolean TrySaveDocument(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("TrySaveDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void BuildNewVersion(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.Guid builderGuid, global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.IRepackingPage> pages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("BuildNewVersion", new System.Type[] { typeof(global::System.Guid), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.Module.IRepackingPage>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { builderGuid, document, pages });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void AddNewErrorText(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddNewErrorText", new System.Type[] { typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { text });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void SaveSession(global::Sungero.SmartProcessing.IRepackingSession repackingSession)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SaveSession", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.RepackingSession.RepackingDocument> GetDocumentsWithVersions(global::Sungero.SmartProcessing.IRepackingSession repackingSession)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentsWithVersions", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.SmartProcessing.Structures.RepackingSession.RepackingDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.SmartProcessing.IRepackingSession GetActiveSessionByAssignmentId(global::System.Int64 assignmentId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.SmartProcessing.Server.RepackingSessionFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActiveSessionByAssignmentId",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::Sungero.SmartProcessing.IRepackingSession)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { assignmentId });
      }
      else
      {
        return global::Sungero.SmartProcessing.Server.RepackingSessionFunctions.GetActiveSessionByAssignmentId(assignmentId);
      }
    }
    /// <redirect project="Sungero.SmartProcessing.Server" type="Sungero.SmartProcessing.Server.RepackingSessionFunctions" />
    internal static  void RenameDocumentsAfterRepacking(global::Sungero.SmartProcessing.IRepackingSession repackingSession, global::Sungero.SmartProcessing.IVerificationTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)repackingSession).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RenameDocumentsAfterRepacking", new System.Type[] { typeof(global::Sungero.SmartProcessing.IVerificationTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }

  }
}

// ==================================================================
// RepackingSessionServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Server
{
  public class RepackingSessionServerPublicFunctions : global::Sungero.SmartProcessing.Server.IRepackingSessionServerPublicFunctions
  {
  }
}

// ==================================================================
// RepackingSessionQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Queries
{
  public class RepackingSession
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.SmartProcessing.Server.RepackingSession.RepackingSessionQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
