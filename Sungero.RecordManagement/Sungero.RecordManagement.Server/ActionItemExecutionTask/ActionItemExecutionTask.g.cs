
// ==================================================================
// ActionItemExecutionTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ActionItemExecutionTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.RecordManagement.IActionItemExecutionTask
    {
      protected new global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState Filter { get; private set; }

      private global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        global::System.Linq.IQueryable<T> result;
        var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskFilteringServerHandler`1");
        if (filterType != null)
        {
          var genericType = filterType.MakeGenericType(typeof(T));
          var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { this.filter });
          var methodInfo = genericType.GetMethod("Filtering");
          result = (global::System.Linq.IQueryable<T>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
        }
        else
        {
          result = new global::Sungero.RecordManagement.ActionItemExecutionTaskFilteringServerHandler<T>(this.filter).Filtering(query, args);
        }
        if (args.DisableCheckRights)
        global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public ActionItemExecutionTaskFilter(global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ActionItemExecutionTaskFilter()
      {
      }
    }
    public class ActionItemExecutionTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }


                  public virtual global::System.Boolean? HasIndefiniteDeadline { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Supervisor { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ActionItemExecutionTaskObserversModel Observers { get { return (ActionItemExecutionTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskCoAssigneesModel CoAssignees { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskActionItemPartsModel ActionItemParts { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskActionItemObserversModel ActionItemObservers { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskPartsCoAssigneesModel PartsCoAssignees { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskAddedAddendaModel AddedAddenda { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ActionItemExecutionTaskRemovedAddendaModel RemovedAddenda { get; protected set; }

        }

      public class ActionItemExecutionTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class ActionItemExecutionTaskCoAssigneesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ActionItemExecutionTaskActionItemPartsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ActionItemExecutionTaskActionItemObserversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ActionItemExecutionTaskPartsCoAssigneesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ActionItemExecutionTaskAddedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ActionItemExecutionTaskRemovedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class ActionItemExecutionTaskFilterForSupervisor<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskSupervisorPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("SupervisorFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskSupervisorPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).SupervisorFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskFilterForSupervisor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskSearchFilterForSupervisor<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskSupervisorSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("SupervisorSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskSupervisorSearchPropertyFilteringServerHandler<TQueryEntity>().SupervisorSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskSearchFilterForSupervisor(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskFilterForAssignedBy<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAssignedByPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AssignedByFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskAssignedByPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssignedByFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskFilterForAssignedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskSearchFilterForAssignedBy<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAssignedBySearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AssignedBySearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskAssignedBySearchPropertyFilteringServerHandler<TQueryEntity>().AssignedBySearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskSearchFilterForAssignedBy(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAssigneePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AssigneeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ActionItemExecutionTaskSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAssigneeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AssigneeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.ActionItemExecutionTaskAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ActionItemExecutionTaskSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFilter<global::Sungero.RecordManagement.IActionItemExecutionTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFilterForSupervisor<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemExecutionTask>), "Supervisor")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchFilterForSupervisor<global::Sungero.CoreEntities.IRecipient>), "Supervisor")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFilterForAssignedBy<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemExecutionTask>), "AssignedBy")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchFilterForAssignedBy<global::Sungero.CoreEntities.IRecipient>), "AssignedBy")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IActionItemExecutionTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]


  public class ActionItemExecutionTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.RecordManagement.IActionItemExecutionTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c290b098-12c7-487d-bb38-73e2c98f9789");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IActionItemExecutionTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskState State
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskState(this);
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskInfo Info
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights AccessRights
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskSharedHandlers(this);
    }

    private global::System.DateTime? _Deadline;
    public virtual global::System.DateTime? Deadline
    {
      get
      {
        return this._Deadline;
      }

      set
      {
        this.SetPropertyValue("Deadline", this._Deadline, value, (propertyValue) => { this._Deadline = propertyValue; }, this.DeadlineChangedHandler);
      }
    }
    private global::System.Boolean? _IsCompoundActionItem;
    public virtual global::System.Boolean? IsCompoundActionItem
    {
      get
      {
        return this._IsCompoundActionItem;
      }

      set
      {
        this.SetPropertyValue("IsCompoundActionItem", this._IsCompoundActionItem, value, (propertyValue) => { this._IsCompoundActionItem = propertyValue; }, this.IsCompoundActionItemChangedHandler);
      }
    }
    private global::System.String _ActionItem;
    public virtual global::System.String ActionItem
    {
      get
      {
        return this._ActionItem;
      }

      set
      {
        this.SetPropertyValue("ActionItem", this._ActionItem, value, (propertyValue) => { this._ActionItem = propertyValue; }, this.ActionItemChangedHandler);
      }
    }
    private global::System.DateTime? _ActualDate;
    public virtual global::System.DateTime? ActualDate
    {
      get
      {
        return this._ActualDate;
      }

      set
      {
        this.SetPropertyValue("ActualDate", this._ActualDate, value, (propertyValue) => { this._ActualDate = propertyValue; }, this.ActualDateChangedHandler);
      }
    }
    private global::System.Boolean? _IsUnderControl;
    public virtual global::System.Boolean? IsUnderControl
    {
      get
      {
        return this._IsUnderControl;
      }

      set
      {
        this.SetPropertyValue("IsUnderControl", this._IsUnderControl, value, (propertyValue) => { this._IsUnderControl = propertyValue; }, this.IsUnderControlChangedHandler);
      }
    }
    private global::System.Boolean? _IsDraftResolution;
    public virtual global::System.Boolean? IsDraftResolution
    {
      get
      {
        return this._IsDraftResolution;
      }

      set
      {
        this.SetPropertyValue("IsDraftResolution", this._IsDraftResolution, value, (propertyValue) => { this._IsDraftResolution = propertyValue; }, this.IsDraftResolutionChangedHandler);
      }
    }
    private global::System.DateTime? _FinalDeadline;
    public virtual global::System.DateTime? FinalDeadline
    {
      get
      {
        return this._FinalDeadline;
      }

      set
      {
        this.SetPropertyValue("FinalDeadline", this._FinalDeadline, value, (propertyValue) => { this._FinalDeadline = propertyValue; }, this.FinalDeadlineChangedHandler);
      }
    }
    private global::System.Boolean? _IsAutoExec;
    public virtual global::System.Boolean? IsAutoExec
    {
      get
      {
        return this._IsAutoExec;
      }

      set
      {
        this.SetPropertyValue("IsAutoExec", this._IsAutoExec, value, (propertyValue) => { this._IsAutoExec = propertyValue; }, this.IsAutoExecChangedHandler);
      }
    }
    private global::System.Boolean? _OnEdit;
    public virtual global::System.Boolean? OnEdit
    {
      get
      {
        return this._OnEdit;
      }

      set
      {
        this.SetPropertyValue("OnEdit", this._OnEdit, value, (propertyValue) => { this._OnEdit = propertyValue; }, this.OnEditChangedHandler);
      }
    }
    private global::System.DateTime? _CoAssigneesDeadline;
    public virtual global::System.DateTime? CoAssigneesDeadline
    {
      get
      {
        return this._CoAssigneesDeadline;
      }

      set
      {
        this.SetPropertyValue("CoAssigneesDeadline", this._CoAssigneesDeadline, value, (propertyValue) => { this._CoAssigneesDeadline = propertyValue; }, this.CoAssigneesDeadlineChangedHandler);
      }
    }
    private global::System.Boolean? _HasIndefiniteDeadline;
    public virtual global::System.Boolean? HasIndefiniteDeadline
    {
      get
      {
        return this._HasIndefiniteDeadline;
      }

      set
      {
        this.SetPropertyValue("HasIndefiniteDeadline", this._HasIndefiniteDeadline, value, (propertyValue) => { this._HasIndefiniteDeadline = propertyValue; }, this.HasIndefiniteDeadlineChangedHandler);
      }
    }
    private global::System.String _OnEditGuid;
    public virtual global::System.String OnEditGuid
    {
      get
      {
        return this._OnEditGuid;
      }

      set
      {
        this.SetPropertyValue("OnEditGuid", this._OnEditGuid, value, (propertyValue) => { this._OnEditGuid = propertyValue; }, this.OnEditGuidChangedHandler);
      }
    }
    private global::System.Boolean? _WaitForParentAssignment;
    public virtual global::System.Boolean? WaitForParentAssignment
    {
      get
      {
        return this._WaitForParentAssignment;
      }

      set
      {
        this.SetPropertyValue("WaitForParentAssignment", this._WaitForParentAssignment, value, (propertyValue) => { this._WaitForParentAssignment = propertyValue; }, this.WaitForParentAssignmentChangedHandler);
      }
    }



    private global::System.String _AbortingReason;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String AbortingReason
    {
      get
      {
        return this._AbortingReason;
      }

      set
      {
        this.SetPropertyValue("AbortingReason", this._AbortingReason, value, (propertyValue) => { this._AbortingReason = propertyValue; }, this.AbortingReasonChangedHandler);
      }
    }
    private global::System.String _Report;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Report
    {
      get
      {
        return this._Report;
      }

      set
      {
        this.SetPropertyValue("Report", this._Report, value, (propertyValue) => { this._Report = propertyValue; }, this.ReportChangedHandler);
      }
    }
    private global::System.String _ReportNote;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ReportNote
    {
      get
      {
        return this._ReportNote;
      }

      set
      {
        this.SetPropertyValue("ReportNote", this._ReportNote, value, (propertyValue) => { this._ReportNote = propertyValue; }, this.ReportNoteChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _ExecutionStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.RecordManagement.ActionItemExecutionTask.ExecutionState),
      typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTask),
      "ExecutionState");

    public static global::Sungero.Domain.Shared.EnumerationItems ExecutionStateItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTask._ExecutionStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ExecutionStateAllowedItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTask.ExecutionStateItems; }
    }

    private global::Sungero.Core.Enumeration? _ExecutionState;

    public virtual global::Sungero.Core.Enumeration? ExecutionState
    {
      get { return this._ExecutionState; }
      set { this.SetEnumPropertyValue("ExecutionState", this._ExecutionState, value, (propertyValue) => { this._ExecutionState = propertyValue; }, this.ExecutionStateChangedHandler, this.ExecutionStateAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ActionItemTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.RecordManagement.ActionItemExecutionTask.ActionItemType),
      typeof(global::Sungero.RecordManagement.Server.ActionItemExecutionTask),
      "ActionItemType");

    public static global::Sungero.Domain.Shared.EnumerationItems ActionItemTypeItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTask._ActionItemTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ActionItemTypeAllowedItems
    {
      get { return global::Sungero.RecordManagement.Server.ActionItemExecutionTask.ActionItemTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _ActionItemType;

    public virtual global::Sungero.Core.Enumeration? ActionItemType
    {
      get { return this._ActionItemType; }
      set { this.SetEnumPropertyValue("ActionItemType", this._ActionItemType, value, (propertyValue) => { this._ActionItemType = propertyValue; }, this.ActionItemTypeChangedHandler, this.ActionItemTypeAllowedItems); }
    }


    private global::Sungero.Company.IEmployee _Supervisor;
    public virtual global::Sungero.Company.IEmployee Supervisor
    {
      get
      {
        return this._Supervisor;
      }

      set
      {
        this.SetPropertyValue("Supervisor", this._Supervisor, value, (propertyValue) => { this._Supervisor = propertyValue; }, this.SupervisorChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _AssignedBy;
    public virtual global::Sungero.Company.IEmployee AssignedBy
    {
      get
      {
        return this._AssignedBy;
      }

      set
      {
        this.SetPropertyValue("AssignedBy", this._AssignedBy, value, (propertyValue) => { this._AssignedBy = propertyValue; }, this.AssignedByChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees> _CoAssignees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees> CoAssignees
    {
      get
      {
        if (this._CoAssignees == null)
        {
          this._CoAssignees = this.CreateCoAssigneesCollection();
          this.SetCoAssigneesEventHandlers();
        }
        return this._CoAssignees;
      }

      set
      {
        if (this._CoAssignees != null)
          this.UnsetChildCollectionEventHandlers(this._CoAssignees);

        this._CoAssignees = value;
        this.SetCoAssigneesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees> CreateCoAssigneesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskCoAssignees>() { RootEntity = this };
    }

    private void SetCoAssigneesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._CoAssignees, "CoAssignees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._CoAssignees;
      changeNotifier.Added += this.CoAssigneesAddedHandler;
      changeNotifier.Deleted += this.CoAssigneesDeletedHandler;
      changeNotifier.Added += this.CoAssigneesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.CoAssigneesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.CoAssigneesCollectionUpdateEventHandler;
    }

    private void CoAssigneesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("CoAssignees"))
        this.CoAssigneesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> _ActionItemParts;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> ActionItemParts
    {
      get
      {
        if (this._ActionItemParts == null)
        {
          this._ActionItemParts = this.CreateActionItemPartsCollection();
          this.SetActionItemPartsEventHandlers();
        }
        return this._ActionItemParts;
      }

      set
      {
        if (this._ActionItemParts != null)
          this.UnsetChildCollectionEventHandlers(this._ActionItemParts);

        this._ActionItemParts = value;
        this.SetActionItemPartsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> CreateActionItemPartsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts>() { RootEntity = this };
    }

    private void SetActionItemPartsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ActionItemParts, "ActionItemParts");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ActionItemParts;
      changeNotifier.Added += this.ActionItemPartsAddedHandler;
      changeNotifier.Deleted += this.ActionItemPartsDeletedHandler;
      changeNotifier.Added += this.ActionItemPartsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ActionItemPartsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ActionItemPartsCollectionUpdateEventHandler;
    }

    private void ActionItemPartsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ActionItemParts"))
        this.ActionItemPartsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers> _ActionItemObservers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers> ActionItemObservers
    {
      get
      {
        if (this._ActionItemObservers == null)
        {
          this._ActionItemObservers = this.CreateActionItemObserversCollection();
          this.SetActionItemObserversEventHandlers();
        }
        return this._ActionItemObservers;
      }

      set
      {
        if (this._ActionItemObservers != null)
          this.UnsetChildCollectionEventHandlers(this._ActionItemObservers);

        this._ActionItemObservers = value;
        this.SetActionItemObserversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers> CreateActionItemObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemObservers>() { RootEntity = this };
    }

    private void SetActionItemObserversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ActionItemObservers, "ActionItemObservers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ActionItemObservers;
      changeNotifier.Added += this.ActionItemObserversAddedHandler;
      changeNotifier.Deleted += this.ActionItemObserversDeletedHandler;
      changeNotifier.Added += this.ActionItemObserversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ActionItemObserversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ActionItemObserversCollectionUpdateEventHandler;
    }

    private void ActionItemObserversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ActionItemObservers"))
        this.ActionItemObserversChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees> _PartsCoAssignees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees> PartsCoAssignees
    {
      get
      {
        if (this._PartsCoAssignees == null)
        {
          this._PartsCoAssignees = this.CreatePartsCoAssigneesCollection();
          this.SetPartsCoAssigneesEventHandlers();
        }
        return this._PartsCoAssignees;
      }

      set
      {
        if (this._PartsCoAssignees != null)
          this.UnsetChildCollectionEventHandlers(this._PartsCoAssignees);

        this._PartsCoAssignees = value;
        this.SetPartsCoAssigneesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees> CreatePartsCoAssigneesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskPartsCoAssignees>() { RootEntity = this };
    }

    private void SetPartsCoAssigneesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._PartsCoAssignees, "PartsCoAssignees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._PartsCoAssignees;
      changeNotifier.Added += this.PartsCoAssigneesAddedHandler;
      changeNotifier.Deleted += this.PartsCoAssigneesDeletedHandler;
      changeNotifier.Added += this.PartsCoAssigneesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.PartsCoAssigneesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.PartsCoAssigneesCollectionUpdateEventHandler;
    }

    private void PartsCoAssigneesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("PartsCoAssignees"))
        this.PartsCoAssigneesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskAddedAddenda> _AddedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskAddedAddenda> AddedAddenda
    {
      get
      {
        if (this._AddedAddenda == null)
        {
          this._AddedAddenda = this.CreateAddedAddendaCollection();
          this.SetAddedAddendaEventHandlers();
        }
        return this._AddedAddenda;
      }

      set
      {
        if (this._AddedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._AddedAddenda);

        this._AddedAddenda = value;
        this.SetAddedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskAddedAddenda> CreateAddedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskAddedAddenda>() { RootEntity = this };
    }

    private void SetAddedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddedAddenda, "AddedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddedAddenda;
      changeNotifier.Added += this.AddedAddendaAddedHandler;
      changeNotifier.Deleted += this.AddedAddendaDeletedHandler;
      changeNotifier.Added += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddedAddendaCollectionUpdateEventHandler;
    }

    private void AddedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddedAddenda"))
        this.AddedAddendaChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskRemovedAddenda> _RemovedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskRemovedAddenda> RemovedAddenda
    {
      get
      {
        if (this._RemovedAddenda == null)
        {
          this._RemovedAddenda = this.CreateRemovedAddendaCollection();
          this.SetRemovedAddendaEventHandlers();
        }
        return this._RemovedAddenda;
      }

      set
      {
        if (this._RemovedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._RemovedAddenda);

        this._RemovedAddenda = value;
        this.SetRemovedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskRemovedAddenda> CreateRemovedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskRemovedAddenda>() { RootEntity = this };
    }

    private void SetRemovedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._RemovedAddenda, "RemovedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._RemovedAddenda;
      changeNotifier.Added += this.RemovedAddendaAddedHandler;
      changeNotifier.Deleted += this.RemovedAddendaDeletedHandler;
      changeNotifier.Added += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RemovedAddendaCollectionUpdateEventHandler;
    }

    private void RemovedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("RemovedAddenda"))
        this.RemovedAddendaChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IActionItemExecutionTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.RecordManagement.ActionItemExecutionTaskCreatingFromServerHandler", new object[] { (global::Sungero.RecordManagement.IActionItemExecutionTask)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCreatingFromServerHandler((global::Sungero.RecordManagement.IActionItemExecutionTask)entitySource, this.Info);
    }

    #region Framework events

    protected void DeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Deadline, this.Deadline, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DeadlineChanged(args);
    }

    protected void SupervisorChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskSupervisorChangedEventArgs(this.State.Properties.Supervisor, this.Supervisor, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).SupervisorChanged(args);
    }

    protected void IsCompoundActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsCompoundActionItem, this.IsCompoundActionItem, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsCompoundActionItemChanged(args);
    }

    protected void CoAssigneesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).CoAssigneesChanged(args);
    }

    protected void ActionItemPartsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemPartsChanged(args);
    }

    protected void ActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ActionItem, this.ActionItem, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemChanged(args);
    }

    protected void AssignedByChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAssignedByChangedEventArgs(this.State.Properties.AssignedBy, this.AssignedBy, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AssignedByChanged(args);
    }

    protected void AbortingReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.AbortingReason, this.AbortingReason, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AbortingReasonChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void ExecutionStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ExecutionState, this.ExecutionState, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ExecutionStateChanged(args);
    }

    protected void ReportChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Report, this.Report, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ReportChanged(args);
    }

    protected void ActualDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ActualDate, this.ActualDate, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActualDateChanged(args);
    }

    protected void ReportNoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ReportNote, this.ReportNote, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ReportNoteChanged(args);
    }

    protected void IsUnderControlChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsUnderControl, this.IsUnderControl, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsUnderControlChanged(args);
    }

    protected void ActionItemTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ActionItemType, this.ActionItemType, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemTypeChanged(args);
    }

    protected void ActionItemObserversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ActionItemObserversChanged(args);
    }

    protected void IsDraftResolutionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsDraftResolution, this.IsDraftResolution, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsDraftResolutionChanged(args);
    }

    protected void FinalDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.FinalDeadline, this.FinalDeadline, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).FinalDeadlineChanged(args);
    }

    protected void IsAutoExecChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsAutoExec, this.IsAutoExec, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).IsAutoExecChanged(args);
    }

    protected void OnEditChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.OnEdit, this.OnEdit, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OnEditChanged(args);
    }

    protected void CoAssigneesDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.CoAssigneesDeadline, this.CoAssigneesDeadline, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).CoAssigneesDeadlineChanged(args);
    }

    protected void PartsCoAssigneesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).PartsCoAssigneesChanged(args);
    }

    protected void HasIndefiniteDeadlineChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.HasIndefiniteDeadline, this.HasIndefiniteDeadline, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).HasIndefiniteDeadlineChanged(args);
    }

    protected void OnEditGuidChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OnEditGuid, this.OnEditGuid, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OnEditGuidChanged(args);
    }

    protected void WaitForParentAssignmentChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.WaitForParentAssignment, this.WaitForParentAssignment, this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).WaitForParentAssignmentChanged(args);
    }

    protected void AddedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddedAddendaChanged(args);
    }

    protected void RemovedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).RemovedAddendaChanged(args);
    }




    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers CreateCoAssigneesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers CreateCoAssigneesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void CoAssigneesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("CoAssigneesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateCoAssigneesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.CoAssigneesAdded(args);
        }
      }
    }

    protected virtual void CoAssigneesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskCoAssigneesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("CoAssigneesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateCoAssigneesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.CoAssigneesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers CreateActionItemPartsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers CreateActionItemPartsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ActionItemPartsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ActionItemPartsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateActionItemPartsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ActionItemPartsAdded(args);
        }
      }
    }

    protected virtual void ActionItemPartsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskActionItemPartsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ActionItemPartsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateActionItemPartsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ActionItemPartsDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers CreateActionItemObserversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers CreateActionItemObserversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ActionItemObserversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ActionItemObserversAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateActionItemObserversAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ActionItemObserversAdded(args);
        }
      }
    }

    protected virtual void ActionItemObserversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskActionItemObserversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ActionItemObserversDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateActionItemObserversDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ActionItemObserversDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers CreatePartsCoAssigneesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers CreatePartsCoAssigneesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void PartsCoAssigneesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("PartsCoAssigneesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreatePartsCoAssigneesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.PartsCoAssigneesAdded(args);
        }
      }
    }

    protected virtual void PartsCoAssigneesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskPartsCoAssigneesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("PartsCoAssigneesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreatePartsCoAssigneesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.PartsCoAssigneesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddedAddendaAdded(args);
        }
      }
    }

    protected virtual void AddedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddedAddendaDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RemovedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RemovedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RemovedAddendaAdded(args);
        }
      }
    }

    protected virtual void RemovedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.ActionItemExecutionTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RemovedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RemovedAddendaDeleted(args);
        }
      }
    }


    #endregion


    public ActionItemExecutionTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskDocumentsGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTaskResultGroupAttachments ResultGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskResultGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResultGroup")
      {
        ((global::Sungero.RecordManagement.IActionItemExecutionTaskSharedHandlers)this.SharedHandlers).ResultGroupDeleted(e);
        return;
      }

    }
    #endregion

    #region Workflow blocks

    public new virtual global::Sungero.RecordManagement.IActionItemExecutionTaskBlocksInfo Blocks
    {
      get
      {
        return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocksInfo(this);
      }
    }

    #endregion

  }
}

// ==================================================================
// ActionItemExecutionTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class ActionItemExecutionTaskSupervisorPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> SupervisorFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskSupervisorPropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTask entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemExecutionTaskSupervisorSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> SupervisorSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskSupervisorSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ActionItemExecutionTaskAssignedByPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Entity; }
    }

    public ActionItemExecutionTaskAssignedByPropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTask entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemExecutionTaskAssignedBySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssignedBySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskAssignedBySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ActionItemExecutionTaskAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AssigneeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskAssigneePropertyFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTask entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemExecutionTaskAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ActionItemExecutionTaskAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ActionItemExecutionTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.RecordManagement.IActionItemExecutionTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ActionItemExecutionTaskFilteringServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ActionItemExecutionTaskFilteringServerHandler()
    {
    }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IEmployee> AuthorFiltering(global::System.Linq.IQueryable<Sungero.Company.IEmployee> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IEmployee> AssigneeFiltering(global::System.Linq.IQueryable<Sungero.Company.IEmployee> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }

      public virtual global::System.Linq.IQueryable<Sungero.Company.IEmployee> SupervisorFiltering(global::System.Linq.IQueryable<Sungero.Company.IEmployee> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }


  }

  public partial class ActionItemExecutionTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchDialogModel)this.Dialog;
       }
     }

     public ActionItemExecutionTaskSearchDialogServerHandler(global::Sungero.RecordManagement.Server.ActionItemExecutionTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ActionItemExecutionTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Entity; }
    }

    public ActionItemExecutionTaskServerHandlers(global::Sungero.RecordManagement.IActionItemExecutionTask entity)
      : base(entity)
    {
    }
  }

  public partial class ActionItemExecutionTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _source
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Source; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTaskInfo _info
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskInfo)this._Info; }
    }

    public ActionItemExecutionTaskCreatingFromServerHandler(global::Sungero.RecordManagement.IActionItemExecutionTask source, global::Sungero.RecordManagement.IActionItemExecutionTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ActionItemExecutionTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// ActionItemExecutionTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.RecordManagement.IActionItemExecutionTaskAccessRights
  {

    public ActionItemExecutionTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ActionItemExecutionTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.RecordManagement.IActionItemExecutionTaskAccessRights
  {

    public ActionItemExecutionTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ActionItemExecutionTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ActionItemExecutionTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IActionItemExecutionTaskRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IActionItemExecutionTask 
    {
       public new global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IActionItemExecutionTaskInfo Info
       {
          get { return (global::Sungero.RecordManagement.IActionItemExecutionTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ActionItemExecutionTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class ActionItemExecutionTaskAuthorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.RecordManagement.IActionItemExecutionTask
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
        var typedState = (global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState)this.State;
        var handlers = new global::Sungero.RecordManagement.ActionItemExecutionTaskFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.AuthorFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.RecordManagement.IActionItemExecutionTask>(query);
      }
    }

    public class ActionItemExecutionTaskAssigneePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.RecordManagement.IActionItemExecutionTask
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
        var typedState = (global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState)this.State;
        var handlers = new global::Sungero.RecordManagement.ActionItemExecutionTaskFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.AssigneeFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.RecordManagement.IActionItemExecutionTask>(query);
      }
    }

    public class ActionItemExecutionTaskSupervisorPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.RecordManagement.IActionItemExecutionTask
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
        var typedState = (global::Sungero.RecordManagement.IActionItemExecutionTaskFilterState)this.State;
        var handlers = new global::Sungero.RecordManagement.ActionItemExecutionTaskFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.SupervisorFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.RecordManagement.IActionItemExecutionTask>(query);
      }
    }

}

// ==================================================================
// ActionItemExecutionTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Server
{
  public partial class ActionItemExecutionTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Entity; }
    }

    public ActionItemExecutionTaskFunctions(global::Sungero.RecordManagement.IActionItemExecutionTask entity) : base(entity) { }
  }
}

// ==================================================================
// ActionItemExecutionTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class ActionItemExecutionTask
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetStateViewXml(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateViewXml", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionTask GetMainActionItemExecutionTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetMainActionItemExecutionTask", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemExecutionTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetDraftActionItemExecutionTaskStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel, global::Sungero.Company.IEmployee draftAssignee, global::Sungero.Company.IEmployee draftSupervisor, global::System.String draftActionItem, global::System.Nullable<global::System.DateTime> draftDeadline, global::System.Nullable<global::System.Int32> draftNumber, global::System.Boolean additional, global::System.Boolean skipResolutionBlock, global::System.Boolean withHighlight)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDraftActionItemExecutionTaskStateView", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel), typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Company.IEmployee), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stateViewModel, draftAssignee, draftSupervisor, draftActionItem, draftDeadline, draftNumber, additional, skipResolutionBlock, withHighlight });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetActionItemExecutionTaskStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask openedTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel, global::System.Nullable<global::System.Int32> draftNumber, global::System.Boolean skipResolutionBlock, global::System.Boolean withHighlight)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemExecutionTaskStateView", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel), typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { openedTask, stateViewModel, draftNumber, skipResolutionBlock, withHighlight });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddPerformerLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block, global::Sungero.Company.IEmployee assignee, Sungero.Core.StateBlockLabelStyle style)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddPerformerLabel", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Core.StateBlockLabelStyle) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, assignee, style });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddDeadlineLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block, global::System.Nullable<global::System.DateTime> deadline, Sungero.Core.StateBlockLabelStyle style)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddDeadlineLabel", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::System.Nullable<global::System.DateTime>), typeof(Sungero.Core.StateBlockLabelStyle) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, deadline, style });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddFinalDeadlineLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block, global::System.Nullable<global::System.DateTime> deadline, Sungero.Core.StateBlockLabelStyle style)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddFinalDeadlineLabel", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::System.Nullable<global::System.DateTime>), typeof(Sungero.Core.StateBlockLabelStyle) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, deadline, style });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddSupervisorLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block, global::Sungero.Company.IEmployee supervisor, Sungero.Core.StateBlockLabelStyle style, global::System.Boolean underControl)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddSupervisorLabel", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Company.IEmployee), typeof(Sungero.Core.StateBlockLabelStyle), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, supervisor, style, underControl });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddSeparatorLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddSeparatorLabel", new System.Type[] { typeof(Sungero.Core.StateBlock) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddActionItemTextLabel(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.StateBlock block, global::System.String actionItem, Sungero.Core.StateBlockLabelStyle style)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddActionItemTextLabel", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::System.String), typeof(Sungero.Core.StateBlockLabelStyle) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, actionItem, style });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel GetAllActionItems(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel model)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAllActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel) }, null);
        return (global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { model });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetAllActionItems(model);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetStatusInfo(global::Sungero.RecordManagement.IActionItemExecutionTask task, System.Collections.Generic.Dictionary<global::System.Nullable<global::Sungero.Core.Enumeration>, global::System.String> statusesCache)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStatusInfo",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(System.Collections.Generic.Dictionary<global::System.Nullable<global::Sungero.Core.Enumeration>, global::System.String>) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, statusesCache });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetStatusInfo(task, statusesCache);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetHeader(global::Sungero.RecordManagement.IActionItemExecutionTask task, global::System.Boolean additional, global::System.Boolean component, global::System.Boolean hasCoAssignees, global::System.Boolean isCompound, global::Sungero.RecordManagement.IActionItemExecutionTask openedTask, global::System.Nullable<global::System.Int32> number)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetHeader",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.Nullable<global::System.Int32>) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, additional, component, hasCoAssignees, isCompound, openedTask, number });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetHeader(task, additional, component, hasCoAssignees, isCompound, openedTask, number);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask task, global::System.Boolean isCompound)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDeadline",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.Boolean) }, null);
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, isCompound });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetDeadline(task, isCompound);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetReportInfo(global::Sungero.RecordManagement.IActionItemExecutionTask task, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetReportInfo",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignments });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetReportInfo(task, assignments);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddAssignmentTasks(Sungero.Core.StateBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.IActionItemExecutionTask openedTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddAssignmentTasks",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { block, task, openedTask, stateViewModel });
      }
      else
      {
    global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.AddAssignmentTasks(block, task, openedTask, stateViewModel);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddComponentSubTasks(Sungero.Core.StateBlock stateBlock, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.IActionItemExecutionTask openedTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddComponentSubTasks",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { stateBlock, task, openedTask, stateViewModel });
      }
      else
      {
    global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.AddComponentSubTasks(stateBlock, task, openedTask, stateViewModel);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  Sungero.Core.StateBlock AddReviewBlock(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Core.StateView stateView, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> tasks, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddReviewBlock", new System.Type[] { typeof(global::Sungero.Core.StateView), typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) });
      return (Sungero.Core.StateBlock)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stateView, tasks, assignments });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddActionItemInfo(Sungero.Core.StateBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask actionItem, global::System.String author)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddActionItemInfo",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::System.String) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { block, actionItem, author });
      }
      else
      {
    global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.AddActionItemInfo(block, actionItem, author);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void ChangeSimpleActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeSimpleActionItem", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void ChangeCompoundActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCompoundActionItem", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckActionItemEditBeforeDialog(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemEditBeforeDialog", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckActionItemPartEditBeforeDialog(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItemPartExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemPartEditBeforeDialog", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPartExecutionTask });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckActionItemPartEditInDialog(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItemPartExecutionTask, global::Sungero.Company.IEmployee newAssignee, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> dialogOpenDate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemPartEditInDialog", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPartExecutionTask, newAssignee, deadline, dialogOpenDate });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckActionItemPartEdit(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask actionItemPartExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemPartEdit", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPartExecutionTask });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckActionItemEditInDialog(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee newAssignee, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> dialogOpenDate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemEditInDialog", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { newAssignee, deadline, dialogOpenDate });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String CheckCompoundActionItemEditInDialog(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> actionItemPartTasks, global::Sungero.Company.IEmployee newSupervisor, global::Sungero.Company.IEmployee newAssignee, global::System.Nullable<global::System.DateTime> deadline, global::System.Nullable<global::System.DateTime> dialogOpenDate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckCompoundActionItemEditInDialog", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>), typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPartTasks, newSupervisor, newAssignee, deadline, dialogOpenDate });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String CheckActionItemInProcess(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemInProcess", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean CheckActionItemOnControl(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemOnControl", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String CheckActionItemNotLocked(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemNotLocked", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean CheckArioTasksStatus(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckArioTasksStatus", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetActionItemChangeDeadlinesParams(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetActionItemChangeDeadlinesParams", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void SetActionItemChangeDeadlinesParams(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Boolean needChangeDeadlines, global::System.Boolean needChangeOnlyDeadlines)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetActionItemChangeDeadlinesParams", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needChangeDeadlines, needChangeOnlyDeadlines });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetActionItemChangeDeadlineHistoryText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, System.Collections.Generic.Dictionary<global::System.String, System.Object> actionItemParams)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemChangeDeadlineHistoryText", new System.Type[] { typeof(System.Collections.Generic.Dictionary<global::System.String, System.Object>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemParams });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void UpdateSimpleActionItemTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateSimpleActionItemTask", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void UpdateCompoundActionItemTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateCompoundActionItemTask", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void UpdateActionItemPartTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateActionItemPartTask", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeCoAssigneeDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Nullable<global::System.DateTime> oldTaskDeadline)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCoAssigneeDeadline", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::System.Nullable<global::System.DateTime>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes, oldTaskDeadline });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeAssigneeDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeAssigneeDeadline", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetCoAssigneeDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Nullable<global::System.DateTime> oldTaskDeadline)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCoAssigneeDeadline", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes, oldTaskDeadline });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeSupervisor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeSupervisor", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCoAssigneesDeadline", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void DeleteCoAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeleteCoAssignees", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddNewCoAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddNewCoAssignees", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortDeletedCoAssigneeTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortDeletedCoAssigneeTasks", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortDeadlineExtensionTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortDeadlineExtensionTasks", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksToOldCoAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksToOldCoAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void SendActionItemChangeNotifications(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendActionItemChangeNotifications", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes, addressees });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetActionItemChangeNotificationAddressees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::System.Boolean oldExecutionAssignmentInProcess)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemChangeNotificationAddressees", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::System.Boolean) });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes, oldExecutionAssignmentInProcess });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetCompoundActionItemChangeNotificationAddressees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCompoundActionItemChangeNotificationAddressees", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetActionItemChangeNotificationText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemChangeNotificationText", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GenerateChangedDeadlineText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Nullable<global::System.DateTime> oldDeadline, global::System.Nullable<global::System.DateTime> newDeadline, global::System.Boolean isCoAssigneeDeadline)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GenerateChangedDeadlineText", new System.Type[] { typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Boolean) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { oldDeadline, newDeadline, isCoAssigneeDeadline });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeExecutionAssignmentDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Nullable<global::System.DateTime> deadline, global::Sungero.Workflow.IAssignment executionAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeExecutionAssignmentDeadline", new System.Type[] { typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { deadline, executionAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ForwardChangedAssignments(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::Sungero.Workflow.IAssignment oldExecutionAssignment, global::Sungero.Workflow.IAssignment oldSupervisorAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ForwardChangedAssignments", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes, oldExecutionAssignment, oldSupervisorAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ForwardAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Workflow.IAssignment assignment, global::Sungero.CoreEntities.IUser performer)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ForwardAssignment", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.CoreEntities.IUser) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, performer });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ForwardAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Workflow.IAssignment assignment, global::Sungero.CoreEntities.IUser performer, global::System.Nullable<global::System.DateTime> deadline)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ForwardAssignment", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Nullable<global::System.DateTime>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, performer, deadline });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ChangeCoAssigneesActionItemsTree(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCoAssigneesActionItemsTree", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortActionItemExecutionAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortActionItemExecutionAssignment", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortActionItemSupervisorAssignments(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortActionItemSupervisorAssignments", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Linq.IQueryable<global::Sungero.RecordManagement.IStatusReportRequestTask> reportRequestTasks)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasks", new System.Type[] { typeof(global::System.Linq.IQueryable<global::Sungero.RecordManagement.IStatusReportRequestTask>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { reportRequestTasks });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes, global::Sungero.Workflow.IAssignment oldExecutionAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasks", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges), typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes, oldExecutionAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksFromOldAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment oldExecutionAssignment, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksFromOldAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment), typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { oldExecutionAssignment, changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksToOldActionItemPartAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksToOldActionItemPartAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksToSubActionItemAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksToSubActionItemAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksFromOldSupervisor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee oldSupervisor)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksFromOldSupervisor", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { oldSupervisor });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksFromOldCompoundActionItemSupervisors(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> oldSupervisors)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksFromOldCompoundActionItemSupervisors", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { oldSupervisors });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksCreatedFromTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksCreatedFromTask", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksCreatedFromTaskByAuthor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.Company.IEmployee author)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksCreatedFromTaskByAuthor", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, author });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksCreatedFromAssignmentByAuthor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment, global::Sungero.Company.IEmployee author)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksCreatedFromAssignmentByAuthor", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, author });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksCreatedFromTaskToAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.Company.IEmployee assignee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksCreatedFromTaskToAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, assignee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AbortReportRequestTasksCreatedFromAssignmentToAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment, global::Sungero.Company.IEmployee assignee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortReportRequestTasksCreatedFromAssignmentToAssignee", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, assignee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void RestartDeadlineExtensionTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee actualSupervisor)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestartDeadlineExtensionTasks", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actualSupervisor });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean AssignmentsCreated(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AssignmentsCreated", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void CreateActionItemExecutionTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateActionItemExecutionTask", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ApplyActionItemLockIndependentChanges(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ApplyActionItemLockIndependentChanges", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ApplyActionItemLockDependentChanges(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges changes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ApplyActionItemLockDependentChanges", new System.Type[] { typeof(global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { changes });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean AreAssignmentsCreated(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AreAssignmentsCreated", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetSubActionItemExecutions(global::Sungero.RecordManagement.IActionItemExecutionAssignment entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetSubActionItemExecutions",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetSubActionItemExecutions(entity);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSubActionItems(global::Sungero.Workflow.IAssignment assignment)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HasSubActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { assignment });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.HasSubActionItems(assignment);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HasSubActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.HasSubActionItems(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HasSubActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, status });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.HasSubActionItems(task, status);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSubActionItems(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HasSubActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, status, addressee });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.HasSubActionItems(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionAssignment> GetActionItems(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItems",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItems(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionAssignment> GetActionItemPartAssignments(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemPartAssignments",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Linq.IQueryable<global::Sungero.RecordManagement.IActionItemExecutionAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemPartAssignments(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.ITask> GetActionItemsForResolution(global::Sungero.Workflow.ITask task, global::Sungero.Core.Enumeration status, global::Sungero.Company.IEmployee addressee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemsForResolution",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.ITask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, status, addressee });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemsForResolution(task, status, addressee);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.String> ActionItemInfoProvider(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("ActionItemInfoProvider",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.ActionItemInfoProvider(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.CoreEntities.IUser> GetActionItemsPerformers(global::Sungero.RecordManagement.IActionItemExecutionTask entity)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemsPerformers",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { entity });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemsPerformers(entity);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToAttachmentsWithSave(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup, global::System.Boolean needGrantAccessRightsToPerformer)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToAttachmentsWithSave", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup, needGrantAccessRightsToPerformer });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToAttachments(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup, global::System.Boolean needGrantAccessRightsToPerformer)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToAttachments", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup, needGrantAccessRightsToPerformer });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToRecipient(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup, global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToRecipient", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.CoreEntities.IRecipient) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup, recipient });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToAssignee", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToCoAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToCoAssignee", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToSupervisor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Domain.Shared.IEntity attachment, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToSupervisor", new System.Type[] { typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachment, employee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToSupervisor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToSupervisor", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup, employee });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToSupervisor(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToSupervisor", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToObservers(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToObservers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void GrantAccessRightsToActionItemPartPerformers(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity> attachmentGroup)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsToActionItemPartPerformers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Domain.Shared.IEntity>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachmentGroup });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  global::Sungero.RecordManagement.IActionItemExecutionTask CreateActionItemExecutionFromExecution(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment actionItemAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateActionItemExecutionFromExecution", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment) });
      return (global::Sungero.RecordManagement.IActionItemExecutionTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Domain.Shared.IEntity GrantAccessRightToTaskWithSave(global::Sungero.Domain.Shared.IEntity targetTask, global::Sungero.Workflow.ITask sourceTask)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GrantAccessRightToTaskWithSave",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::Sungero.Domain.Shared.IEntity)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { targetTask, sourceTask });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GrantAccessRightToTaskWithSave(targetTask, sourceTask);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Domain.Shared.IEntity GrantAccessRightToTask(global::Sungero.Domain.Shared.IEntity targetTask, global::Sungero.Workflow.ITask sourceTask)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GrantAccessRightToTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::Sungero.Domain.Shared.IEntity)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { targetTask, sourceTask });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GrantAccessRightToTask(targetTask, sourceTask);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Workflow.IAssignment GrantAccessRightToAssignment(global::Sungero.Workflow.IAssignment targetAssignment, global::Sungero.Workflow.ITask sourceTask)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GrantAccessRightToAssignment",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::Sungero.Workflow.IAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { targetAssignment, sourceTask });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GrantAccessRightToAssignment(targetAssignment, sourceTask);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetLeadActionItemExecutionPerformers(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecution)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLeadActionItemExecutionPerformers",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { actionItemExecution });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetLeadActionItemExecutionPerformers(actionItemExecution);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Workflow.ITask GetLeadTaskToTask(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLeadTaskToTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::Sungero.Workflow.ITask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetLeadTaskToTask(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAdditionalAssignees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean DocumentInRequredGroup(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DocumentInRequredGroup", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String SetRecipientsToAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRecipientsToAssignees", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { recipient });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetDocumentExecutionState(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentExecutionState", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SynchronizeResultGroup(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeResultGroup", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void SynchronizeResultActiveText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeResultActiveText", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetParentAssignmentOwnActiveText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetParentAssignmentOwnActiveText", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.String> GetSubActionItemsActiveTexts(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSubActionItemsActiveTexts", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionAssignment>) });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignments });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void CompleteParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CompleteParentAssignment", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void SetCompletedByInParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetCompletedByInParentAssignment", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void ExecuteParentActionItemExecutionTaskMonitorings(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ExecuteParentActionItemExecutionTaskMonitorings", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean AllActionItemPartsAreCompleted(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AllActionItemPartsAreCompleted", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean AllOtherActionItemPartsAreCompleted(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AllOtherActionItemPartsAreCompleted", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean CanAutoExecParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanAutoExecParentAssignment", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetOtherNotCompletedActionItemExecutionSubTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetOtherNotCompletedActionItemExecutionSubTasks", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionAssignment GetActionItemExecutionAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemExecutionAssignment", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemExecutionAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemSupervisorAssignment GetActionItemSupervisorAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemSupervisorAssignment", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionAssignment GetActualActionItemExecutionAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActualActionItemExecutionAssignment", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemExecutionAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemSupervisorAssignment GetActualActionItemSupervisorAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActualActionItemSupervisorAssignment", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemSupervisorAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemSupervisorAssignment> GetActionItemSupervisorAssignmentsInProcess(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemSupervisorAssignmentsInProcess", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemSupervisorAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionAssignment> GetActionItemExecutionAssignments(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActionItemExecutionAssignments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask> GetCoAssigneeActionItemExecutionTasks(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Workflow.IAssignment parentAssignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCoAssigneeActionItemExecutionTasks", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTask>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentAssignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetActualSupervisorAndAssignee(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetActualSupervisorAndAssignee", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean NeedSendSupervisorNotice(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedSendSupervisorNotice", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void SetControlRelativeDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentArguments e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetControlRelativeDeadline", new System.Type[] { typeof(Sungero.RecordManagement.Server.ActionItemSupervisorAssignmentArguments) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void SynchronizeActionItemPart(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Boolean needSaveParentTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeActionItemPart", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needSaveParentTask });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges DeserializeActionItemChanges(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Int64 oldSupervisor, global::System.Int64 newSupervisor, global::System.Int64 oldAssignee, global::System.Int64 newAssignee, global::System.DateTime oldDeadline, global::System.DateTime newDeadline, global::System.String oldCoAssignees, global::System.String newCoAssignees, global::System.DateTime coAssigneeOldDeadline, global::System.DateTime coAssigneeNewDeadline, global::System.String editingReason, global::System.String additionalInfo, global::System.String taskIds, global::System.String actionItemPartsText, global::System.Int64 initiatorOfChange, global::System.String changeContext)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeserializeActionItemChanges", new System.Type[] { typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.String), typeof(global::System.String), typeof(global::System.DateTime), typeof(global::System.DateTime), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.String) });
      return (global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IActionItemChanges)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { oldSupervisor, newSupervisor, oldAssignee, newAssignee, oldDeadline, newDeadline, oldCoAssignees, newCoAssignees, coAssigneeOldDeadline, coAssigneeNewDeadline, editingReason, additionalInfo, taskIds, actionItemPartsText, initiatorOfChange, changeContext });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void RelateAddedAddendaToPrimaryDocument(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RelateAddedAddendaToPrimaryDocument", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("HasTaskSentForAllCoassignees", "")]
    internal static  global::System.Boolean AllCoAssigneesActionItemExecutionTaskCreated(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AllCoAssigneesActionItemExecutionTaskCreated",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.AllCoAssigneesActionItemExecutionTaskCreated(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("HasTasksCreatedForAllActionItemParts", "")]
    internal static  global::System.Boolean AllActionItemExecutionTaskCreated(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AllActionItemExecutionTaskCreated",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.AllActionItemExecutionTaskCreated(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemExecutionAssignmentDefaultSubject", "")]
    internal static  global::System.String GetActionItemExecutionAssignmentDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemExecutionAssignmentDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemExecutionAssignmentDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemSupervisorAssignmentDefaultSubject", "")]
    internal static  global::System.String GetActionItemSupervisorAssignmentDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemSupervisorAssignmentDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemSupervisorAssignmentDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemPartDefaultSubject", "")]
    internal static  global::System.String GetActionItemPartDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemPartDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemPartDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("CoAssigneeActionItemDefaultSubject", "")]
    internal static  global::System.String GetCoAssigneeActionItemDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetCoAssigneeActionItemDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetCoAssigneeActionItemDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemObserversNotificationDefaultSubject", "")]
    internal static  global::System.String GetActionItemObserversNotificationDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemObserversNotificationDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemObserversNotificationDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemSupervisorNotificationDefaultSubject", "")]
    internal static  global::System.String GetActionItemSupervisorNotificationDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemSupervisorNotificationDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemSupervisorNotificationDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemExecutionNotificationDefaultSubject", "")]
    internal static  global::System.String GetActionItemExecutionNotificationDefaultSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemExecutionNotificationDefaultSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemExecutionNotificationDefaultSubject(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("ActionItemDefaultcontrolDeadline", "ActionItemDefaultcontrolDeadlineDescription", "", "ActionItemDefaultcontrolDeadlineSupervisor")]
    internal static  global::System.DateTime GetActionItemDefaultControlDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask task, global::Sungero.Company.IEmployee supervisor)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemDefaultControlDeadline",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, supervisor });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.GetActionItemDefaultControlDeadline(task, supervisor);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    [global::Sungero.Core.ExpressionElementAttribute("AIAssistantDraftActionItem", "")]
    internal static  global::System.Boolean WithDraftActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("WithDraftActionItem",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions.WithDraftActionItem(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Intelligence.IAIManagersAssistant GetAIAssistantPreparingActionItemDrafts(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAIAssistantPreparingActionItemDrafts", new System.Type[] {  });
      return (global::Sungero.Intelligence.IAIManagersAssistant)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  void AddDraftActionItemToParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddDraftActionItemToParentAssignment", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionTask CreateDraftActionItemExecutionTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee performer)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateDraftActionItemExecutionTask", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::Sungero.RecordManagement.IActionItemExecutionTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { performer });
    }

    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void DeletePartsCoAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts actionItemPart)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeletePartsCoAssignees", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPart });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void AddPartsCoAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts actionItemPart, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddPartsCoAssignees", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPart, coAssignees });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void AddActionItemPart(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee assignee, global::System.Nullable<global::System.DateTime> deadline, global::System.String actionItemPart, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Nullable<global::System.DateTime> coAssigneesDeadline, global::Sungero.Company.IEmployee supervisor)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddActionItemPart", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee, deadline, actionItemPart, coAssignees, coAssigneesDeadline, supervisor });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void EditActionItemPart(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts actionItemPart, global::Sungero.Company.IEmployee assignee, global::System.Nullable<global::System.DateTime> deadline, global::System.String actionItemPartText, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> coAssignees, global::System.Nullable<global::System.DateTime> coAssigneesDeadline, global::Sungero.Company.IEmployee supervisor)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("EditActionItemPart", new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts), typeof(global::Sungero.Company.IEmployee), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { actionItemPart, assignee, deadline, actionItemPartText, coAssignees, coAssigneesDeadline, supervisor });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void SetDefaultCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDefaultCoAssigneesDeadline", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void SynchronizeActiveText(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeActiveText", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String FormatActionItemForSubject(global::System.String actionItem, global::System.Boolean hasDocument)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("FormatActionItemForSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String), typeof(global::System.Boolean) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { actionItem, hasDocument });
      }
      else
      {
        return global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions.FormatActionItemForSubject(actionItem, hasDocument);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.String GetActionItemExecutionSubject(global::Sungero.RecordManagement.IActionItemExecutionTask task, CommonLibrary.LocalizedString beginningSubject)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActionItemExecutionSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask), typeof(CommonLibrary.LocalizedString) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, beginningSubject });
      }
      else
      {
        return global::Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions.GetActionItemExecutionSubject(task, beginningSubject);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.RecordManagement.IActionItemExecutionAssignment GetParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetParentAssignment", new System.Type[] {  });
      return (global::Sungero.RecordManagement.IActionItemExecutionAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean CheckOverdueActionItemExecutionTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckOverdueActionItemExecutionTask", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean CheckCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Nullable<global::System.DateTime> coAssigneesDeadline)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckCoAssigneesDeadline", new System.Type[] { typeof(global::System.Nullable<global::System.DateTime>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { coAssigneesDeadline });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> CheckActionItemPartsCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemPartsCoAssigneesDeadline", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts> CheckActionItemPartsAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckActionItemPartsAssigneesDeadline", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.RecordManagement.IActionItemExecutionTaskActionItemParts>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemExecutionTaskStart(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e, global::System.Boolean startedFromUI)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemExecutionTaskStart", new System.Type[] { typeof(Sungero.Core.IValidationArgs), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e, startedFromUI });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemAssignedBy(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemAssignedBy", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemWithoutDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemWithoutDeadline", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemAssigneesCount(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemAssigneesCount", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemDeadline", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemCoAssigneesDeadline", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemPartsCoAssigneesDeadline(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemPartsCoAssigneesDeadline", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean ValidateActionItemExecutionTaskSave(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateActionItemExecutionTaskSave", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Boolean IsActionItemExecutionTaskCompleted(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsActionItemExecutionTaskCompleted", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::Sungero.Docflow.IRegistrationGroup GetExecutingDocumentRegistrationGroup(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExecutingDocumentRegistrationGroup", new System.Type[] {  });
      return (global::Sungero.Docflow.IRegistrationGroup)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetPartCoAssignees(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.String partGuid)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPartCoAssignees", new System.Type[] { typeof(global::System.String) });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { partGuid });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void SynchronizeAddendaAndAttachmentsGroup(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddendaAndAttachmentsGroup", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddendaGroupAttachments(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddendaGroupAttachments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetAddedAddenda(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetRemovedAddenda(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void AddedAddendaRemove(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void RemovedAddendaRemove(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.ActionItemExecutionTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)actionItemExecutionTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }

  }
}

// ==================================================================
// ActionItemExecutionTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskServerPublicFunctions : global::Sungero.RecordManagement.Server.IActionItemExecutionTaskServerPublicFunctions
  {
    public void AddDraftActionItemToParentAssignment(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionAssignment assignment)
    {
global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.AddDraftActionItemToParentAssignment(actionItemExecutionTask, assignment);
    }
    public global::Sungero.RecordManagement.IActionItemExecutionTask CreateDraftActionItemExecutionTask(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.Company.IEmployee performer)
    {
      return global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.CreateDraftActionItemExecutionTask(actionItemExecutionTask, performer);
    }
    public global::Sungero.Core.StateView GetActionItemExecutionTaskStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.IActionItemExecutionTask openedTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel, global::System.Nullable<global::System.Int32> draftNumber, global::System.Boolean skipResolutionBlock, global::System.Boolean withHighlight)
    {
      return global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.GetActionItemExecutionTaskStateView(actionItemExecutionTask, openedTask, stateViewModel, draftNumber, skipResolutionBlock, withHighlight);
    }
    public global::Sungero.Core.StateView GetDraftActionItemExecutionTaskStateView(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::Sungero.RecordManagement.Structures.ActionItemExecutionTask.IStateViewModel stateViewModel, global::Sungero.Company.IEmployee draftAssignee, global::Sungero.Company.IEmployee draftSupervisor, global::System.String draftActionItem, global::System.Nullable<global::System.DateTime> draftDeadline, global::System.Nullable<global::System.Int32> draftNumber, global::System.Boolean additional, global::System.Boolean skipResolutionBlock, global::System.Boolean withHighlight)
    {
      return global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.GetDraftActionItemExecutionTaskStateView(actionItemExecutionTask, stateViewModel, draftAssignee, draftSupervisor, draftActionItem, draftDeadline, draftNumber, additional, skipResolutionBlock, withHighlight);
    }
    public void SetActionItemChangeDeadlinesParams(global::Sungero.RecordManagement.IActionItemExecutionTask actionItemExecutionTask, global::System.Boolean needChangeDeadlines, global::System.Boolean needChangeOnlyDeadlines)
    {
global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.SetActionItemChangeDeadlinesParams(actionItemExecutionTask, needChangeDeadlines, needChangeOnlyDeadlines);
    }
    public global::System.Boolean WithDraftActionItem(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      return global::Sungero.RecordManagement.Functions.ActionItemExecutionTask.WithDraftActionItem(task);
    }
  }
}

// ==================================================================
// ActionItemExecutionTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class ActionItemExecutionTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.ActionItemExecutionTask.ActionItemExecutionTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ActionItemExecutionTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<ActionItemExecutionTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public ActionItemExecutionTaskArguments(ActionItemExecutionTaskBlock block) : base(block) { }
  }

  public class ActionItemExecutionTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<ActionItemExecutionTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.RecordManagement.IActionItemExecutionTask> 
  {
    public ActionItemExecutionTaskEndBlockEventArguments(ActionItemExecutionTaskBlock block) : base(block) { }
  }

  public partial class ActionItemExecutionTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.DateTime? Deadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("Deadline"); }
      set { this.SetCustomProperty("Deadline", value); }
    }
    public virtual global::System.Boolean? IsCompoundActionItem
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsCompoundActionItem"); }
      set { this.SetCustomProperty("IsCompoundActionItem", value); }
    }
    public virtual global::System.String ActionItem
    {
      get { return this.GetCustomProperty<global::System.String>("ActionItem"); }
      set { this.SetCustomProperty("ActionItem", value); }
    }
    public virtual global::Sungero.Core.Enumeration? ExecutionState
    {
      get { return this.GetCustomEnumProperty("ExecutionState"); }
      set { this.SetCustomEnumProperty("ExecutionState", value); }
    }
    public virtual global::System.DateTime? ActualDate
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("ActualDate"); }
      set { this.SetCustomProperty("ActualDate", value); }
    }
    public virtual global::System.Boolean? IsUnderControl
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsUnderControl"); }
      set { this.SetCustomProperty("IsUnderControl", value); }
    }
    public virtual global::Sungero.Core.Enumeration? ActionItemType
    {
      get { return this.GetCustomEnumProperty("ActionItemType"); }
      set { this.SetCustomEnumProperty("ActionItemType", value); }
    }
    public virtual global::System.Boolean? IsDraftResolution
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsDraftResolution"); }
      set { this.SetCustomProperty("IsDraftResolution", value); }
    }
    public virtual global::System.DateTime? FinalDeadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("FinalDeadline"); }
      set { this.SetCustomProperty("FinalDeadline", value); }
    }
    public virtual global::System.Boolean? IsAutoExec
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsAutoExec"); }
      set { this.SetCustomProperty("IsAutoExec", value); }
    }
    public virtual global::System.Boolean? OnEdit
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("OnEdit"); }
      set { this.SetCustomProperty("OnEdit", value); }
    }
    public virtual global::System.DateTime? CoAssigneesDeadline
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("CoAssigneesDeadline"); }
      set { this.SetCustomProperty("CoAssigneesDeadline", value); }
    }
    public virtual global::System.Boolean? HasIndefiniteDeadline
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("HasIndefiniteDeadline"); }
      set { this.SetCustomProperty("HasIndefiniteDeadline", value); }
    }
    public virtual global::System.String OnEditGuid
    {
      get { return this.GetCustomProperty<global::System.String>("OnEditGuid"); }
      set { this.SetCustomProperty("OnEditGuid", value); }
    }
    public virtual global::System.Boolean? WaitForParentAssignment
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("WaitForParentAssignment"); }
      set { this.SetCustomProperty("WaitForParentAssignment", value); }
    }

    public virtual global::Sungero.Company.IEmployee Supervisor
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Supervisor"); }
      set { this.SetCustomNavigationProperty("Supervisor", value); }
    }
    public virtual global::Sungero.Company.IEmployee AssignedBy
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("AssignedBy"); }
      set { this.SetCustomNavigationProperty("AssignedBy", value); }
    }
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesWrapper> _CoAssignees;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesWrapper> GetActionItemExecutionTaskCoAssigneesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskCoAssigneesWrapper> CoAssignees
    {
      get 
      {
        if(this._CoAssignees == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("CoAssignees"); 
          this._CoAssignees = this.GetActionItemExecutionTaskCoAssigneesCollectionWrapper(items);
        }

        return this._CoAssignees;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemPartsWrapper> _ActionItemParts;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemPartsWrapper> GetActionItemExecutionTaskActionItemPartsCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemPartsCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemPartsWrapper> ActionItemParts
    {
      get 
      {
        if(this._ActionItemParts == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("ActionItemParts"); 
          this._ActionItemParts = this.GetActionItemExecutionTaskActionItemPartsCollectionWrapper(items);
        }

        return this._ActionItemParts;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemObserversWrapper> _ActionItemObservers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemObserversWrapper> GetActionItemExecutionTaskActionItemObserversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemObserversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskActionItemObserversWrapper> ActionItemObservers
    {
      get 
      {
        if(this._ActionItemObservers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("ActionItemObservers"); 
          this._ActionItemObservers = this.GetActionItemExecutionTaskActionItemObserversCollectionWrapper(items);
        }

        return this._ActionItemObservers;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesWrapper> _PartsCoAssignees;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesWrapper> GetActionItemExecutionTaskPartsCoAssigneesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskPartsCoAssigneesWrapper> PartsCoAssignees
    {
      get 
      {
        if(this._PartsCoAssignees == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("PartsCoAssignees"); 
          this._PartsCoAssignees = this.GetActionItemExecutionTaskPartsCoAssigneesCollectionWrapper(items);
        }

        return this._PartsCoAssignees;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskAddedAddendaWrapper> _AddedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskAddedAddendaWrapper> GetActionItemExecutionTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskAddedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskAddedAddendaWrapper> AddedAddenda
    {
      get 
      {
        if(this._AddedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddedAddenda"); 
          this._AddedAddenda = this.GetActionItemExecutionTaskAddedAddendaCollectionWrapper(items);
        }

        return this._AddedAddenda;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskRemovedAddendaWrapper> _RemovedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskRemovedAddendaWrapper> GetActionItemExecutionTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.RecordManagement.Server.ActionItemExecutionTaskRemovedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.RecordManagement.Server.ActionItemExecutionTaskRemovedAddendaWrapper> RemovedAddenda
    {
      get 
      {
        if(this._RemovedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("RemovedAddenda"); 
          this._RemovedAddenda = this.GetActionItemExecutionTaskRemovedAddendaCollectionWrapper(items);
        }

        return this._RemovedAddenda;
      }
    }



    public ActionItemExecutionTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// ActionItemExecutionTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskCoAssigneesCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskCoAssigneesWrapper>
  {
    protected override ActionItemExecutionTaskCoAssigneesWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskCoAssigneesWrapper(value);
    }

    public ActionItemExecutionTaskCoAssigneesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskCoAssigneesWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Boolean? AssignmentCreated
        {
          get { return this.GetCustomProperty<global::System.Boolean?>("AssignmentCreated"); }
          set { this.SetCustomProperty("AssignmentCreated", value); }
        }


    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }

    public ActionItemExecutionTaskCoAssigneesWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ActionItemExecutionTaskActionItemPartsCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskActionItemPartsWrapper>
  {
    protected override ActionItemExecutionTaskActionItemPartsWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskActionItemPartsWrapper(value);
    }

    public ActionItemExecutionTaskActionItemPartsCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskActionItemPartsWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.DateTime? Deadline
        {
          get { return this.GetCustomProperty<global::System.DateTime?>("Deadline"); }
          set { this.SetCustomProperty("Deadline", value); }
        }

        public virtual global::System.Int32? Number
        {
          get { return this.GetCustomProperty<global::System.Int32?>("Number"); }
          set { this.SetCustomProperty("Number", value); }
        }

        public virtual global::System.Boolean? AssignmentCreated
        {
          get { return this.GetCustomProperty<global::System.Boolean?>("AssignmentCreated"); }
          set { this.SetCustomProperty("AssignmentCreated", value); }
        }

        public virtual global::System.DateTime? CoAssigneesDeadline
        {
          get { return this.GetCustomProperty<global::System.DateTime?>("CoAssigneesDeadline"); }
          set { this.SetCustomProperty("CoAssigneesDeadline", value); }
        }

        public virtual global::System.String PartGuid
        {
          get { return this.GetCustomProperty<global::System.String>("PartGuid"); }
          set { this.SetCustomProperty("PartGuid", value); }
        }


    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }
    public virtual global::Sungero.RecordManagement.IActionItemExecutionTask ActionItemPartExecutionTask
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.RecordManagement.IActionItemExecutionTask>("ActionItemPartExecutionTask"); }
      set { this.SetCustomNavigationProperty("ActionItemPartExecutionTask", value); }
    }
    public virtual global::Sungero.Company.IEmployee Supervisor
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Supervisor"); }
      set { this.SetCustomNavigationProperty("Supervisor", value); }
    }

    public ActionItemExecutionTaskActionItemPartsWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ActionItemExecutionTaskActionItemObserversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskActionItemObserversWrapper>
  {
    protected override ActionItemExecutionTaskActionItemObserversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskActionItemObserversWrapper(value);
    }

    public ActionItemExecutionTaskActionItemObserversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskActionItemObserversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Observer
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Observer"); }
      set { this.SetCustomNavigationProperty("Observer", value); }
    }

    public ActionItemExecutionTaskActionItemObserversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ActionItemExecutionTaskPartsCoAssigneesCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskPartsCoAssigneesWrapper>
  {
    protected override ActionItemExecutionTaskPartsCoAssigneesWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskPartsCoAssigneesWrapper(value);
    }

    public ActionItemExecutionTaskPartsCoAssigneesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskPartsCoAssigneesWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.String PartGuid
        {
          get { return this.GetCustomProperty<global::System.String>("PartGuid"); }
          set { this.SetCustomProperty("PartGuid", value); }
        }


    public virtual global::Sungero.Company.IEmployee CoAssignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("CoAssignee"); }
      set { this.SetCustomNavigationProperty("CoAssignee", value); }
    }

    public ActionItemExecutionTaskPartsCoAssigneesWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ActionItemExecutionTaskAddedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskAddedAddendaWrapper>
  {
    protected override ActionItemExecutionTaskAddedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskAddedAddendaWrapper(value);
    }

    public ActionItemExecutionTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskAddedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public ActionItemExecutionTaskAddedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ActionItemExecutionTaskRemovedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ActionItemExecutionTaskRemovedAddendaWrapper>
  {
    protected override ActionItemExecutionTaskRemovedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ActionItemExecutionTaskRemovedAddendaWrapper(value);
    }

    public ActionItemExecutionTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ActionItemExecutionTaskRemovedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public ActionItemExecutionTaskRemovedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}

// ==================================================================
// ActionItemExecutionTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class ActionItemExecutionTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public ActionItemExecutionTaskRouteHandlers(global::Sungero.RecordManagement.IActionItemExecutionTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Необходимо использовать LayerSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
      public static readonly int V2 = 2;
      public static readonly int V3 = 3;
      public static readonly int V4 = 4;
}

    }
}

// ==================================================================
// ActionItemExecutionTaskBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks
{
  public partial class ExecuteActionItemBlock :  global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> {
    /// <summary>
    /// Назначить права по умолчанию.
    /// </summary>
    public  virtual  global::System.Boolean? GrantRightsByDefault
    {
      get
      {
        return this.GetCustomProperty<global::System.Boolean?>("GrantRightsByDefault");
      }
      set
      {
        this.SetCustomProperty("GrantRightsByDefault", value);
      }
    }

    public ExecuteActionItemBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }

  public partial class ExecuteActionItemBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.ExecuteActionItemBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.ExecuteActionItemBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public ExecuteActionItemBlockHandlers(global::Sungero.Workflow.AssignmentBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new ExecuteActionItemBlock(block);
      this.Task = task;
    }
  }
  public partial class AcceptWorkBySupervisorBlock :  global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> {
    /// <summary>
    /// Назначить права по умолчанию.
    /// </summary>
    public  virtual  global::System.Boolean? GrantRightsByDefault
    {
      get
      {
        return this.GetCustomProperty<global::System.Boolean?>("GrantRightsByDefault");
      }
      set
      {
        this.SetCustomProperty("GrantRightsByDefault", value);
      }
    }

    public AcceptWorkBySupervisorBlock(global::Sungero.Workflow.AssignmentBlock block) : base(block) { }
  }

  public partial class AcceptWorkBySupervisorBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.AssignmentBlockWrapper<global::Sungero.Workflow.AssignmentBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.AcceptWorkBySupervisorBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.AcceptWorkBySupervisorBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public AcceptWorkBySupervisorBlockHandlers(global::Sungero.Workflow.AssignmentBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new AcceptWorkBySupervisorBlock(block);
      this.Task = task;
    }
  }
  public partial class SendActionItemToNextCoAssigneeBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public SendActionItemToNextCoAssigneeBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class SendActionItemToNextCoAssigneeBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendActionItemToNextCoAssigneeBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendActionItemToNextCoAssigneeBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public SendActionItemToNextCoAssigneeBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new SendActionItemToNextCoAssigneeBlock(block);
      this.Task = task;
    }
  }
  public partial class WaitForCreateActionItemToAssigneeBlock :  global::Sungero.Workflow.Blocks.MonitoringBlockWrapper {
    public WaitForCreateActionItemToAssigneeBlock(global::Sungero.Workflow.MonitoringBlock block) : base(block) { }
  }

  public partial class WaitForCreateActionItemToAssigneeBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.MonitoringBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForCreateActionItemToAssigneeBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForCreateActionItemToAssigneeBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }

    public virtual void WaitForCreateActionItemToAssigneeBlockStart()
    {
    }




    public WaitForCreateActionItemToAssigneeBlockHandlers(global::Sungero.Workflow.MonitoringBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new WaitForCreateActionItemToAssigneeBlock(block);
      this.Task = task;
    }
  }
  public partial class WaitForUnblockingLeadingAssignmentBlock :  global::Sungero.Workflow.Blocks.MonitoringBlockWrapper {
    public WaitForUnblockingLeadingAssignmentBlock(global::Sungero.Workflow.MonitoringBlock block) : base(block) { }
  }

  public partial class WaitForUnblockingLeadingAssignmentBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.MonitoringBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForUnblockingLeadingAssignmentBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForUnblockingLeadingAssignmentBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }

    public virtual void WaitForUnblockingLeadingAssignmentBlockStart()
    {
    }




    public WaitForUnblockingLeadingAssignmentBlockHandlers(global::Sungero.Workflow.MonitoringBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new WaitForUnblockingLeadingAssignmentBlock(block);
      this.Task = task;
    }
  }
  public partial class SendTaskByNextActionItemPartBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public SendTaskByNextActionItemPartBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class SendTaskByNextActionItemPartBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendTaskByNextActionItemPartBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendTaskByNextActionItemPartBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public SendTaskByNextActionItemPartBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new SendTaskByNextActionItemPartBlock(block);
      this.Task = task;
    }
  }
  public partial class WaitForCompletionActionItemPartsBlock :  global::Sungero.Workflow.Blocks.MonitoringBlockWrapper {
    public WaitForCompletionActionItemPartsBlock(global::Sungero.Workflow.MonitoringBlock block) : base(block) { }
  }

  public partial class WaitForCompletionActionItemPartsBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.MonitoringBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForCompletionActionItemPartsBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitForCompletionActionItemPartsBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }

    public virtual void WaitForCompletionActionItemPartsBlockStart()
    {
    }




    public WaitForCompletionActionItemPartsBlockHandlers(global::Sungero.Workflow.MonitoringBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new WaitForCompletionActionItemPartsBlock(block);
      this.Task = task;
    }
  }
  public partial class ProcessResultOfExecutionActionItemBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public ProcessResultOfExecutionActionItemBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class ProcessResultOfExecutionActionItemBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.ProcessResultOfExecutionActionItemBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.ProcessResultOfExecutionActionItemBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public ProcessResultOfExecutionActionItemBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new ProcessResultOfExecutionActionItemBlock(block);
      this.Task = task;
    }
  }
  public partial class GrantAccessRightsToDocumentsAndTaskBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public GrantAccessRightsToDocumentsAndTaskBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class GrantAccessRightsToDocumentsAndTaskBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.GrantAccessRightsToDocumentsAndTaskBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.GrantAccessRightsToDocumentsAndTaskBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public GrantAccessRightsToDocumentsAndTaskBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new GrantAccessRightsToDocumentsAndTaskBlock(block);
      this.Task = task;
    }
  }
  public partial class PrepareDraftActionItemBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public PrepareDraftActionItemBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class PrepareDraftActionItemBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.PrepareDraftActionItemBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.PrepareDraftActionItemBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public PrepareDraftActionItemBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new PrepareDraftActionItemBlock(block);
      this.Task = task;
    }
  }
  public partial class DeleteDraftActionItemsBlock :  global::Sungero.Workflow.Blocks.ScriptBlockWrapper {
    public DeleteDraftActionItemsBlock(global::Sungero.Workflow.ScriptBlock block) : base(block) { }
  }

  public partial class DeleteDraftActionItemsBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.ScriptBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.DeleteDraftActionItemsBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.DeleteDraftActionItemsBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public DeleteDraftActionItemsBlockHandlers(global::Sungero.Workflow.ScriptBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new DeleteDraftActionItemsBlock(block);
      this.Task = task;
    }
  }
  public partial class WaitArioProcessingBlock :  global::Sungero.Workflow.Blocks.MonitoringBlockWrapper {
    public WaitArioProcessingBlock(global::Sungero.Workflow.MonitoringBlock block) : base(block) { }
  }

  public partial class WaitArioProcessingBlockHandlers 
  {

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.MonitoringBlockWrapper Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitArioProcessingBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.WaitArioProcessingBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }


    public WaitArioProcessingBlockHandlers(global::Sungero.Workflow.MonitoringBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new WaitArioProcessingBlock(block);
      this.Task = task;
    }
  }
  public partial class SendTasksByActionItemPartsBlock :  global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> {
    public SendTasksByActionItemPartsBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }

  public partial class SendTasksByActionItemPartsBlockHandlers 
  {
    protected abstract  class Importance  : global::Sungero.Workflow.Enums.TaskBlock.Importance
    {
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendTasksByActionItemPartsBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendTasksByActionItemPartsBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }

    public virtual void SendTasksByActionItemPartsBlockEnd(System.Collections.Generic.IEnumerable<Sungero.RecordManagement.IActionItemExecutionTask> createdTasks)
    {
    }



    public SendTasksByActionItemPartsBlockHandlers(global::Sungero.Workflow.TaskBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new SendTasksByActionItemPartsBlock(block);
      this.Task = task;
    }
  }
  public partial class SendActionItemsToCoAssigneesBlock :  global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> {
    public SendActionItemsToCoAssigneesBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }

  public partial class SendActionItemsToCoAssigneesBlockHandlers 
  {
    protected abstract  class Importance  : global::Sungero.Workflow.Enums.TaskBlock.Importance
    {
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock> Block { get; set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendActionItemsToCoAssigneesBlock _block
    {
      get { return (global::Sungero.RecordManagement.Server.ActionItemExecutionTaskBlocks.SendActionItemsToCoAssigneesBlock)this.Block; }
    }

    private global::Sungero.RecordManagement.IActionItemExecutionTask _obj
    {
      get { return (global::Sungero.RecordManagement.IActionItemExecutionTask)this.Task; }
    }

    public virtual void SendActionItemsToCoAssigneesBlockStart()
    {
    }



    public virtual void SendActionItemsToCoAssigneesBlockEnd(System.Collections.Generic.IEnumerable<Sungero.RecordManagement.IActionItemExecutionTask> createdTasks)
    {
    }



    public SendActionItemsToCoAssigneesBlockHandlers(global::Sungero.Workflow.TaskBlock block, global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      this.Block = new SendActionItemsToCoAssigneesBlock(block);
      this.Task = task;
    }
  }
}

// ==================================================================
// ActionItemExecutionTaskBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class ActionItemExecutionTaskBlocksInfo : global::Sungero.RecordManagement.IActionItemExecutionTaskBlocksInfo
  {
    private readonly Sungero.Workflow.ITask task;

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block9
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "9");
        }
      }

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block11
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "11");
        }
      }

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block110
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "110");
        }
      }

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block113
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "113");
        }
      }


    public void ExecuteAllMonitoringBlocks()
    {
      new global::Sungero.Workflow.Server.TaskBlocksInfo(this.task).ExecuteAllMonitoringBlocks();
    }

    public ActionItemExecutionTaskBlocksInfo(Sungero.Workflow.ITask task)
    {
      this.task = task;
    }
  }

}
