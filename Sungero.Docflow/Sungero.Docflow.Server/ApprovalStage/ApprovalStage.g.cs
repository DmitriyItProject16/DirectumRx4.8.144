
// ==================================================================
// ApprovalStage.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalStageFilter<T> :
      global::Sungero.Docflow.Server.ApprovalStageBaseFilter<T>
      where T : class, global::Sungero.Docflow.IApprovalStage
    {
      private global::Sungero.Docflow.IApprovalStageFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IApprovalStageFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ApprovalStageFilter(global::Sungero.Docflow.IApprovalStageFilterState filter)
      : base(filter)
      {
      }

      protected ApprovalStageFilter()
      {
      }
    }
      public class ApprovalStageUiFilter<T> :
        global::Sungero.Docflow.Server.ApprovalStageBaseUiFilter<T>
        where T : class, global::Sungero.Docflow.IApprovalStage
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ApprovalStageSearchDialogModel : global::Sungero.Docflow.Server.ApprovalStageBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.Int32? DeadlineInDays { get; protected set; }
                  public override global::System.Int32? DeadlineInHours { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }


                  public virtual global::System.Int32? StartDelayDays { get; protected set; }
                  public virtual global::System.Boolean? AllowChangeReworkPerformer { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> StageType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Sequence { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ReworkType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRoleBase> ApprovalRole { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> AssigneeType { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ReworkPerformerType { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalStageApprovalRolesModel ApprovalRoles { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalStageRecipientsModel Recipients { get; protected set; }

        }


      public class ApprovalStageApprovalRolesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalStageRecipientsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class ApprovalStageFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageAssigneePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AssigneeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageAssigneeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AssigneeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageFilterForApprovalRole<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageApprovalRolePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ApprovalRoleFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageApprovalRolePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ApprovalRoleFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageSearchFilterForApprovalRole<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageApprovalRoleSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ApprovalRoleSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageApprovalRoleSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRoleSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageSearchFilterForApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageFilterForReworkPerformer<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageReworkPerformerPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ReworkPerformerFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageReworkPerformerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkPerformerFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageSearchFilterForReworkPerformer<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageReworkPerformerSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ReworkPerformerSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageReworkPerformerSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkPerformerSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageSearchFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageFilterForReworkApprovalRole<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalStage
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageReworkApprovalRolePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ReworkApprovalRoleFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageReworkApprovalRolePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkApprovalRoleFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageFilterForReworkApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalStageSearchFilterForReworkApprovalRole<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageReworkApprovalRoleSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ReworkApprovalRoleSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalStageReworkApprovalRoleSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkApprovalRoleSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalStageSearchFilterForReworkApprovalRole(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ApprovalStageFilter<global::Sungero.Docflow.IApprovalStage>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageUiFilter<global::Sungero.Docflow.IApprovalStage>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageFilterForAssignee<global::Sungero.CoreEntities.IRecipient, global::Sungero.Docflow.IApprovalStage>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IApprovalStage>), "ApprovalRole")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageSearchFilterForApprovalRole<global::Sungero.Docflow.IApprovalRoleBase>), "ApprovalRole")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient, global::Sungero.Docflow.IApprovalStage>), "ReworkPerformer")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageSearchFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient>), "ReworkPerformer")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageFilterForReworkApprovalRole<global::Sungero.Docflow.IApprovalRoleBase, global::Sungero.Docflow.IApprovalStage>), "ReworkApprovalRole")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalStageSearchFilterForReworkApprovalRole<global::Sungero.Docflow.IApprovalRoleBase>), "ReworkApprovalRole")]


  public class ApprovalStage :
    global::Sungero.Docflow.Server.ApprovalStageBase, global::Sungero.Docflow.IApprovalStage
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("bbb34726-4316-4d87-a64d-9dcf74b654f4");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalStage, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IApprovalStageState State
    {
      get { return (global::Sungero.Docflow.IApprovalStageState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalStageState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalStageInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalStageInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IApprovalStageAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IApprovalStageAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ApprovalStageAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ApprovalStageFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalStageFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalStageServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalStageSharedHandlers(this);
    }

    private global::System.Boolean? _NeedStrongSign;
    public virtual global::System.Boolean? NeedStrongSign
    {
      get
      {
        return this._NeedStrongSign;
      }

      set
      {
        this.SetPropertyValue("NeedStrongSign", this._NeedStrongSign, value, (propertyValue) => { this._NeedStrongSign = propertyValue; }, this.NeedStrongSignChangedHandler);
      }
    }
    private global::System.Int32? _StartDelayDays;
    public virtual global::System.Int32? StartDelayDays
    {
      get
      {
        return this._StartDelayDays;
      }

      set
      {
        this.SetPropertyValue("StartDelayDays", this._StartDelayDays, value, (propertyValue) => { this._StartDelayDays = propertyValue; }, this.StartDelayDaysChangedHandler);
      }
    }
    private global::System.String _Subject;
    public virtual global::System.String Subject
    {
      get
      {
        return this._Subject;
      }

      set
      {
        this.SetPropertyValue("Subject", this._Subject, value, (propertyValue) => { this._Subject = propertyValue; }, this.SubjectChangedHandler);
      }
    }
    private global::System.Boolean? _AllowSendToRework;
    public virtual global::System.Boolean? AllowSendToRework
    {
      get
      {
        return this._AllowSendToRework;
      }

      set
      {
        this.SetPropertyValue("AllowSendToRework", this._AllowSendToRework, value, (propertyValue) => { this._AllowSendToRework = propertyValue; }, this.AllowSendToReworkChangedHandler);
      }
    }
    private global::System.Boolean? _IsConfirmSigning;
    public virtual global::System.Boolean? IsConfirmSigning
    {
      get
      {
        return this._IsConfirmSigning;
      }

      set
      {
        this.SetPropertyValue("IsConfirmSigning", this._IsConfirmSigning, value, (propertyValue) => { this._IsConfirmSigning = propertyValue; }, this.IsConfirmSigningChangedHandler);
      }
    }
    private global::System.Boolean? _IsResultSubmission;
    public virtual global::System.Boolean? IsResultSubmission
    {
      get
      {
        return this._IsResultSubmission;
      }

      set
      {
        this.SetPropertyValue("IsResultSubmission", this._IsResultSubmission, value, (propertyValue) => { this._IsResultSubmission = propertyValue; }, this.IsResultSubmissionChangedHandler);
      }
    }
    private global::System.Boolean? _AllowAdditionalApprovers;
    public virtual global::System.Boolean? AllowAdditionalApprovers
    {
      get
      {
        return this._AllowAdditionalApprovers;
      }

      set
      {
        this.SetPropertyValue("AllowAdditionalApprovers", this._AllowAdditionalApprovers, value, (propertyValue) => { this._AllowAdditionalApprovers = propertyValue; }, this.AllowAdditionalApproversChangedHandler);
      }
    }
    private global::System.Boolean? _AllowChangeReworkPerformer;
    public virtual global::System.Boolean? AllowChangeReworkPerformer
    {
      get
      {
        return this._AllowChangeReworkPerformer;
      }

      set
      {
        this.SetPropertyValue("AllowChangeReworkPerformer", this._AllowChangeReworkPerformer, value, (propertyValue) => { this._AllowChangeReworkPerformer = propertyValue; }, this.AllowChangeReworkPerformerChangedHandler);
      }
    }
    private global::System.Boolean? _NeedRestrictPerformerRights;
    public virtual global::System.Boolean? NeedRestrictPerformerRights
    {
      get
      {
        return this._NeedRestrictPerformerRights;
      }

      set
      {
        this.SetPropertyValue("NeedRestrictPerformerRights", this._NeedRestrictPerformerRights, value, (propertyValue) => { this._NeedRestrictPerformerRights = propertyValue; }, this.NeedRestrictPerformerRightsChangedHandler);
      }
    }
    private global::System.Boolean? _AllowApproveWithSuggestions;
    public virtual global::System.Boolean? AllowApproveWithSuggestions
    {
      get
      {
        return this._AllowApproveWithSuggestions;
      }

      set
      {
        this.SetPropertyValue("AllowApproveWithSuggestions", this._AllowApproveWithSuggestions, value, (propertyValue) => { this._AllowApproveWithSuggestions = propertyValue; }, this.AllowApproveWithSuggestionsChangedHandler);
      }
    }



    private global::System.String _AssignmentInstruction;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String AssignmentInstruction
    {
      get
      {
        return this._AssignmentInstruction;
      }

      set
      {
        this.SetPropertyValue("AssignmentInstruction", this._AssignmentInstruction, value, (propertyValue) => { this._AssignmentInstruction = propertyValue; }, this.AssignmentInstructionChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _StageTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.StageType),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "StageType");

    public static global::Sungero.Domain.Shared.EnumerationItems StageTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._StageTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems StageTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.StageTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _StageType;

    public virtual global::Sungero.Core.Enumeration? StageType
    {
      get { return this._StageType; }
      set { this.SetEnumPropertyValue("StageType", this._StageType, value, (propertyValue) => { this._StageType = propertyValue; }, this.StageTypeChangedHandler, this.StageTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _SequenceItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.Sequence),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "Sequence");

    public static global::Sungero.Domain.Shared.EnumerationItems SequenceItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._SequenceItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems SequenceAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.SequenceItems; }
    }

    private global::Sungero.Core.Enumeration? _Sequence;

    public virtual global::Sungero.Core.Enumeration? Sequence
    {
      get { return this._Sequence; }
      set { this.SetEnumPropertyValue("Sequence", this._Sequence, value, (propertyValue) => { this._Sequence = propertyValue; }, this.SequenceChangedHandler, this.SequenceAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ReworkTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.ReworkType),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "ReworkType");

    public static global::Sungero.Domain.Shared.EnumerationItems ReworkTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._ReworkTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ReworkTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.ReworkTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _ReworkType;

    public virtual global::Sungero.Core.Enumeration? ReworkType
    {
      get { return this._ReworkType; }
      set { this.SetEnumPropertyValue("ReworkType", this._ReworkType, value, (propertyValue) => { this._ReworkType = propertyValue; }, this.ReworkTypeChangedHandler, this.ReworkTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _AssigneeTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.AssigneeType),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "AssigneeType");

    public static global::Sungero.Domain.Shared.EnumerationItems AssigneeTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._AssigneeTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems AssigneeTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.AssigneeTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _AssigneeType;

    public virtual global::Sungero.Core.Enumeration? AssigneeType
    {
      get { return this._AssigneeType; }
      set { this.SetEnumPropertyValue("AssigneeType", this._AssigneeType, value, (propertyValue) => { this._AssigneeType = propertyValue; }, this.AssigneeTypeChangedHandler, this.AssigneeTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _ReworkPerformerTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.ReworkPerformerType),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "ReworkPerformerType");

    public static global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._ReworkPerformerTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ReworkPerformerTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.ReworkPerformerTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _ReworkPerformerType;

    public virtual global::Sungero.Core.Enumeration? ReworkPerformerType
    {
      get { return this._ReworkPerformerType; }
      set { this.SetEnumPropertyValue("ReworkPerformerType", this._ReworkPerformerType, value, (propertyValue) => { this._ReworkPerformerType = propertyValue; }, this.ReworkPerformerTypeChangedHandler, this.ReworkPerformerTypeAllowedItems); }
    }
    private static global::Sungero.Domain.Shared.EnumerationItems _RightTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalStage.RightType),
      typeof(global::Sungero.Docflow.Server.ApprovalStage),
      "RightType");

    public static global::Sungero.Domain.Shared.EnumerationItems RightTypeItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage._RightTypeItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems RightTypeAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalStage.RightTypeItems; }
    }

    private global::Sungero.Core.Enumeration? _RightType;

    public virtual global::Sungero.Core.Enumeration? RightType
    {
      get { return this._RightType; }
      set { this.SetEnumPropertyValue("RightType", this._RightType, value, (propertyValue) => { this._RightType = propertyValue; }, this.RightTypeChangedHandler, this.RightTypeAllowedItems); }
    }


    private global::Sungero.CoreEntities.IRecipient _Assignee;
    public virtual global::Sungero.CoreEntities.IRecipient Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRoleBase _ApprovalRole;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ApprovalRole
    {
      get
      {
        return this._ApprovalRole;
      }

      set
      {
        this.SetPropertyValue("ApprovalRole", this._ApprovalRole, value, (propertyValue) => { this._ApprovalRole = propertyValue; }, this.ApprovalRoleChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.IRecipient _ReworkPerformer;
    public virtual global::Sungero.CoreEntities.IRecipient ReworkPerformer
    {
      get
      {
        return this._ReworkPerformer;
      }

      set
      {
        this.SetPropertyValue("ReworkPerformer", this._ReworkPerformer, value, (propertyValue) => { this._ReworkPerformer = propertyValue; }, this.ReworkPerformerChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRoleBase _ReworkApprovalRole;
    public virtual global::Sungero.Docflow.IApprovalRoleBase ReworkApprovalRole
    {
      get
      {
        return this._ReworkApprovalRole;
      }

      set
      {
        this.SetPropertyValue("ReworkApprovalRole", this._ReworkApprovalRole, value, (propertyValue) => { this._ReworkApprovalRole = propertyValue; }, this.ReworkApprovalRoleChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageApprovalRoles> _ApprovalRoles;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageApprovalRoles> ApprovalRoles
    {
      get
      {
        if (this._ApprovalRoles == null)
        {
          this._ApprovalRoles = this.CreateApprovalRolesCollection();
          this.SetApprovalRolesEventHandlers();
        }
        return this._ApprovalRoles;
      }

      set
      {
        if (this._ApprovalRoles != null)
          this.UnsetChildCollectionEventHandlers(this._ApprovalRoles);

        this._ApprovalRoles = value;
        this.SetApprovalRolesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageApprovalRoles> CreateApprovalRolesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalStageApprovalRoles>() { RootEntity = this };
    }

    private void SetApprovalRolesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ApprovalRoles, "ApprovalRoles");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ApprovalRoles;
      changeNotifier.Added += this.ApprovalRolesAddedHandler;
      changeNotifier.Deleted += this.ApprovalRolesDeletedHandler;
      changeNotifier.Added += this.ApprovalRolesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ApprovalRolesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ApprovalRolesCollectionUpdateEventHandler;
    }

    private void ApprovalRolesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ApprovalRoles"))
        this.ApprovalRolesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageRecipients> _Recipients;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageRecipients> Recipients
    {
      get
      {
        if (this._Recipients == null)
        {
          this._Recipients = this.CreateRecipientsCollection();
          this.SetRecipientsEventHandlers();
        }
        return this._Recipients;
      }

      set
      {
        if (this._Recipients != null)
          this.UnsetChildCollectionEventHandlers(this._Recipients);

        this._Recipients = value;
        this.SetRecipientsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalStageRecipients> CreateRecipientsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalStageRecipients>() { RootEntity = this };
    }

    private void SetRecipientsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Recipients, "Recipients");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Recipients;
      changeNotifier.Added += this.RecipientsAddedHandler;
      changeNotifier.Deleted += this.RecipientsDeletedHandler;
      changeNotifier.Added += this.RecipientsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RecipientsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RecipientsCollectionUpdateEventHandler;
    }

    private void RecipientsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Recipients"))
        this.RecipientsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.ApprovalStageCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IApprovalStage)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.ApprovalStageCreatingFromServerHandler((global::Sungero.Docflow.IApprovalStage)entitySource, this.Info);
    }

    #region Framework events

    protected void StageTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.StageType, this.StageType, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).StageTypeChanged(args);
    }

    protected void SequenceChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.Sequence, this.Sequence, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).SequenceChanged(args);
    }

    protected void ReworkTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReworkType, this.ReworkType, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ReworkTypeChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalStageAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }

    protected void NeedStrongSignChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedStrongSign, this.NeedStrongSign, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).NeedStrongSignChanged(args);
    }

    protected void StartDelayDaysChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.StartDelayDays, this.StartDelayDays, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).StartDelayDaysChanged(args);
    }

    protected void SubjectChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Subject, this.Subject, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).SubjectChanged(args);
    }

    protected void AllowSendToReworkChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AllowSendToRework, this.AllowSendToRework, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AllowSendToReworkChanged(args);
    }

    protected void IsConfirmSigningChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsConfirmSigning, this.IsConfirmSigning, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).IsConfirmSigningChanged(args);
    }

    protected void IsResultSubmissionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsResultSubmission, this.IsResultSubmission, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).IsResultSubmissionChanged(args);
    }

    protected void ApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalStageApprovalRoleChangedEventArgs(this.State.Properties.ApprovalRole, this.ApprovalRole, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ApprovalRoleChanged(args);
    }

    protected void ApprovalRolesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ApprovalRolesChanged(args);
    }

    protected void AssigneeTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.AssigneeType, this.AssigneeType, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AssigneeTypeChanged(args);
    }

    protected void RecipientsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).RecipientsChanged(args);
    }

    protected void AllowAdditionalApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AllowAdditionalApprovers, this.AllowAdditionalApprovers, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AllowAdditionalApproversChanged(args);
    }

    protected void AllowChangeReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AllowChangeReworkPerformer, this.AllowChangeReworkPerformer, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AllowChangeReworkPerformerChanged(args);
    }

    protected void ReworkPerformerTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReworkPerformerType, this.ReworkPerformerType, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ReworkPerformerTypeChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalStageReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }

    protected void ReworkApprovalRoleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalStageReworkApprovalRoleChangedEventArgs(this.State.Properties.ReworkApprovalRole, this.ReworkApprovalRole, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).ReworkApprovalRoleChanged(args);
    }

    protected void RightTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.RightType, this.RightType, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).RightTypeChanged(args);
    }

    protected void NeedRestrictPerformerRightsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedRestrictPerformerRights, this.NeedRestrictPerformerRights, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).NeedRestrictPerformerRightsChanged(args);
    }

    protected void AllowApproveWithSuggestionsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.AllowApproveWithSuggestions, this.AllowApproveWithSuggestions, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AllowApproveWithSuggestionsChanged(args);
    }

    protected void AssignmentInstructionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.AssignmentInstruction, this.AssignmentInstruction, this);
     ((global::Sungero.Docflow.IApprovalStageSharedHandlers)this.SharedHandlers).AssignmentInstructionChanged(args);
    }



    protected virtual global::Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers CreateApprovalRolesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers CreateApprovalRolesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ApprovalRolesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ApprovalRolesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateApprovalRolesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ApprovalRolesAdded(args);
        }
      }
    }

    protected virtual void ApprovalRolesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageApprovalRolesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ApprovalRolesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateApprovalRolesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ApprovalRolesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers CreateRecipientsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers CreateRecipientsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RecipientsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RecipientsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRecipientsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RecipientsAdded(args);
        }
      }
    }

    protected virtual void RecipientsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalStageRecipientsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RecipientsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRecipientsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RecipientsDeleted(args);
        }
      }
    }


    #endregion


    public ApprovalStage()
    {
    }

  }
}

// ==================================================================
// ApprovalStageHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ApprovalStageAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageAssigneePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalStage entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalStageAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalStageAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalStageApprovalRolePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageApprovalRolePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalStage entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalStageApprovalRoleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRoleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalStageApprovalRoleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalStageReworkPerformerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageReworkPerformerPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalStage entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalStageReworkPerformerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ReworkPerformerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalStageReworkPerformerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalStageReworkApprovalRolePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageReworkApprovalRolePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalStage entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalStageReworkApprovalRoleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRoleBase
  {

    public virtual global::System.Linq.IQueryable<T> ReworkApprovalRoleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalStageReworkApprovalRoleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ApprovalStageFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalStageBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IApprovalStage
  {
    private global::Sungero.Docflow.IApprovalStageFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IApprovalStageFilterState)this.Filter;
      }
    }

    public ApprovalStageFilteringServerHandler(global::Sungero.Docflow.IApprovalStageFilterState filter)
    : base(filter)
    {
    }

    protected ApprovalStageFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ApprovalStageUiFilteringServerHandler<T>
    : global::Sungero.Docflow.ApprovalStageBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IApprovalStage
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ApprovalStageSearchDialogServerHandler : global::Sungero.Docflow.ApprovalStageBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ApprovalStageSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ApprovalStageSearchDialogModel)this.Dialog;
       }
     }

     public ApprovalStageSearchDialogServerHandler(global::Sungero.Docflow.Server.ApprovalStageSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ApprovalStageServerHandlers : global::Sungero.Docflow.ApprovalStageBaseServerHandlers
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageServerHandlers(global::Sungero.Docflow.IApprovalStage entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalStageCreatingFromServerHandler : global::Sungero.Docflow.ApprovalStageBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IApprovalStage _source
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Source; }
    }

    private global::Sungero.Docflow.IApprovalStageInfo _info
    {
      get { return (global::Sungero.Docflow.IApprovalStageInfo)this._Info; }
    }

    public ApprovalStageCreatingFromServerHandler(global::Sungero.Docflow.IApprovalStage source, global::Sungero.Docflow.IApprovalStageInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ApprovalStageEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalStageAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalStageAccessRights : 
    Sungero.Docflow.Server.ApprovalStageBaseAccessRights, Sungero.Docflow.IApprovalStageAccessRights
  {

    public ApprovalStageAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalStageTypeAccessRights : 
    Sungero.Docflow.Server.ApprovalStageBaseTypeAccessRights, Sungero.Docflow.IApprovalStageAccessRights
  {

    public ApprovalStageTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ApprovalStageRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalStageRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ApprovalStageBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalStageRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalStage 
    {
       public new global::Sungero.Docflow.IApprovalStageAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalStageAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalStageInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalStageInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ApprovalStageTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalStagePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalStageServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ApprovalStageFunctions : global::Sungero.Docflow.Server.ApprovalStageBaseFunctions
  {
    private global::Sungero.Docflow.IApprovalStage _obj
    {
      get { return (global::Sungero.Docflow.IApprovalStage)this.Entity; }
    }

    public ApprovalStageFunctions(global::Sungero.Docflow.IApprovalStage entity) : base(entity) { }
  }
}

// ==================================================================
// ApprovalStageFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ApprovalStage
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IApprovalStage CreateStage()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("CreateStage",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::Sungero.Docflow.IApprovalStage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.CreateStage();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void DeleteStage(global::Sungero.Docflow.IApprovalStage stage)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DeleteStage",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStage) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { stage });
      }
      else
      {
    global::Sungero.Docflow.Server.ApprovalStageFunctions.DeleteStage(stage);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Company.IEmployee GetRemoteStagePerformer(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRemoteStagePerformer",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IApprovalStage) }, null);
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, stage });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetRemoteStagePerformer(task, stage);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Company.IEmployee GetStagePerformer(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStagePerformer",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IApprovalStage) }, null);
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, stage });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetStagePerformer(task, stage);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::Sungero.Company.IEmployee GetStagePerformer(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStagePerformer",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IApprovalStage), typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, stage, signatory, addressee });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetStagePerformer(task, stage, signatory, addressee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.Int32 GetIndexOfStage(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Core.Enumeration type, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetIndexOfStage",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>) }, null);
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, type, stages });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetIndexOfStage(task, type, stages);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetStagePerformers(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStagePerformers",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IApprovalStage) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, stage });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetStagePerformers(task, stage);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetStagePerformers(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStagePerformers",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IApprovalStage), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, stage, additionalApprovers });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetStagePerformers(task, stage, additionalApprovers);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetStageRecipients(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Docflow.IApprovalTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStageRecipients", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask) });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetStageRecipients(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Docflow.IApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> additionalApprovers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStageRecipients", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, additionalApprovers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAllPerformersFromStage(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Docflow.IApprovalTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAllPerformersFromStage", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask) });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::Sungero.Company.IEmployee GetConfirmByForSignatory(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Company.IEmployee signatory, global::Sungero.Docflow.IApprovalTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetConfirmByForSignatory", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Docflow.IApprovalTask) });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signatory, task });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::Sungero.Company.IEmployee GetAddresseeAssistantForResultSubmission(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Company.IEmployee addressee, global::Sungero.Docflow.IApprovalTask task)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddresseeAssistantForResultSubmission", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Docflow.IApprovalTask) });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressee, task });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetRulesWithImpossibleRoles(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRulesWithImpossibleRoles", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean ClerkCanRegister(global::Sungero.Docflow.IApprovalStage registerStage)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("ClerkCanRegister",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStage) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { registerStage });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.ClerkCanRegister(registerStage);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.String GetStageSettings(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStageSettings", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.String GetReworkSettings(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetReworkSettings", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.String GetAccessRightsSettings(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAccessRightsSettings", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.String GetEmployeePresentation(global::Sungero.Company.IEmployee employee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetEmployeePresentation",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Company.IEmployee) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { employee });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetEmployeePresentation(employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.String GetRecipientDescription(global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalStageFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetRecipientDescription",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { recipient });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalStageFunctions.GetRecipientDescription(recipient);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  void AddStageToRoute(global::Sungero.Docflow.IApprovalStage approvalStage, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ApprovalRuleCardReport.ConditionTableLine> linedRoute, global::System.String prefix, global::System.Int32 level)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddStageToRoute", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.ApprovalRuleCardReport.ConditionTableLine>), typeof(global::System.String), typeof(global::System.Int32) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { linedRoute, prefix, level });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRoleBase> GetSupportedApprovalRolesForRework(global::Sungero.Docflow.IApprovalStage approvalStage, global::System.Boolean withoutContractRoles)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSupportedApprovalRolesForRework", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRoleBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { withoutContractRoles });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.DateTime GetStageMaxDeadline(global::Sungero.Docflow.IApprovalStage approvalStage, global::Sungero.Docflow.IApprovalTask task, global::System.DateTime maxDeadline, global::System.Boolean stageInProcess)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStageMaxDeadline", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::System.DateTime), typeof(global::System.Boolean) });
      return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, maxDeadline, stageInProcess });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalStageFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetSupportableRoles(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSupportableRoles", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  void SetPropertiesVisibility(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetPropertiesVisibility", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  void SetPropertiesAvailability(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetPropertiesAvailability", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetPossibleRoles(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPossibleRoles", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  void SetDefaultRole(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDefaultRole", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  global::System.Boolean HasRole(global::Sungero.Docflow.IApprovalStage approvalStage, global::System.Nullable<global::Sungero.Core.Enumeration> roleType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasRole", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { roleType });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  global::System.String GetDeadlineDescription(global::Sungero.Docflow.IApprovalStage approvalStage, global::System.Int32 performersCount)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDeadlineDescription", new System.Type[] { typeof(global::System.Int32) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { performersCount });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  global::System.String GetDeadlineDescription(global::Sungero.Docflow.IApprovalStage approvalStage, global::System.Int32 performersCount, global::System.String daysHoursSeparator, global::System.Boolean needHoursConvert)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDeadlineDescription", new System.Type[] { typeof(global::System.Int32), typeof(global::System.String), typeof(global::System.Boolean) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { performersCount, daysHoursSeparator, needHoursConvert });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalStageFunctions" />
    internal static  global::System.Nullable<global::Sungero.Core.Enumeration> GetStageType(global::Sungero.Docflow.IApprovalStage approvalStage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalStage).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStageType", new System.Type[] {  });
      return (global::System.Nullable<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// ApprovalStageServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalStageServerPublicFunctions : global::Sungero.Docflow.Server.IApprovalStageServerPublicFunctions
  {
    public global::Sungero.Company.IEmployee GetStagePerformer(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IApprovalStage stage, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee)
    {
      return global::Sungero.Docflow.Functions.ApprovalStage.GetStagePerformer(task, stage, signatory, addressee);
    }
  }
}

// ==================================================================
// ApprovalStageQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ApprovalStage
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ApprovalStage.ApprovalStageQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
