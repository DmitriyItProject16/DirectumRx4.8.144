
// ==================================================================
// AIManagersAssistantClassifiers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Intelligence.Client
{
  public class AIManagersAssistantClassifiers :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Intelligence.IAIManagersAssistantClassifiers
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("2be8589f-99bd-4c62-96dd-593fc1b2e61a");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Intelligence.IAIManagersAssistantClassifiers, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Intelligence.IAIManagersAssistantClassifiersState State
    {
      get
      {
        return (global::Sungero.Intelligence.IAIManagersAssistantClassifiersState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Intelligence.Shared.AIManagersAssistantClassifiersState(this);
    }

    public new global::Sungero.Intelligence.IAIManagersAssistantClassifiersInfo Info
    {
      get
      {
        return (global::Sungero.Intelligence.IAIManagersAssistantClassifiersInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Intelligence.IAIManagersAssistant> _AIManagersAssistant;

    public global::Sungero.Intelligence.IAIManagersAssistant AIManagersAssistant
    {
      get { return this._AIManagersAssistant.Value; }
      set { this._AIManagersAssistant.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.AIManagersAssistant; }
      set { this.AIManagersAssistant = (global::Sungero.Intelligence.IAIManagersAssistant)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ClassifierId;

        public virtual global::System.Int32? ClassifierId
        {
          get { return this._ClassifierId.Value; }
          set { this._ClassifierId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ClassifierType;

        public virtual global::Sungero.Core.Enumeration? ClassifierType
        {
          get { return this._ClassifierType.Value; }
          set { this._ClassifierType.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ClassifierName;

        public virtual global::System.String ClassifierName
        {
          get { return this._ClassifierName.Value; }
          set { this._ClassifierName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _LowerClassificationLimit;

        public virtual global::System.Int32? LowerClassificationLimit
        {
          get { return this._LowerClassificationLimit.Value; }
          set { this._LowerClassificationLimit.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ModelId;

        public virtual global::System.Int32? ModelId
        {
          get { return this._ModelId.Value; }
          set { this._ModelId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _IsModelActive;

        public virtual global::Sungero.Core.Enumeration? IsModelActive
        {
          get { return this._IsModelActive.Value; }
          set { this._IsModelActive.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ClassifierTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Intelligence.AIManagersAssistantClassifiers.ClassifierType),
          typeof(global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers),
          "ClassifierType");

        public static global::Sungero.Domain.Shared.EnumerationItems ClassifierTypeItems
        {
          get { return global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers._ClassifierTypeItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ClassifierTypeAllowedItems
        {
          get { return global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers.ClassifierTypeItems; }
        }

        private static global::Sungero.Domain.Shared.EnumerationItems _IsModelActiveItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.Intelligence.AIManagersAssistantClassifiers.IsModelActive),
          typeof(global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers),
          "IsModelActive");

        public static global::Sungero.Domain.Shared.EnumerationItems IsModelActiveItems
        {
          get { return global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers._IsModelActiveItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems IsModelActiveAllowedItems
        {
          get { return global::Sungero.Intelligence.Client.AIManagersAssistantClassifiers.IsModelActiveItems; }
        }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Intelligence.AIManagersAssistantClassifiersSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void ClassifierIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ClassifierId, this.ClassifierId, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersClassifierIdChanged(args);
    }

    protected void ClassifierTypeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ClassifierType, this.ClassifierType, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersClassifierTypeChanged(args);
    }

    protected void ClassifierNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ClassifierName, this.ClassifierName, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersClassifierNameChanged(args);
    }

    protected void LowerClassificationLimitChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.LowerClassificationLimit, this.LowerClassificationLimit, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersLowerClassificationLimitChanged(args);
    }

    protected void ModelIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ModelId, this.ModelId, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersModelIdChanged(args);
    }

    protected void IsModelActiveChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.IsModelActive, this.IsModelActive, this);
     ((global::Sungero.Intelligence.IAIManagersAssistantClassifiersSharedHandlers)this.SharedHandlers).ClassifiersIsModelActiveChanged(args);
    }



  protected global::System.Int32? ClassifierIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ClassifierId, value, this, this.Info.Properties.ClassifierId);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersClassifierIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ClassifierTypeValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ClassifierType, value, this, this.Info.Properties.ClassifierType);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersClassifierTypeValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ClassifierNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ClassifierName, value, this, this.Info.Properties.ClassifierName);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersClassifierNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? LowerClassificationLimitValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.LowerClassificationLimit, value, this, this.Info.Properties.LowerClassificationLimit);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersLowerClassificationLimitValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ModelIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ModelId, value, this, this.Info.Properties.ModelId);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersModelIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? IsModelActiveValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.IsModelActive, value, this, this.Info.Properties.IsModelActive);
    ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersIsModelActiveValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ClassifierTypeFilteringHandler()
  {
    return ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersClassifierTypeFiltering(this.ClassifierTypeAllowedItems);
  }




  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> IsModelActiveFilteringHandler()
  {
    return ((global::Sungero.Intelligence.AIManagersAssistantClassifiersClientHandlers)this.Handlers).ClassifiersIsModelActiveFiltering(this.IsModelActiveAllowedItems);
  }


    #endregion

    #region Constructors



    public AIManagersAssistantClassifiers()
    {
      this._AIManagersAssistant = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Intelligence.IAIManagersAssistant>("AIManagersAssistant", this, true);

            this._ClassifierId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ClassifierId", this);
            this._ClassifierId.ValueChanged += (sender, e) => { this.ClassifierIdChangedHandler(); };
            this.AddProperty(this._ClassifierId);

            this._ClassifierType = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ClassifierType", this);
            this._ClassifierType.ValueChanged += (sender, e) => { this.ClassifierTypeChangedHandler(); };
            this.AddProperty(this._ClassifierType);

            this._ClassifierName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ClassifierName", this);
            this._ClassifierName.ValueChanged += (sender, e) => { this.ClassifierNameChangedHandler(); };
            this.AddProperty(this._ClassifierName);

            this._LowerClassificationLimit = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("LowerClassificationLimit", this);
            this._LowerClassificationLimit.ValueChanged += (sender, e) => { this.LowerClassificationLimitChangedHandler(); };
            this.AddProperty(this._LowerClassificationLimit);

            this._ModelId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ModelId", this);
            this._ModelId.ValueChanged += (sender, e) => { this.ModelIdChangedHandler(); };
            this.AddProperty(this._ModelId);

            this._IsModelActive = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("IsModelActive", this);
            this._IsModelActive.ValueChanged += (sender, e) => { this.IsModelActiveChangedHandler(); };
            this.AddProperty(this._IsModelActive);








    }

    #endregion

  }
}
