
// ==================================================================
// MobileAppSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileAppSetting :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.MobileApps.IMobileAppSetting
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("210b9d5c-0218-43c5-b950-c69a65caec9b");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.MobileApps.Client.MobileAppSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.MobileApps.IMobileAppSetting, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Employee == null ? string.Empty : this.Employee.ToString(); }
        set { throw new global::System.NotSupportedException(global::CommonLibrary.Properties.Resources.SpecifiedPropertyIsNotSupportedFormat("DisplayValue")); }
      }

      public override string DisplayPropertyName
      {
        get { return "Employee"; }
      }


    public new global::Sungero.MobileApps.IMobileAppSettingState State
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileAppSettingState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.MobileApps.Shared.MobileAppSettingState(this);
    }

    public new global::Sungero.MobileApps.IMobileAppSettingInfo Info
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileAppSettingInfo)base.Info;
      }
    }

    public new global::Sungero.MobileApps.IMobileAppSettingAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.MobileApps.IMobileAppSettingAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingAccessRights(this);
    }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Employee;

              public virtual global::Sungero.Company.IEmployee Employee
              {
              get
              {
                return this._Employee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Employee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }







          protected global::Sungero.Domain.Client.IListProperty<global::Sungero.MobileApps.IMobileAppSettingVisibleFolders> _VisibleFolders;

          virtual public global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.MobileApps.IMobileAppSettingVisibleFolders> VisibleFolders
          {
            get { return this._VisibleFolders.Value; }
          }






    private object _VisibleFoldersActionsHandlers;

    public object VisibleFoldersActionsHandlers
    {
      get
      {
        if (this._VisibleFoldersActionsHandlers == null)
          this._VisibleFoldersActionsHandlers = this.CreateVisibleFoldersActionsHandlers();
        return this._VisibleFoldersActionsHandlers;
      }
    }

    private object _VisibleFoldersCollectionActionsHandlers;

    public object VisibleFoldersCollectionActionsHandlers
    {
      get
      {
        if (this._VisibleFoldersCollectionActionsHandlers == null)
          this._VisibleFoldersCollectionActionsHandlers = this.CreateVisibleFoldersCollectionActionsHandlers();
        return this._VisibleFoldersCollectionActionsHandlers;
      }
    }

    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingAnyChildEntityCollectionActions();
    }

    protected virtual object CreateVisibleFoldersActionsHandlers()
    {
      return null;
    }

    protected virtual object CreateVisibleFoldersCollectionActionsHandlers()
    {
      return null;
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.MobileApps.Client.MobileAppSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.MobileApps.Shared.MobileAppSettingFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.MobileApps.MobileAppSettingClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.MobileApps.MobileAppSettingSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void EmployeeChangedHandler()
    {
      var args = new global::Sungero.MobileApps.Shared.MobileAppSettingEmployeeChangedEventArgs(this.State.Properties.Employee, this.Employee, this);
     ((global::Sungero.MobileApps.IMobileAppSettingSharedHandlers)this.SharedHandlers).EmployeeChanged(args);
    }

    protected void VisibleFoldersChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.MobileApps.IMobileAppSettingSharedHandlers)this.SharedHandlers).VisibleFoldersChanged(args);
    }



    protected virtual global::Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers CreateVisibleFoldersAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers CreateVisibleFoldersDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void VisibleFoldersAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("VisibleFoldersAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateVisibleFoldersAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.VisibleFoldersAdded(args);
        }
      }
    }

    protected virtual void VisibleFoldersDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.MobileApps.MobileAppSettingVisibleFoldersSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("VisibleFoldersDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateVisibleFoldersDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.VisibleFoldersDeleted(args);
        }
      }
    }


  protected global::Sungero.Company.IEmployee EmployeeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.MobileApps.Client.MobileAppSettingEmployeeValueInputEventArgs(this.Employee, value, this, this.Info.Properties.Employee);
    ((global::Sungero.MobileApps.MobileAppSettingClientHandlers)this.Handlers).EmployeeValueInput(args);
    return args.NewValue;
  }




    #endregion

    #region Constructors



              protected virtual void InitEmployeeNavigationProperty()
              {
                this._Employee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Employee", this);
                this._Employee.ValueChanged += (sender, e) => { this.EmployeeChangedHandler(); };
                this.AddProperty(this._Employee as global::Sungero.Domain.Client.IProperty);
              }



            protected virtual void InitVisibleFoldersCollectionProperty()
            {
              this._VisibleFolders = new global::Sungero.Domain.Client.ListProperty<global::Sungero.MobileApps.IMobileAppSettingVisibleFolders>("VisibleFolders", this);
              this._VisibleFolders.ValueChanged += (sender, e) => { this.VisibleFoldersChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._VisibleFolders);
              this.SetVisibleFoldersEventHandlers();
            }

            protected void SetVisibleFoldersEventHandlers()
            {
              this._VisibleFolders.ChildEntityAdded += this.VisibleFoldersAddedHandler;
              this._VisibleFolders.ChildEntityDeleted += this.VisibleFoldersDeletedHandler;
            }


    public MobileAppSetting()
    {

            this.InitEmployeeNavigationProperty();


            this.InitVisibleFoldersCollectionProperty();







    }

    #endregion

  }
}

// ==================================================================
// MobileAppSettingPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileAppSettingPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.MobileApps.IMobileAppSetting
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _ResetCommand;

          public global::System.Windows.Input.ICommand ResetCommand
          {
            get
            {
              if (this._ResetCommand == null)
                  this._ResetCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("Reset", this, this.Reset, this.CanReset) { IsEmptyParameterAllowed = true };
              return this._ResetCommand;
            }
          }
          private global::System.Windows.Input.ICommand _AddFolderCommand;

          public global::System.Windows.Input.ICommand AddFolderCommand
          {
            get
            {
              if (this._AddFolderCommand == null)
                  this._AddFolderCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("AddFolder", this, this.AddFolder, this.CanAddFolder) { IsEmptyParameterAllowed = true };
              return this._AddFolderCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanReset(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.MobileApps.Client.MobileAppSettingActions)(entity as Sungero.MobileApps.Client.MobileAppSetting).ActionsHandlers).CanReset(args);
              }

              private void Reset(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.Reset);
                ((Sungero.MobileApps.Client.MobileAppSettingActions)(entity as Sungero.MobileApps.Client.MobileAppSetting).ActionsHandlers).Reset(args);
              }
              private bool CanAddFolder(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.MobileApps.Client.MobileAppSettingActions)(entity as Sungero.MobileApps.Client.MobileAppSetting).ActionsHandlers).CanAddFolder(args);
              }

              private void AddFolder(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.AddFolder);
                ((Sungero.MobileApps.Client.MobileAppSettingActions)(entity as Sungero.MobileApps.Client.MobileAppSetting).ActionsHandlers).AddFolder(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _EmployeeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter EmployeeCollectionPresenter
              {
          get { return this._EmployeeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._EmployeeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("e7cd1bbb-19b5-42ec-b5dc-af3dc3cf2119"));
              this._EmployeeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Employee");


    }

    public MobileAppSettingPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// MobileAppSettingCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileAppSettingCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.MobileApps.IMobileAppSetting
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public MobileAppSettingCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public MobileAppSettingCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public MobileAppSettingCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public MobileAppSettingCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// MobileAppSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{ 
  public class MobileAppSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.MobileApps.IMobileAppSettingRepositoryImplementer<T>
      where T : global::Sungero.MobileApps.IMobileAppSetting
    {
       public new global::Sungero.MobileApps.IMobileAppSettingAccessRights AccessRights
       {
          get { return (global::Sungero.MobileApps.IMobileAppSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.MobileApps.IMobileAppSettingInfo Info
       {
          get { return (global::Sungero.MobileApps.IMobileAppSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.MobileApps.Client.MobileAppSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// MobileAppSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.MobileApps.Client
{
  public class MobileAppSettingAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.MobileApps.IMobileAppSettingAccessRights
  {

    public MobileAppSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class MobileAppSettingTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.MobileApps.IMobileAppSettingAccessRights
  {

    public MobileAppSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
