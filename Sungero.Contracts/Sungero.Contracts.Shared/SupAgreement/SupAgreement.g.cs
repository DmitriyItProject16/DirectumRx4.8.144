
// ==================================================================
// SupAgreementState.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class SupAgreementState : 
    global::Sungero.Contracts.Shared.ContractualDocumentState, global::Sungero.Contracts.ISupAgreementState
  {
    public SupAgreementState(global::Sungero.Contracts.ISupAgreement entity) : base(entity) { }

    public new global::Sungero.Contracts.ISupAgreementPropertyStates Properties
    {
      get { return (global::Sungero.Contracts.ISupAgreementPropertyStates)base.Properties; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertyStates CreatePropertyStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.SupAgreementPropertyStates(entity);
    }


    public new global::Sungero.Contracts.ISupAgreementControlStates Controls
    {
      get { return (global::Sungero.Contracts.ISupAgreementControlStates)base.Controls; }
    }

    protected override global::Sungero.Domain.Shared.IEntityControlStates CreateControlStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.SupAgreementControlStates(entity);
    }

    public new global::Sungero.Contracts.ISupAgreementPageStates Pages
    {
      get { return (global::Sungero.Contracts.ISupAgreementPageStates)base.Pages; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPageStates CreatePageStates(global::Sungero.Domain.Shared.IEntity entity)
    {
      return new global::Sungero.Contracts.Shared.SupAgreementPageStates(entity);
    }

  }


  public class SupAgreementControlStates : 
    global::Sungero.Contracts.Shared.ContractualDocumentControlStates, global::Sungero.Contracts.ISupAgreementControlStates
  {

    protected internal SupAgreementControlStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }
  public class SupAgreementPageStates : 
    global::Sungero.Contracts.Shared.ContractualDocumentPageStates, global::Sungero.Contracts.ISupAgreementPageStates
  {

    protected internal SupAgreementPageStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

  public class SupAgreementPropertyStates : 
    global::Sungero.Contracts.Shared.ContractualDocumentPropertyStates, global::Sungero.Contracts.ISupAgreementPropertyStates
  {
            public new global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Contracts.IContractBase> LeadingDocument
            {
              get { return (global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Contracts.IContractBase>)base.LeadingDocument; }
            }

            protected override global::Sungero.Domain.Shared.IPropertyState<global::Sungero.Docflow.IOfficialDocument> InternalLeadingDocument
            {
              get { return this.GetPropertyState<global::Sungero.Contracts.IContractBase>("LeadingDocument"); }
            }
            public new global::Sungero.Contracts.ISupAgreementVersionsCollectionPropertyState<global::Sungero.Contracts.ISupAgreementVersions> Versions
            {
              get { return (global::Sungero.Contracts.ISupAgreementVersionsCollectionPropertyState<global::Sungero.Contracts.ISupAgreementVersions>)base.Versions; }
            }

            protected override global::Sungero.Content.IElectronicDocumentVersionsCollectionPropertyState<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.SupAgreementVersionsCollectionPropertyState<global::Sungero.Contracts.ISupAgreementVersions>(entity, propertyName);
            }
            public new global::Sungero.Contracts.ISupAgreementTrackingCollectionPropertyState<global::Sungero.Contracts.ISupAgreementTracking> Tracking
            {
              get { return (global::Sungero.Contracts.ISupAgreementTrackingCollectionPropertyState<global::Sungero.Contracts.ISupAgreementTracking>)base.Tracking; }
            }

            protected override global::Sungero.Docflow.IOfficialDocumentTrackingCollectionPropertyState<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.SupAgreementTrackingCollectionPropertyState<global::Sungero.Contracts.ISupAgreementTracking>(entity, propertyName);
            }
            public new global::Sungero.Contracts.ISupAgreementStagesCollectionPropertyState<global::Sungero.Contracts.ISupAgreementStages> Milestones
            {
              get { return (global::Sungero.Contracts.ISupAgreementStagesCollectionPropertyState<global::Sungero.Contracts.ISupAgreementStages>)base.Milestones; }
            }

            protected override global::Sungero.Contracts.IContractualDocumentMilestonesCollectionPropertyState<global::Sungero.Contracts.IContractualDocumentMilestones> CreateMilestonesState(global::Sungero.Domain.Shared.IEntity entity, string propertyName)
            {
              return new global::Sungero.Contracts.Shared.SupAgreementStagesCollectionPropertyState<global::Sungero.Contracts.ISupAgreementStages>(entity, propertyName);
            }


    protected internal SupAgreementPropertyStates(global::Sungero.Domain.Shared.IEntity entity) : base(entity) { }
  }

}

// ==================================================================
// SupAgreementInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class SupAgreementInfo : 
    global::Sungero.Contracts.Shared.ContractualDocumentInfo, global::Sungero.Contracts.ISupAgreementInfo
  {
    public SupAgreementInfo(global::System.Type entityType) : base(entityType) { }

    public new global::Sungero.Contracts.ISupAgreementPropertiesInfo Properties
    {
      get { return (global::Sungero.Contracts.ISupAgreementPropertiesInfo)base.Properties; }
    }

    public new global::Sungero.Contracts.ISupAgreementActionsInfo Actions
    {
      get { return (global::Sungero.Contracts.ISupAgreementActionsInfo)base.Actions; }
    }

    protected override global::Sungero.Domain.Shared.IEntityPropertiesInfo CreateEntityPropertiesInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.SupAgreementPropertiesInfo(entityType);
    }

    protected override global::Sungero.Domain.Shared.IEntityActionsInfo CreateEntityActionsInfo(global::System.Type entityType)
    {
      return new global::Sungero.Contracts.Shared.SupAgreementActionsInfo(entityType);
    }
  }

  public class SupAgreementPropertiesInfo : 
    global::Sungero.Contracts.Shared.ContractualDocumentPropertiesInfo, global::Sungero.Contracts.ISupAgreementPropertiesInfo
  {
        public new global::Sungero.Domain.Shared.INavigationPropertyInfo<global::Sungero.Contracts.IContractBaseInfo, global::Sungero.Contracts.IContractBase> LeadingDocument
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.NavigationPropertyMetadata>("LeadingDocument");
             return new global::Sungero.Domain.Shared.NavigationPropertyInfo<global::Sungero.Contracts.IContractBaseInfo, global::Sungero.Contracts.IContractBase>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementVersionsPropertiesInfo> Versions
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Versions");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementVersionsPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementTrackingPropertiesInfo> Tracking
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Tracking");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementTrackingPropertiesInfo>(propertyMetadata);
          }
        }
        public new global::Sungero.Domain.Shared.ICollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementStagesPropertiesInfo> Milestones
        {
          get
          {
             var propertyMetadata = this.GetPropertyMetadata<global::Sungero.Metadata.CollectionPropertyMetadata>("Milestones");
             return new global::Sungero.Domain.Shared.CollectionPropertyInfo<global::Sungero.Contracts.ISupAgreementStagesPropertiesInfo>(propertyMetadata);
          }
        }


    protected internal SupAgreementPropertiesInfo(global::System.Type entityType) : base(entityType) { }
  }

  public class SupAgreementActionsInfo : 
    global::Sungero.Contracts.Shared.ContractualDocumentActionsInfo, global::Sungero.Contracts.ISupAgreementActionsInfo
  {
        public global::Sungero.Domain.Shared.IActionInfo CreateContractStatement 
        {
          get { return new global::Sungero.Domain.Shared.ActionInfo(this.GetActionMetadata("CreateContractStatement")); }
        }


    protected internal SupAgreementActionsInfo(global::System.Type entityType) : base(entityType) { }
  }
}

// ==================================================================
// SupAgreementHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class SupAgreementSharedHandlers : global::Sungero.Contracts.ContractualDocumentSharedHandlers, ISupAgreementSharedHandlers
  {
    private global::Sungero.Contracts.ISupAgreement _obj
    {
      get { return (global::Sungero.Contracts.ISupAgreement)this.Entity; }
    }


    public SupAgreementSharedHandlers(global::Sungero.Contracts.ISupAgreement entity) : base(entity)
    {
    }
  }

}

// ==================================================================
// SupAgreementResources.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared.SupAgreement
{
  /// <summary>
  /// Represents SupAgreement resources.
  /// </summary>
  public class SupAgreementResources : global::Sungero.Contracts.Shared.ContractualDocument.ContractualDocumentResources, global::Sungero.Contracts.SupAgreement.ISupAgreementResources
  {
    public virtual global::CommonLibrary.LocalizedString IncorrectValidDates
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement) , "IncorrectValidDates");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IncorrectValidDatesFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement), "IncorrectValidDates", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IsNotStandartSupAgreement
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement) , "IsNotStandartSupAgreement");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IsNotStandartSupAgreementFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement), "IsNotStandartSupAgreement", false, args);
    }
    public virtual global::CommonLibrary.LocalizedString IsStandartSupAgreement
    {
      get
      {
        return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement) , "IsStandartSupAgreement");
      }
    }

    public virtual global::CommonLibrary.LocalizedString IsStandartSupAgreementFormat(params object[] args)
    {
      return global::Sungero.Domain.Shared.ResourceService.Instance.GetEntityStringResource(typeof(Sungero.Contracts.ISupAgreement), "IsStandartSupAgreement", false, args);
    }

  }
}

// ==================================================================
// SupAgreementSharedFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared
{
  public partial class SupAgreementFunctions : global::Sungero.Contracts.Shared.ContractualDocumentFunctions
  {
    private global::Sungero.Contracts.ISupAgreement _obj
    {
      get { return (global::Sungero.Contracts.ISupAgreement)this.Entity; }
    }

    public SupAgreementFunctions(global::Sungero.Contracts.ISupAgreement entity) : base(entity) { }
  }
}

// ==================================================================
// SupAgreementFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class SupAgreement
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean IsVerificationModeSupported(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsVerificationModeSupported", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasEmptyRequiredProperties", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::Sungero.Docflow.IDocumentGroupBase GetDocumentGroup(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentGroup", new System.Type[] {  });
      return (global::Sungero.Docflow.IDocumentGroupBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.Boolean HaveDuplicates(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Docflow.IOfficialDocument contract)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("HaveDuplicates",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement), typeof(global::Sungero.Company.IBusinessUnit), typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.HaveDuplicates(supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetLeadDocumentNumber(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLeadDocumentNumber", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetNamePartBySupAgreement(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetNamePartBySupAgreement",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.GetNamePartBySupAgreement(supAgreement);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  global::System.String GetSupAgreementNamePart(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.Shared.SupAgreementFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetSupAgreementNamePart",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Contracts.ISupAgreement) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { supAgreement });
      }
      else
      {
        return global::Sungero.Contracts.Shared.SupAgreementFunctions.GetSupAgreementNamePart(supAgreement);
      }
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void SetObsolete(global::Sungero.Contracts.ISupAgreement supAgreement, global::System.Boolean isActive)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetObsolete", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isActive });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void FillName(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Contracts.ISupAgreement supAgreement, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, isRepeatRegister });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Contracts.ISupAgreement supAgreement, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.SupAgreementFunctions" />
    internal static  void FillLeadingDocument(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Docflow.IOfficialDocument leadingDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)supAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillLeadingDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { leadingDocument });
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.Linq.IQueryable<global::Sungero.Contracts.ISupAgreement> GetDuplicates(global::Sungero.Contracts.ISupAgreement supAgreement, global::Sungero.Company.IBusinessUnit businessUnit, global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDate, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Docflow.IOfficialDocument contract)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Contracts.ISupAgreement>>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetDuplicates(global::Sungero.Contracts.ISupAgreement,global::Sungero.Company.IBusinessUnit,global::System.String,global::System.Nullable<global::System.DateTime>,global::Sungero.Parties.ICounterparty,global::Sungero.Docflow.IOfficialDocument)"
      , supAgreement, businessUnit, registrationNumber, registrationDate, counterparty, contract);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.String GetNamePartBySupAgreementIgnoreAccessRights(global::System.Int64 supAgreementId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetNamePartBySupAgreementIgnoreAccessRights(global::System.Int64)"
      , supAgreementId);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase> GetApprovalRules(global::Sungero.Contracts.ISupAgreement supAgreement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IApprovalRuleBase>>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetApprovalRules(global::Sungero.Contracts.ISupAgreement)"
          , supAgreement);
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.SupAgreementFunctions" />
      internal static  global::Sungero.Docflow.IApprovalRuleBase GetDefaultApprovalRule(global::Sungero.Contracts.ISupAgreement supAgreement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Docflow.IApprovalRuleBase>(
          global::System.Guid.Parse("265f2c57-6a8a-4a15-833b-ca00e8047fa5"),
          "GetDefaultApprovalRule(global::Sungero.Contracts.ISupAgreement)"
          , supAgreement);
      }

    }
  }
}

// ==================================================================
// SupAgreementFilterState.g.cs
// ==================================================================

namespace Sungero.Contracts.Shared.SupAgreement
{

  public class SupAgreementFilterInfo : global::Sungero.Contracts.Shared.ContractualDocument.ContractualDocumentFilterInfo,
    global::Sungero.Contracts.ISupAgreementFilterInfo
  {
  }

  public class SupAgreementFilterState : global::Sungero.Contracts.Shared.ContractualDocument.ContractualDocumentFilterState,
    global::Sungero.Contracts.ISupAgreementFilterState
  {



    public new Sungero.Contracts.ISupAgreementFilterInfo Info
    {
      get
      {
        return (Sungero.Contracts.ISupAgreementFilterInfo) base.Info;
      }
    }
    protected override global::Sungero.Domain.Shared.IFilterInfo CreateFilterInfo()
    {
      return new Sungero.Contracts.Shared.SupAgreement.SupAgreementFilterInfo();
    }

  }
}

// ==================================================================
// SupAgreementSharedPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Shared
{
  public class SupAgreementSharedPublicFunctions : global::Sungero.Contracts.Shared.ISupAgreementSharedPublicFunctions
  {
    public global::Sungero.Docflow.IApprovalRuleBase Remote_GetDefaultApprovalRule(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      return global::Sungero.Contracts.Functions.SupAgreement.Remote.GetDefaultApprovalRule(supAgreement);
    }
    public global::System.String GetSupAgreementNamePart(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      return global::Sungero.Contracts.Functions.SupAgreement.GetSupAgreementNamePart(supAgreement);
    }
    public global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      return global::Sungero.Contracts.Functions.SupAgreement.HasEmptyRequiredProperties(supAgreement);
    }
    public global::System.Boolean IsVerificationModeSupported(global::Sungero.Contracts.ISupAgreement supAgreement)
    {
      return global::Sungero.Contracts.Functions.SupAgreement.IsVerificationModeSupported(supAgreement);
    }
  }
}
