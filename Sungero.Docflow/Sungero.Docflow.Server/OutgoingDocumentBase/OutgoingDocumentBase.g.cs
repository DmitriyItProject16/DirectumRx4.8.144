
// ==================================================================
// OutgoingDocumentBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OutgoingDocumentBaseFilter<T> :
      global::Sungero.Docflow.Server.OfficialDocumentFilter<T>
      where T : class, global::Sungero.Docflow.IOutgoingDocumentBase
    {
      private global::Sungero.Docflow.IOutgoingDocumentBaseFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        global::System.Linq.IQueryable<T> result;
        var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler`1");
        if (filterType != null)
        {
          var genericType = filterType.MakeGenericType(typeof(T));
          var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { this.filter });
          var methodInfo = genericType.GetMethod("Filtering");
          result = (global::System.Linq.IQueryable<T>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
        }
        else
        {
          result = new global::Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler<T>(this.filter).Filtering(query, args);
        }
        if (args.DisableCheckRights)
        global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public OutgoingDocumentBaseFilter(global::Sungero.Docflow.IOutgoingDocumentBaseFilterState filter)
      : base(filter)
      {
      }

      protected OutgoingDocumentBaseFilter()
      {
      }
    }
    public class OutgoingDocumentBaseSearchDialogModel : global::Sungero.Docflow.Server.OfficialDocumentSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }


                  public virtual global::System.Boolean? IsManyAddressees { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IIncomingDocumentBase> InResponseTo { get; protected set; }


                   public new OutgoingDocumentBaseVersionsModel Versions { get { return (OutgoingDocumentBaseVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new OutgoingDocumentBaseTrackingModel Tracking { get { return (OutgoingDocumentBaseTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }
                   public OutgoingDocumentBaseAddresseesModel Addressees { get; protected set; }

        }

      public class OutgoingDocumentBaseVersionsModel : global::Sungero.Docflow.Server.OfficialDocumentVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class OutgoingDocumentBaseTrackingModel : global::Sungero.Docflow.Server.OfficialDocumentTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class OutgoingDocumentBaseAddresseesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.Parties.ICounterparty> Correspondent { get; protected set; }
                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.Parties.IContact> Addressee { get; protected set; }

         }



  public class OutgoingDocumentBaseFilterForCorrespondent<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
    where TSourceEntity : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseCorrespondentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("CorrespondentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseCorrespondentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CorrespondentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseFilterForCorrespondent(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OutgoingDocumentBaseSearchFilterForCorrespondent<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.ICounterparty
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("CorrespondentSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler<TQueryEntity>().CorrespondentSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseSearchFilterForCorrespondent(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OutgoingDocumentBaseFilterForInResponseTo<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
    where TSourceEntity : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseInResponseToPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("InResponseToFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseInResponseToPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).InResponseToFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseFilterForInResponseTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OutgoingDocumentBaseSearchFilterForInResponseTo<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseInResponseToSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("InResponseToSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseInResponseToSearchPropertyFilteringServerHandler<TQueryEntity>().InResponseToSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseSearchFilterForInResponseTo(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OutgoingDocumentBaseFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Parties.IContact
    where TSourceEntity : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseAddresseePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AddresseeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class OutgoingDocumentBaseSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Parties.IContact
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseAddresseeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.OutgoingDocumentBaseAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public OutgoingDocumentBaseSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseFilter<global::Sungero.Docflow.IOutgoingDocumentBase>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseFilterForCorrespondent<global::Sungero.Parties.ICounterparty, global::Sungero.Docflow.IOutgoingDocumentBase>), "Correspondent")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchFilterForCorrespondent<global::Sungero.Parties.ICounterparty>), "Correspondent")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseFilterForInResponseTo<global::Sungero.Docflow.IIncomingDocumentBase, global::Sungero.Docflow.IOutgoingDocumentBase>), "InResponseTo")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchFilterForInResponseTo<global::Sungero.Docflow.IIncomingDocumentBase>), "InResponseTo")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseFilterForAddressee<global::Sungero.Parties.IContact, global::Sungero.Docflow.IOutgoingDocumentBase>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchFilterForAddressee<global::Sungero.Parties.IContact>), "Addressee")]


  public class OutgoingDocumentBase :
    global::Sungero.Docflow.Server.OfficialDocument, global::Sungero.Docflow.IOutgoingDocumentBase, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("f5f104fb-52e4-422b-9de1-a36937d85a2d");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.OutgoingDocumentBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IOutgoingDocumentBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IOutgoingDocumentBaseState State
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.OutgoingDocumentBaseState(this);
    }

    public new virtual global::Sungero.Docflow.IOutgoingDocumentBaseInfo Info
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.OutgoingDocumentBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.OutgoingDocumentBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.OutgoingDocumentBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.OutgoingDocumentBaseSharedHandlers(this);
    }

    private global::System.Boolean? _IsManyAddressees;
    public virtual global::System.Boolean? IsManyAddressees
    {
      get
      {
        return this._IsManyAddressees;
      }

      set
      {
        this.SetPropertyValue("IsManyAddressees", this._IsManyAddressees, value, (propertyValue) => { this._IsManyAddressees = propertyValue; }, this.IsManyAddresseesChangedHandler);
      }
    }
    private global::System.String _DistributionCorrespondent;
    public virtual global::System.String DistributionCorrespondent
    {
      get
      {
        return this._DistributionCorrespondent;
      }

      set
      {
        this.SetPropertyValue("DistributionCorrespondent", this._DistributionCorrespondent, value, (propertyValue) => { this._DistributionCorrespondent = propertyValue; }, this.DistributionCorrespondentChangedHandler);
      }
    }
    private global::System.DateTime? _SentDate;
    public virtual global::System.DateTime? SentDate
    {
      get
      {
        return this._SentDate;
      }

      set
      {
        this.SetPropertyValue("SentDate", this._SentDate, value, (propertyValue) => { this._SentDate = propertyValue; }, this.SentDateChangedHandler);
      }
    }
    private global::System.String _TrackNumber;
    public virtual global::System.String TrackNumber
    {
      get
      {
        return this._TrackNumber;
      }

      set
      {
        this.SetPropertyValue("TrackNumber", this._TrackNumber, value, (propertyValue) => { this._TrackNumber = propertyValue; }, this.TrackNumberChangedHandler);
      }
    }







    private global::Sungero.Parties.ICounterparty _Correspondent;
    public virtual global::Sungero.Parties.ICounterparty Correspondent
    {
      get
      {
        return this._Correspondent;
      }

      set
      {
        this.SetPropertyValue("Correspondent", this._Correspondent, value, (propertyValue) => { this._Correspondent = propertyValue; }, this.CorrespondentChangedHandler);
      }
    }
    private global::Sungero.Docflow.IIncomingDocumentBase _InResponseTo;
    public virtual global::Sungero.Docflow.IIncomingDocumentBase InResponseTo
    {
      get
      {
        return this._InResponseTo;
      }

      set
      {
        this.SetPropertyValue("InResponseTo", this._InResponseTo, value, (propertyValue) => { this._InResponseTo = propertyValue; }, this.InResponseToChangedHandler);
      }
    }
    private global::Sungero.Parties.IContact _Addressee;
    public virtual global::Sungero.Parties.IContact Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees> _Addressees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees> Addressees
    {
      get
      {
        if (this._Addressees == null)
        {
          this._Addressees = this.CreateAddresseesCollection();
          this.SetAddresseesEventHandlers();
        }
        return this._Addressees;
      }

      set
      {
        if (this._Addressees != null)
          this.UnsetChildCollectionEventHandlers(this._Addressees);

        this._Addressees = value;
        this.SetAddresseesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees> CreateAddresseesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseAddressees>() { RootEntity = this };
    }

    private void SetAddresseesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Addressees, "Addressees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Addressees;
      changeNotifier.Added += this.AddresseesAddedHandler;
      changeNotifier.Deleted += this.AddresseesDeletedHandler;
      changeNotifier.Added += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddresseesCollectionUpdateEventHandler;
    }

    private void AddresseesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Addressees"))
        this.AddresseesChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IOutgoingDocumentBaseTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.OutgoingDocumentBaseCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IOutgoingDocumentBase)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.OutgoingDocumentBaseCreatingFromServerHandler((global::Sungero.Docflow.IOutgoingDocumentBase)entitySource, this.Info);
    }

    #region Framework events

    protected void CorrespondentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseCorrespondentChangedEventArgs(this.State.Properties.Correspondent, this.Correspondent, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).CorrespondentChanged(args);
    }

    protected void InResponseToChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseInResponseToChangedEventArgs(this.State.Properties.InResponseTo, this.InResponseTo, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).InResponseToChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.OutgoingDocumentBaseAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void IsManyAddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsManyAddressees, this.IsManyAddressees, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).IsManyAddresseesChanged(args);
    }

    protected void AddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).AddresseesChanged(args);
    }

    protected void DistributionCorrespondentChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DistributionCorrespondent, this.DistributionCorrespondent, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).DistributionCorrespondentChanged(args);
    }

    protected void SentDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.SentDate, this.SentDate, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).SentDateChanged(args);
    }

    protected void TrackNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.TrackNumber, this.TrackNumber, this);
     ((global::Sungero.Docflow.IOutgoingDocumentBaseSharedHandlers)this.SharedHandlers).TrackNumberChanged(args);
    }





    protected virtual global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers CreateAddresseesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers CreateAddresseesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddresseesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddresseesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddresseesAdded(args);
        }
      }
    }

    protected virtual void AddresseesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.OutgoingDocumentBaseAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddresseesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddresseesDeleted(args);
        }
      }
    }


    #endregion


    public OutgoingDocumentBase()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.OutgoingDocumentBaseConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Docflow.OutgoingDocumentBaseConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// OutgoingDocumentBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OutgoingDocumentBaseCorrespondentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> CorrespondentFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public OutgoingDocumentBaseCorrespondentPropertyFilteringServerHandler(global::Sungero.Docflow.IOutgoingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.ICounterparty
  {

    public virtual global::System.Linq.IQueryable<T> CorrespondentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OutgoingDocumentBaseCorrespondentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OutgoingDocumentBaseInResponseToPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Entity; }
    }

    public OutgoingDocumentBaseInResponseToPropertyFilteringServerHandler(global::Sungero.Docflow.IOutgoingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingDocumentBaseInResponseToSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IIncomingDocumentBase
  {

    public virtual global::System.Linq.IQueryable<T> InResponseToSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OutgoingDocumentBaseInResponseToSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class OutgoingDocumentBaseAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IContact
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Entity; }
    }

    public OutgoingDocumentBaseAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IOutgoingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingDocumentBaseAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Parties.IContact
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public OutgoingDocumentBaseAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class OutgoingDocumentBaseFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IOutgoingDocumentBase
  {
    private global::Sungero.Docflow.IOutgoingDocumentBaseFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.Filter;
      }
    }

    public OutgoingDocumentBaseFilteringServerHandler(global::Sungero.Docflow.IOutgoingDocumentBaseFilterState filter)
    : base(filter)
    {
    }

    protected OutgoingDocumentBaseFilteringServerHandler()
    {
    }

      public virtual global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> CounterpartyFiltering(global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        return query;
      }



  }

  public partial class OutgoingDocumentBaseSearchDialogServerHandler : global::Sungero.Docflow.OfficialDocumentSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchDialogModel)this.Dialog;
       }
     }

     public OutgoingDocumentBaseSearchDialogServerHandler(global::Sungero.Docflow.Server.OutgoingDocumentBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class OutgoingDocumentBaseServerHandlers : global::Sungero.Docflow.OfficialDocumentServerHandlers
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Entity; }
    }

    public OutgoingDocumentBaseServerHandlers(global::Sungero.Docflow.IOutgoingDocumentBase entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingDocumentBaseCreatingFromServerHandler : global::Sungero.Docflow.OfficialDocumentCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _source
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Source; }
    }

    private global::Sungero.Docflow.IOutgoingDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)this._Info; }
    }

    public OutgoingDocumentBaseCreatingFromServerHandler(global::Sungero.Docflow.IOutgoingDocumentBase source, global::Sungero.Docflow.IOutgoingDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// OutgoingDocumentBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// OutgoingDocumentBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OutgoingDocumentBaseAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentAccessRights, Sungero.Docflow.IOutgoingDocumentBaseAccessRights
  {

    public OutgoingDocumentBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OutgoingDocumentBaseTypeAccessRights : 
    Sungero.Docflow.Server.OfficialDocumentTypeAccessRights, Sungero.Docflow.IOutgoingDocumentBaseAccessRights
  {

    public OutgoingDocumentBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// OutgoingDocumentBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OutgoingDocumentBaseRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.OfficialDocumentRepositoryImplementer<T>,
      global::Sungero.Docflow.IOutgoingDocumentBaseRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IOutgoingDocumentBase 
    {
       public new global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IOutgoingDocumentBaseAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IOutgoingDocumentBaseInfo Info
       {
          get { return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.OutgoingDocumentBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OutgoingDocumentBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class OutgoingDocumentBaseDocumentRegisterPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IOutgoingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IOutgoingDocumentBase>(query);
      }
    }

    public class OutgoingDocumentBaseDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IOutgoingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IOutgoingDocumentBase>(query);
      }
    }

    public class OutgoingDocumentBaseCounterpartyPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IOutgoingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
        var typedState = (global::Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.CounterpartyFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IOutgoingDocumentBase>(query);
      }
    }

    public class OutgoingDocumentBaseDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IOutgoingDocumentBase
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IOutgoingDocumentBaseFilterState)this.State;
        var handlers = new global::Sungero.Docflow.OutgoingDocumentBaseFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IOutgoingDocumentBase>(query);
      }
    }

}

// ==================================================================
// OutgoingDocumentBaseServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class OutgoingDocumentBaseFunctions : global::Sungero.Docflow.Server.OfficialDocumentFunctions
  {
    private global::Sungero.Docflow.IOutgoingDocumentBase _obj
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBase)this.Entity; }
    }

    public OutgoingDocumentBaseFunctions(global::Sungero.Docflow.IOutgoingDocumentBase entity) : base(entity) { }
  }
}

// ==================================================================
// OutgoingDocumentBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class OutgoingDocumentBase
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    internal static  global::System.String AddresseeAppeal(global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OutgoingDocumentBaseFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddresseeAppeal",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOutgoingDocumentBase) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OutgoingDocumentBaseFunctions.AddresseeAppeal(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    internal static  global::System.String AddresseeNameAndPatronymic(global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OutgoingDocumentBaseFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddresseeNameAndPatronymic",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOutgoingDocumentBase) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OutgoingDocumentBaseFunctions.AddresseeNameAndPatronymic(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    internal static  global::Sungero.Docflow.IOfficialDocument Contract(global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OutgoingDocumentBaseFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("Contract",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOutgoingDocumentBase) }, null);
        return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OutgoingDocumentBaseFunctions.Contract(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    internal static  global::System.String GetAddressees(global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.OutgoingDocumentBaseFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAddressees",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOutgoingDocumentBase) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.OutgoingDocumentBaseFunctions.GetAddressees(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean HasSpecifiedTypeRelations(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasSpecifiedTypeRelations", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.OutgoingDocumentBaseFunctions" />
    internal static  void FillSentDate(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase, global::Sungero.Parties.ICounterparty correspondent)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillSentDate", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { correspondent });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeRegistrationPaneVisibility", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needShow, repeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> GetCounterparties(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterparties", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  global::Sungero.Company.IEmployee GetDocumentResponsibleEmployee(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDocumentResponsibleEmployee", new System.Type[] {  });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  void ClearAndFillFirstAddressee(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ClearAndFillFirstAddressee", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  void ChangeCounterpartyPropertyAccess(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase, global::System.Boolean isEnabled, global::System.Boolean counterpartyCodeInNumber, global::System.Boolean enabledState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeCounterpartyPropertyAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, counterpartyCodeInNumber, enabledState });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  global::System.String GetContactsInformation(global::Sungero.Docflow.IOutgoingDocumentBaseAddressees addresseesItem, global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetContactsInformation",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOutgoingDocumentBaseAddressees), typeof(global::Sungero.Docflow.IOutgoingDocumentBase) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { addresseesItem, document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions.GetContactsInformation(addresseesItem, document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.OutgoingDocumentBaseFunctions" />
    internal static  void EnableRegistrationNumberAndDate(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingDocumentBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("EnableRegistrationNumberAndDate", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// OutgoingDocumentBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class OutgoingDocumentBaseServerPublicFunctions : global::Sungero.Docflow.Server.IOutgoingDocumentBaseServerPublicFunctions
  {
    public void FillSentDate(global::Sungero.Docflow.IOutgoingDocumentBase outgoingDocumentBase, global::Sungero.Parties.ICounterparty correspondent)
    {
global::Sungero.Docflow.Functions.OutgoingDocumentBase.FillSentDate(outgoingDocumentBase, correspondent);
    }
    public global::System.String GetAddressees(global::Sungero.Docflow.IOutgoingDocumentBase document)
    {
      return global::Sungero.Docflow.Functions.OutgoingDocumentBase.GetAddressees(document);
    }
  }
}

// ==================================================================
// OutgoingDocumentBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class OutgoingDocumentBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.OutgoingDocumentBase.OutgoingDocumentBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// OutgoingDocumentBaseServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class OutgoingDocumentBaseConvertingFromServerHandler : global::Sungero.Docflow.OfficialDocumentConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IOutgoingDocumentBaseInfo _info
    {
      get { return (global::Sungero.Docflow.IOutgoingDocumentBaseInfo)this._Info; }
    }

    public OutgoingDocumentBaseConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IOutgoingDocumentBaseInfo info)
      : base(source, info)
    {
    }
  }
}
