
// ==================================================================
// CancellationAgreement.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class CancellationAgreementFilter<T> :
      global::Sungero.Docflow.Server.ContractualDocumentBaseFilter<T>
      where T : class, global::Sungero.Exchange.ICancellationAgreement
    {
      private global::Sungero.Exchange.ICancellationAgreementFilterState filter
      {
        get
        {
          return (Sungero.Exchange.ICancellationAgreementFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public CancellationAgreementFilter(global::Sungero.Exchange.ICancellationAgreementFilterState filter)
      : base(filter)
      {
      }

      protected CancellationAgreementFilter()
      {
      }
    }
    public class CancellationAgreementSearchDialogModel : global::Sungero.Docflow.Server.ContractualDocumentBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.String Subject { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Double? TotalAmount { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }


                  public virtual global::System.String Reason { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOfficialDocument> LeadingDocument { get; protected set; }


                   public new CancellationAgreementVersionsModel Versions { get { return (CancellationAgreementVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new CancellationAgreementTrackingModel Tracking { get { return (CancellationAgreementTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class CancellationAgreementVersionsModel : global::Sungero.Docflow.Server.ContractualDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class CancellationAgreementTrackingModel : global::Sungero.Docflow.Server.ContractualDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Exchange.Server.CancellationAgreementFilter<global::Sungero.Exchange.ICancellationAgreement>))]

  public class CancellationAgreement :
    global::Sungero.Docflow.Server.ContractualDocumentBase, global::Sungero.Exchange.ICancellationAgreement, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("4c57f798-1547-4de0-b240-d9d97901df5f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Exchange.Server.CancellationAgreement.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Exchange.ICancellationAgreement, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Exchange.ICancellationAgreementState State
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementState(this);
    }

    public new virtual global::Sungero.Exchange.ICancellationAgreementInfo Info
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementInfo)base.Info; }
    }

    public new virtual global::Sungero.Exchange.ICancellationAgreementAccessRights AccessRights
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Exchange.Server.CancellationAgreementAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Exchange.Server.CancellationAgreementFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Exchange.Shared.CancellationAgreementFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Exchange.CancellationAgreementServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Exchange.CancellationAgreementSharedHandlers(this);
    }

    private global::System.String _Reason;
    public virtual global::System.String Reason
    {
      get
      {
        return this._Reason;
      }

      set
      {
        this.SetPropertyValue("Reason", this._Reason, value, (propertyValue) => { this._Reason = propertyValue; }, this.ReasonChangedHandler);
      }
    }
    private global::System.String _ServiceDocumentId;
    public virtual global::System.String ServiceDocumentId
    {
      get
      {
        return this._ServiceDocumentId;
      }

      set
      {
        this.SetPropertyValue("ServiceDocumentId", this._ServiceDocumentId, value, (propertyValue) => { this._ServiceDocumentId = propertyValue; }, this.ServiceDocumentIdChangedHandler);
      }
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Exchange.ICancellationAgreementVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Exchange.ICancellationAgreementTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Exchange.CancellationAgreementCreatingFromServerHandler", new object[] { (global::Sungero.Exchange.ICancellationAgreement)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Exchange.CancellationAgreementCreatingFromServerHandler((global::Sungero.Exchange.ICancellationAgreement)entitySource, this.Info);
    }

    #region Framework events

    protected void ReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Reason, this.Reason, this);
     ((global::Sungero.Exchange.ICancellationAgreementSharedHandlers)this.SharedHandlers).ReasonChanged(args);
    }

    protected void ServiceDocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ServiceDocumentId, this.ServiceDocumentId, this);
     ((global::Sungero.Exchange.ICancellationAgreementSharedHandlers)this.SharedHandlers).ServiceDocumentIdChanged(args);
    }





    #endregion


    public CancellationAgreement()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Exchange.CancellationAgreementConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Exchange.CancellationAgreementConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// CancellationAgreementHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange
{

  public partial class CancellationAgreementFilteringServerHandler<T>
    : global::Sungero.Docflow.ContractualDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Exchange.ICancellationAgreement
  {
    private global::Sungero.Exchange.ICancellationAgreementFilterState _filter
    {
      get
      {
        return (Sungero.Exchange.ICancellationAgreementFilterState)this.Filter;
      }
    }

    public CancellationAgreementFilteringServerHandler(global::Sungero.Exchange.ICancellationAgreementFilterState filter)
    : base(filter)
    {
    }

    protected CancellationAgreementFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class CancellationAgreementSearchDialogServerHandler : global::Sungero.Docflow.ContractualDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Exchange.Server.CancellationAgreementSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Exchange.Server.CancellationAgreementSearchDialogModel)this.Dialog;
       }
     }

     public CancellationAgreementSearchDialogServerHandler(global::Sungero.Exchange.Server.CancellationAgreementSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class CancellationAgreementServerHandlers : global::Sungero.Docflow.ContractualDocumentBaseServerHandlers
  {
    private global::Sungero.Exchange.ICancellationAgreement _obj
    {
      get { return (global::Sungero.Exchange.ICancellationAgreement)this.Entity; }
    }

    public CancellationAgreementServerHandlers(global::Sungero.Exchange.ICancellationAgreement entity)
      : base(entity)
    {
    }
  }

  public partial class CancellationAgreementCreatingFromServerHandler : global::Sungero.Docflow.ContractualDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Exchange.ICancellationAgreement _source
    {
      get { return (global::Sungero.Exchange.ICancellationAgreement)this.Source; }
    }

    private global::Sungero.Exchange.ICancellationAgreementInfo _info
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementInfo)this._Info; }
    }

    public CancellationAgreementCreatingFromServerHandler(global::Sungero.Exchange.ICancellationAgreement source, global::Sungero.Exchange.ICancellationAgreementInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// CancellationAgreementEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// CancellationAgreementAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class CancellationAgreementAccessRights : 
    Sungero.Docflow.Server.ContractualDocumentBaseAccessRights, Sungero.Exchange.ICancellationAgreementAccessRights
  {

    public CancellationAgreementAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CancellationAgreementTypeAccessRights : 
    Sungero.Docflow.Server.ContractualDocumentBaseTypeAccessRights, Sungero.Exchange.ICancellationAgreementAccessRights
  {

    public CancellationAgreementTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// CancellationAgreementRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
    public class CancellationAgreementRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.ContractualDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Exchange.ICancellationAgreementRepositoryImplementer<T>
      where T : global::Sungero.Exchange.ICancellationAgreement 
    {
       public new global::Sungero.Exchange.ICancellationAgreementAccessRights AccessRights
       {
          get { return (global::Sungero.Exchange.ICancellationAgreementAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Exchange.ICancellationAgreementInfo Info
       {
          get { return (global::Sungero.Exchange.ICancellationAgreementInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Exchange.Server.CancellationAgreementTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CancellationAgreementPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
}

// ==================================================================
// CancellationAgreementServerFunctions.g.cs
// ==================================================================

namespace Sungero.Exchange.Server
{
  public partial class CancellationAgreementFunctions : global::Sungero.Docflow.Server.ContractualDocumentBaseFunctions
  {
    private global::Sungero.Exchange.ICancellationAgreement _obj
    {
      get { return (global::Sungero.Exchange.ICancellationAgreement)this.Entity; }
    }

    public CancellationAgreementFunctions(global::Sungero.Exchange.ICancellationAgreement entity) : base(entity) { }
  }
}

// ==================================================================
// CancellationAgreementFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static class CancellationAgreement
  {
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  global::System.String GenerateCancellationAgreementBody(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String reason)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GenerateCancellationAgreementBody", new System.Type[] { typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { reason });
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  void CreateCancellationAgreementVersion(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, System.Byte[] body)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCancellationAgreementVersion", new System.Type[] { typeof(System.Byte[]) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { body });
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  void SendDocuments(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendDocuments", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment });
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  void ProcessCancellationAgreementAfterSendingToCounterparty(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.IExchangeDocumentInfo parentInfo, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::Sungero.CoreEntities.ICertificate certificate, NpoComputer.DCX.Common.SentMessage sentMessage, NpoComputer.DCX.Common.DocumentIds documentServiceIds)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ProcessCancellationAgreementAfterSendingToCounterparty", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.IExchangeDocumentInfo), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(NpoComputer.DCX.Common.SentMessage), typeof(NpoComputer.DCX.Common.DocumentIds) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, parentInfo, receiver, senderBox, certificate, sentMessage, documentServiceIds });
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  void SendAnswer(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::Sungero.Parties.ICounterparty receiver, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendAnswer", new System.Type[] { typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { senderBox, receiver, certificate, isAgent });
    }
    /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.CancellationAgreementFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsQuery(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsQuery", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Boolean isEnabled, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, repeatRegister });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeRegistrationPaneVisibility", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needShow, repeatRegister });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  global::System.Boolean DefaultRegistrationPaneVisibility(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DefaultRegistrationPaneVisibility", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void FillName(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateLifeCycle", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { registrationState, approvalState, counterpartyApprovalState });
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.CancellationAgreementFunctions" />
    internal static  void AddRelatedDocumentsToAttachmentGroup(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup group)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)cancellationAgreement).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddRelatedDocumentsToAttachmentGroup", new System.Type[] { typeof(Sungero.Workflow.Interfaces.IWorkflowEntityAttachmentGroup) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { group });
    }

  }
}

// ==================================================================
// CancellationAgreementServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Server
{
  public class CancellationAgreementServerPublicFunctions : global::Sungero.Exchange.Server.ICancellationAgreementServerPublicFunctions
  {
    public void CreateCancellationAgreementVersion(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, System.Byte[] body)
    {
global::Sungero.Exchange.Functions.CancellationAgreement.CreateCancellationAgreementVersion(cancellationAgreement, body);
    }
    public global::System.String GenerateCancellationAgreementBody(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.String reason)
    {
      return global::Sungero.Exchange.Functions.CancellationAgreement.GenerateCancellationAgreementBody(cancellationAgreement, reason);
    }
    public void SendDocuments(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
global::Sungero.Exchange.Functions.CancellationAgreement.SendDocuments(cancellationAgreement, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment);
    }
  }
}

// ==================================================================
// CancellationAgreementQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Queries
{
  public class CancellationAgreement
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Exchange.Server.CancellationAgreement.CancellationAgreementQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// CancellationAgreementServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange
{
  public partial class CancellationAgreementConvertingFromServerHandler : global::Sungero.Docflow.ContractualDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Exchange.ICancellationAgreementInfo _info
    {
      get { return (global::Sungero.Exchange.ICancellationAgreementInfo)this._Info; }
    }

    public CancellationAgreementConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Exchange.ICancellationAgreementInfo info)
      : base(source, info)
    {
    }
  }
}
