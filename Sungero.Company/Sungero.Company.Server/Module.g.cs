
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public partial class CompanyModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("d534e107-a54d-48ec-85ff-bc44d731a82f"); }
    }

    public override string Name
    {
      get { return "Sungero.Company"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IModuleServerInitializationFunctions, global::Sungero.Company.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("eff95720-181f-4f7d-892d-dec034c7b2ab"), new Sungero.Company.Shared.BusinessUnitInfo(typeof(global::Sungero.Company.IBusinessUnit)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IBusinessUnitServerPublicFunctions, global::Sungero.Company.Server.BusinessUnitServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IBusinessUnitSharedPublicFunctions, global::Sungero.Company.Shared.BusinessUnitSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2e3f162d-ef11-4ebc-84ef-c39069e5e94e"), new Sungero.Company.Shared.BusinessUnitRecipientLinksInfo(typeof(global::Sungero.Company.IBusinessUnitRecipientLinks)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("61b1c19f-26e2-49a5-b3d3-0d3618151e12"), new Sungero.Company.Shared.DepartmentInfo(typeof(global::Sungero.Company.IDepartment)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IDepartmentServerPublicFunctions, global::Sungero.Company.Server.DepartmentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IDepartmentSharedPublicFunctions, global::Sungero.Company.Shared.DepartmentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a9e935d5-3b72-4e3a-9e43-711d8f32b84e"), new Sungero.Company.Shared.DepartmentRecipientLinksInfo(typeof(global::Sungero.Company.IDepartmentRecipientLinks)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b7905516-2be5-4931-961c-cb38d5677565"), new Sungero.Company.Shared.EmployeeInfo(typeof(global::Sungero.Company.IEmployee)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IEmployeeServerPublicFunctions, global::Sungero.Company.Server.EmployeeServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IEmployeeSharedPublicFunctions, global::Sungero.Company.Shared.EmployeeSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4a37aec4-764c-4c14-8887-e1ecafa5b4c5"), new Sungero.Company.Shared.JobTitleInfo(typeof(global::Sungero.Company.IJobTitle)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IJobTitleServerPublicFunctions, global::Sungero.Company.Server.JobTitleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IJobTitleSharedPublicFunctions, global::Sungero.Company.Shared.JobTitleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c2200a86-5d5d-47d6-930d-c3ce8b11f04b"), new Sungero.Company.Shared.ManagersAssistantInfo(typeof(global::Sungero.Company.IManagersAssistant)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IManagersAssistantServerPublicFunctions, global::Sungero.Company.Server.ManagersAssistantServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IManagersAssistantSharedPublicFunctions, global::Sungero.Company.Shared.ManagersAssistantSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a03d0912-5ff1-4261-9d4b-64e210bca325"), new Sungero.Company.Shared.ManagersAssistantBaseInfo(typeof(global::Sungero.Company.IManagersAssistantBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IManagersAssistantBaseServerPublicFunctions, global::Sungero.Company.Server.ManagersAssistantBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IManagersAssistantBaseSharedPublicFunctions, global::Sungero.Company.Shared.ManagersAssistantBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("023eab79-c456-46bb-97b5-fbc764be9308"), new Sungero.Company.Shared.VisibilityRuleInfo(typeof(global::Sungero.Company.IVisibilityRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IVisibilityRuleServerPublicFunctions, global::Sungero.Company.Server.VisibilityRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IVisibilityRuleSharedPublicFunctions, global::Sungero.Company.Shared.VisibilityRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b7dd2935-25a9-4dd2-802b-711cf4549df2"), new Sungero.Company.Shared.VisibilityRuleExcludedMembersInfo(typeof(global::Sungero.Company.IVisibilityRuleExcludedMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("356ea70e-0e49-40e9-8eb2-4ea73e030539"), new Sungero.Company.Shared.VisibilityRuleRecipientsInfo(typeof(global::Sungero.Company.IVisibilityRuleRecipients)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("71565a4d-9d61-4783-9c7f-b001b7bc417c"), new Sungero.Company.Shared.VisibilityRuleVisibleMembersInfo(typeof(global::Sungero.Company.IVisibilityRuleVisibleMembers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("435ba4a4-ee0a-4c43-b334-c243257f400f"), new Sungero.Company.Shared.VisibilitySettingInfo(typeof(global::Sungero.Company.IVisibilitySetting)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IVisibilitySettingServerPublicFunctions, global::Sungero.Company.Server.VisibilitySettingServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IVisibilitySettingSharedPublicFunctions, global::Sungero.Company.Shared.VisibilitySettingSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("e3186c22-e557-43ae-aa99-87dd89dcc1b0"), new Sungero.Company.Shared.VisibilitySettingHiddenRecipientsInfo(typeof(global::Sungero.Company.IVisibilitySettingHiddenRecipients)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1bb06c07-eafe-4248-ac43-a0daaa30dd8c"), new Sungero.Company.Shared.VisibilitySettingUnrestrictedRecipientsInfo(typeof(global::Sungero.Company.IVisibilitySettingUnrestrictedRecipients)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IBusinessUnitFilterState, global::Sungero.Company.Shared.BusinessUnit.BusinessUnitFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IDepartmentFilterState, global::Sungero.Company.Shared.Department.DepartmentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IEmployeeFilterState, global::Sungero.Company.Shared.Employee.EmployeeFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IJobTitleFilterState, global::Sungero.Company.Shared.JobTitle.JobTitleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IManagersAssistantFilterState, global::Sungero.Company.Shared.ManagersAssistant.ManagersAssistantFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IManagersAssistantBaseFilterState, global::Sungero.Company.Shared.ManagersAssistantBase.ManagersAssistantBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IVisibilityRuleFilterState, global::Sungero.Company.Shared.VisibilityRule.VisibilityRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.IVisibilitySettingFilterState, global::Sungero.Company.Shared.VisibilitySetting.VisibilitySettingFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.FolderFilterState.IManagersAssistantsFilterState, global::Sungero.Company.Shared.ManagersAssistantsFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Server.IModuleServerPublicFunctions, global::Sungero.Company.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Company.Shared.IModuleSharedPublicFunctions, global::Sungero.Company.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public partial class ManagersAssistantsFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Company.FolderFilterState.IManagersAssistantsFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Company.FolderFilterState.IManagersAssistantsFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistantBase> ManagersAssistantsDataQuery(global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistantBase> query)
    {
      return query;
    }

    public virtual global::System.Boolean IsManagersAssistantsVisible()
    {
      return true;
    }


    public ManagersAssistantsFolderHandlers(global::Sungero.Company.FolderFilterState.IManagersAssistantsFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void CreateSystemSubstitutions(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser> substitutedUsers, global::Sungero.CoreEntities.IUser substitute)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSystemSubstitutions", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser>), typeof(global::Sungero.CoreEntities.IUser)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitutedUsers, substitute});
      }
      else
      {
    global::Sungero.Company.Server.ModuleFunctions.CreateSystemSubstitutions(substitutedUsers, substitute);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void DeleteSystemSubstitutions(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser> substitutedUsers, global::Sungero.CoreEntities.IUser substitute)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteSystemSubstitutions", new global::System.Type[]{typeof(System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IUser>), typeof(global::Sungero.CoreEntities.IUser)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitutedUsers, substitute});
      }
      else
      {
    global::Sungero.Company.Server.ModuleFunctions.DeleteSystemSubstitutions(substitutedUsers, substitute);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void CreateSystemSubstitution(global::Sungero.CoreEntities.IUser substitutedUser, global::Sungero.CoreEntities.IUser substitute)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSystemSubstitution", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser), typeof(global::Sungero.CoreEntities.IUser)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitutedUser, substitute});
      }
      else
      {
    global::Sungero.Company.Server.ModuleFunctions.CreateSystemSubstitution(substitutedUser, substitute);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void DeleteSystemSubstitution(global::Sungero.CoreEntities.IUser substitutedUser, global::Sungero.CoreEntities.IUser substitute)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("DeleteSystemSubstitution", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser), typeof(global::Sungero.CoreEntities.IUser)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitutedUser, substitute});
      }
      else
      {
    global::Sungero.Company.Server.ModuleFunctions.DeleteSystemSubstitution(substitutedUser, substitute);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetUsersSubstitutedBy(global::Sungero.CoreEntities.IUser substitute)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUsersSubstitutedBy", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IUser)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitute});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetUsersSubstitutedBy(substitute);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IEmployee CreateEmployee()
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateEmployee", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.CreateEmployee();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IBusinessUnit CreateBusinessUnit()
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateBusinessUnit", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Company.IBusinessUnit)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.CreateBusinessUnit();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IDepartment CreateDepartment()
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDepartment", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Company.IDepartment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.CreateDepartment();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Company.IVisibilitySetting GetVisibilitySettings()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVisibilitySettings", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Company.IVisibilitySetting)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVisibilitySettings();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.CoreEntities.IRole GetCEORole()
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCEORole", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.CoreEntities.IRole)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetCEORole();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IEmployee GetEmployeeById(global::System.Int64 id)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeeById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetEmployeeById(id);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesByIds(global::System.Collections.Generic.List<global::System.Int64> ids)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeesByIds", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::System.Int64>)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ids});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetEmployeesByIds(ids);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::Sungero.Company.IDepartment GetDepartmentById(global::System.Int64 id)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDepartmentById", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::Sungero.Company.IDepartment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{id});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetDepartmentById(id);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate> GetCertificatesOfEmployee(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCertificatesOfEmployee", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetCertificatesOfEmployee(employee);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> GetNotAutomatedEmployees(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> employees)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotAutomatedEmployees", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)});
        return (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employees});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNotAutomatedEmployees(employees);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipientsRemote(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeesFromRecipientsRemote", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{recipients});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetEmployeesFromRecipientsRemote(recipients);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipients(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeesFromRecipients", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{recipients});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetEmployeesFromRecipients(recipients);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.String GetCountResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCountResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetCountResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetAllResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.GetAllResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, global::Sungero.Domain.Shared.IEntity entity, global::System.String moduleName, global::System.Int32 modulePriority, global::System.String sectionName)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AppendResponsibilitiesReportResult", new global::System.Type[]{typeof(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>), typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String), typeof(global::System.Int32), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{source, entity, moduleName, modulePriority, sectionName});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.AppendResponsibilitiesReportResult(source, entity, moduleName, modulePriority, sectionName);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> entities, global::System.String moduleName, global::System.Int32 modulePriority, global::System.String sectionName, global::Sungero.Domain.Shared.IEntity mainEntity)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AppendResponsibilitiesReportResult", new global::System.Type[]{typeof(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>), typeof(System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity>), typeof(global::System.String), typeof(global::System.Int32), typeof(global::System.String), typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{source, entities, moduleName, modulePriority, sectionName, mainEntity});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.AppendResponsibilitiesReportResult(source, entities, moduleName, modulePriority, sectionName, mainEntity);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, System.Collections.Generic.IDictionary<global::Sungero.Domain.Shared.IEntity, global::System.String> entitiesWithPresentation, global::System.String moduleName, global::System.Int32 responsibilityPriority, global::System.String sectionName, global::Sungero.Domain.Shared.IEntity mainEntity)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AppendResponsibilitiesReportResult", new global::System.Type[]{typeof(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>), typeof(System.Collections.Generic.IDictionary<global::Sungero.Domain.Shared.IEntity, global::System.String>), typeof(global::System.String), typeof(global::System.Int32), typeof(global::System.String), typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{source, entitiesWithPresentation, moduleName, responsibilityPriority, sectionName, mainEntity});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.AppendResponsibilitiesReportResult(source, entitiesWithPresentation, moduleName, responsibilityPriority, sectionName, mainEntity);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResponsibilitiesReportData", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResponsibilitiesReportData(employee);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.String CreateAssistantResponsibilityString(global::Sungero.Company.IManagersAssistant managersAssistant)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateAssistantResponsibilityString", new global::System.Type[]{typeof(global::Sungero.Company.IManagersAssistant)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{managersAssistant});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateAssistantResponsibilityString(managersAssistant);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.String CreateSubstitutionPresentation(global::Sungero.CoreEntities.ISubstitution substitution)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSubstitutionPresentation", new global::System.Type[]{typeof(global::Sungero.CoreEntities.ISubstitution)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{substitution});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.CreateSubstitutionPresentation(substitution);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine CreateResponsibilitiesReportTableLine(global::System.String moduleName, global::System.String responsibility, global::System.String record, global::Sungero.Domain.Shared.IEntity element)
    {
      var __typeName = "Sungero.Company.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateResponsibilitiesReportTableLine", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::Sungero.Domain.Shared.IEntity)});
        return (Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{moduleName, responsibility, record, element});
      }
      else
      {
        return global::Sungero.Company.Server.ModuleFunctions.CreateResponsibilitiesReportTableLine(moduleName, responsibility, record, element);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> GetAllRecipients()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllRecipients", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllRecipients();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsRecipientRestrict()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRecipientRestrict", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsRecipientRestrict();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Boolean IsRecipientRestrictModeOn()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsRecipientRestrictModeOn", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsRecipientRestrictModeOn();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Collections.Generic.List<global::System.Int64> GetVisibleRecipientIds(global::System.String recipientTypeGuid)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVisibleRecipientIds", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{recipientTypeGuid});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetVisibleRecipientIds(recipientTypeGuid);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetHeadRecipientsByEmployee(global::System.Int64 currentEmployeeId)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetHeadRecipientsByEmployee", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentEmployeeId});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetHeadRecipientsByEmployee(currentEmployeeId);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> GetAllVisisbleRecipientsIds(global::System.Int64 currentRecipientId, global::System.String recipientTypeGuid)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAllVisisbleRecipientsIds", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{currentRecipientId, recipientTypeGuid});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAllVisisbleRecipientsIds(currentRecipientId, recipientTypeGuid);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void CreateVisibilitySettings()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateVisibilitySettings", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateVisibilitySettings();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> ExcludeSystemRecipients(global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient> query, global::System.Boolean isRecipientsStatusActive)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExcludeSystemRecipients", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient>), typeof(global::System.Boolean)});
        return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, isRecipientsStatusActive});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExcludeSystemRecipients(query, isRecipientsStatusActive);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static Sungero.Core.IDigestModel GetEmployeePopup(global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetEmployeePopup", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (Sungero.Core.IDigestModel)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetEmployeePopup(employee);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant> GetActiveManagerAssistants()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveManagerAssistants", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActiveManagerAssistants();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant> GetAssistants()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssistants", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssistants();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant> GetResolutionPreparers()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetResolutionPreparers", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetResolutionPreparers();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void SetLoginPassword(global::System.Int64 loginId, global::System.String password)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetLoginPassword", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{loginId, password});
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SetLoginPassword(loginId, password);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void CreateLogin(global::System.String loginName, global::System.String password)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateLogin", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{loginName, password});
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateLogin(loginName, password);
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void ReindexBusinessUnits()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReindexBusinessUnits", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ReindexBusinessUnits();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void ReindexEmployees()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ReindexEmployees", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ReindexEmployees();
      }
    }
    /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleFunctions" />
    internal static void UpdateBusinessUnitsIndexSynonyms(global::System.String synonyms)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("UpdateBusinessUnitsIndexSynonyms", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{synonyms});
      }
      else
      {
    ((global::Sungero.Company.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).UpdateBusinessUnitsIndexSynonyms(synonyms);
      }
    }

    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Guid> GetSystemRecipientsSidWithoutAllUsers(global::System.Boolean fullSystemRecipientList)
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSystemRecipientsSidWithoutAllUsers", new global::System.Type[]{typeof(global::System.Boolean)});
        return (global::System.Collections.Generic.List<global::System.Guid>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fullSystemRecipientList});
      }
      else
      {
        return ((global::Sungero.Company.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetSystemRecipientsSidWithoutAllUsers(fullSystemRecipientList);
      }
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant> GetActiveManagersAssistants()
    {
      var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveManagersAssistants", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Company.IManagersAssistant>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Company.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetActiveManagersAssistants();
      }
    }
    /// <redirect project="Sungero.Company.Shared" type="Sungero.Company.Shared.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetNotSystemEmployees(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      var __typeName = "Sungero.Company.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotSystemEmployees", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)});
        return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{recipients});
      }
      else
      {
        return global::Sungero.Company.Shared.ModuleFunctions.GetNotSystemEmployees(recipients);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Company.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("d534e107-a54d-48ec-85ff-bc44d731a82f");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Company.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Company.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void GrantRightsToResponsibilitiesReport()
      {
        var __typeName = "Sungero.Company.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsToResponsibilitiesReport", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Company.Server.ModuleInitializer.GrantRightsToResponsibilitiesReport();
        }
      }
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void CreateReportsTables()
      {
        var __typeName = "Sungero.Company.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateReportsTables", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Company.Server.ModuleInitializer.CreateReportsTables();
        }
      }
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void CreateSorageProcedures()
      {
        var __typeName = "Sungero.Company.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateSorageProcedures", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Company.Server.ModuleInitializer.CreateSorageProcedures();
        }
      }
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void CreateVisibilitySettings()
      {
        var __typeName = "Sungero.Company.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateVisibilitySettings", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Company.Server.ModuleInitializer.CreateVisibilitySettings();
        }
      }
      /// <redirect project="Sungero.Company.Server" type="Sungero.Company.Server.ModuleInitializer" />
      internal static void CreateIndecies()
      {
        var __typeName = "Sungero.Company.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateIndecies", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Company.Server.ModuleInitializer.CreateIndecies();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Company.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Company.Server.IModuleServerPublicFunctions
  {
    public global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, global::Sungero.Domain.Shared.IEntity entity, global::System.String moduleName, global::System.Int32 modulePriority, global::System.String sectionName)
    {
      return global::Sungero.Company.Functions.Module.AppendResponsibilitiesReportResult(source, entity, moduleName, modulePriority, sectionName);
    }
    public global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, System.Collections.Generic.IEnumerable<global::Sungero.Domain.Shared.IEntity> entities, global::System.String moduleName, global::System.Int32 modulePriority, global::System.String sectionName, global::Sungero.Domain.Shared.IEntity mainEntity)
    {
      return global::Sungero.Company.Functions.Module.AppendResponsibilitiesReportResult(source, entities, moduleName, modulePriority, sectionName, mainEntity);
    }
    public global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> AppendResponsibilitiesReportResult(global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> source, System.Collections.Generic.IDictionary<global::Sungero.Domain.Shared.IEntity, global::System.String> entitiesWithPresentation, global::System.String moduleName, global::System.Int32 responsibilityPriority, global::System.String sectionName, global::Sungero.Domain.Shared.IEntity mainEntity)
    {
      return global::Sungero.Company.Functions.Module.AppendResponsibilitiesReportResult(source, entitiesWithPresentation, moduleName, responsibilityPriority, sectionName, mainEntity);
    }
    public void CreateLogin(global::System.String loginName, global::System.String password)
    {
global::Sungero.Company.Functions.Module.CreateLogin(loginName, password);
    }
    public Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine CreateResponsibilitiesReportTableLine(global::System.String moduleName, global::System.String responsibility, global::System.String record, global::Sungero.Domain.Shared.IEntity element)
    {
      return global::Sungero.Company.Functions.Module.CreateResponsibilitiesReportTableLine(moduleName, responsibility, record, element);
    }
    public global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetAllResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Functions.Module.GetAllResponsibilitiesReportData(employee);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetAllVisisbleRecipientsIds(global::System.Int64 currentRecipientId, global::System.String recipientTypeGuid)
    {
      return global::Sungero.Company.Functions.Module.GetAllVisisbleRecipientsIds(currentRecipientId, recipientTypeGuid);
    }
    public Sungero.Core.IDigestModel GetEmployeePopup(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Functions.Module.GetEmployeePopup(employee);
    }
    public global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetEmployeesFromRecipients(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      return global::Sungero.Company.Functions.Module.GetEmployeesFromRecipients(recipients);
    }
    public global::System.Collections.Generic.List<global::System.Int64> GetHeadRecipientsByEmployee(global::System.Int64 currentEmployeeId)
    {
      return global::Sungero.Company.Functions.Module.GetHeadRecipientsByEmployee(currentEmployeeId);
    }
    public global::System.Collections.Generic.List<Structures.ResponsibilitiesReport.ResponsibilitiesReportTableLine> GetResponsibilitiesReportData(global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Company.Functions.Module.GetResponsibilitiesReportData(employee);
    }
    public global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetUsersSubstitutedBy(global::Sungero.CoreEntities.IUser substitute)
    {
      return global::Sungero.Company.Functions.Module.GetUsersSubstitutedBy(substitute);
    }
    public void ReindexBusinessUnits()
    {
global::Sungero.Company.Functions.Module.ReindexBusinessUnits();
    }
    public void ReindexEmployees()
    {
global::Sungero.Company.Functions.Module.ReindexEmployees();
    }
    public void SetLoginPassword(global::System.Int64 loginId, global::System.String password)
    {
global::Sungero.Company.Functions.Module.SetLoginPassword(loginId, password);
    }
    public void UpdateBusinessUnitsIndexSynonyms(global::System.String synonyms)
    {
global::Sungero.Company.Functions.Module.UpdateBusinessUnitsIndexSynonyms(synonyms);
    }
  }
}

namespace Sungero.Company.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Company.Server.IModuleServerPublicFunctions
  {

      private static readonly global::System.Guid AsyncHandlerUpdateEmployeeNameId = global::System.Guid.Parse("dbbabb31-4c23-4551-8687-c153d2051620");

      public void Enqueue_UpdateEmployeeName(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerUpdateEmployeeNameId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Company.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server.CompanyBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Company.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string CreateProcedureGetHeadRecipientsByEmployee
    {
       get { return resolver.GetQuery("CreateProcedureGetHeadRecipientsByEmployee"); }
    }
    public static string CreateProcedureGetAllVisibleRecipients
    {
       get { return resolver.GetQuery("CreateProcedureGetAllVisibleRecipients"); }
    }
    public static string ExecuteStoredProcedure
    {
       get { return resolver.GetQuery("ExecuteStoredProcedure"); }
    }
    public static string CreateIndexForRecipientVisibility
    {
       get { return resolver.GetQuery("CreateIndexForRecipientVisibility"); }
    }
    public static string CreateIndexDiscriminatorParentId
    {
       get { return resolver.GetQuery("CreateIndexDiscriminatorParentId"); }
    }
    public static string CreateIndexDiscriminatorBusinessUnitId
    {
       get { return resolver.GetQuery("CreateIndexDiscriminatorBusinessUnitId"); }
    }
    public static string CreateIndexDiscriminatorHeadOfficeId
    {
       get { return resolver.GetQuery("CreateIndexDiscriminatorHeadOfficeId"); }
    }
    public static string SelectDisableMailNotificationParam
    {
       get { return resolver.GetQuery("SelectDisableMailNotificationParam"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Company.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

