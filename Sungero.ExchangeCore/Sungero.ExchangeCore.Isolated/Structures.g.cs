//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Structures.Module
{
  public interface IDpadSignatureStamp
  {
    global::System.Int32 StampWidth { get; set; }
    global::Sungero.ExchangeCore.Structures.Module.IDpadPageStampInfo PageStampInfo { get; set; }
    global::System.Collections.Generic.List<global::Sungero.ExchangeCore.Structures.Module.IDpadSignatureInfo> Signatures { get; set; }

  }

  [global::System.Serializable]
  public class DpadSignatureStamp : IDpadSignatureStamp
  {
    public global::System.Int32 StampWidth { get; set; }
    public global::Sungero.ExchangeCore.Structures.Module.IDpadPageStampInfo PageStampInfo { get; set; }
    public global::System.Collections.Generic.List<global::Sungero.ExchangeCore.Structures.Module.IDpadSignatureInfo> Signatures { get; set; }


    public static IDpadSignatureStamp Create()
    {
      return new DpadSignatureStamp();
    }

    public static IDpadSignatureStamp Create(global::System.Int32 stampWidth, global::Sungero.ExchangeCore.Structures.Module.IDpadPageStampInfo pageStampInfo, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.Structures.Module.IDpadSignatureInfo> signatures)
    {
      return new DpadSignatureStamp
      {
        StampWidth = stampWidth,
        PageStampInfo = pageStampInfo,
        Signatures = signatures
      };
    }

    public override int GetHashCode()
    {
      unchecked
      {
        return (this.StampWidth.GetHashCode() * 199) ^ ((this.PageStampInfo != null ? this.PageStampInfo.GetHashCode() : 0) * 199) ^ ((this.Signatures != null ? this.Signatures.GetHashCode() : 0) * 199);
      }
    }

    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != this.GetType()) return false;
      return Equals((DpadSignatureStamp)obj);
    }

    public static bool operator ==(DpadSignatureStamp left, DpadSignatureStamp right)
    {
      if (ReferenceEquals(left, right))
        return true;

      if (((object)left) == null || ((object)right) == null)
        return false;

      return left.Equals(right);
    }

    public static bool operator !=(DpadSignatureStamp left, DpadSignatureStamp right)
    {
      return !(left == right);
    }

    protected bool Equals(DpadSignatureStamp other)
    {
      return this.StampWidth == other.StampWidth
             && object.Equals(this.PageStampInfo, other.PageStampInfo) 
             && global::System.Linq.Enumerable.SequenceEqual(this.Signatures, other.Signatures);
    }

  }

  public interface IDpadSignatureInfo
  {
    global::System.String CertificateIssuer { get; set; }
    global::System.String CertificateSerialNumber { get; set; }
    global::System.String FormalizedPoATitle { get; set; }
    global::System.String FormalizedPoAUnifiedNumber { get; set; }
    global::System.String OrganizationInfo { get; set; }
    global::System.String PersonInfo { get; set; }
    global::System.String SigningDate { get; set; }
    global::System.Int32 SignIcon { get; set; }
    global::System.String Status { get; set; }

  }

  [global::System.Serializable]
  public class DpadSignatureInfo : IDpadSignatureInfo
  {
    public global::System.String CertificateIssuer { get; set; }
    public global::System.String CertificateSerialNumber { get; set; }
    public global::System.String FormalizedPoATitle { get; set; }
    public global::System.String FormalizedPoAUnifiedNumber { get; set; }
    public global::System.String OrganizationInfo { get; set; }
    public global::System.String PersonInfo { get; set; }
    public global::System.String SigningDate { get; set; }
    public global::System.Int32 SignIcon { get; set; }
    public global::System.String Status { get; set; }


    public static IDpadSignatureInfo Create()
    {
      return new DpadSignatureInfo();
    }

    public static IDpadSignatureInfo Create(global::System.String certificateIssuer, global::System.String certificateSerialNumber, global::System.String formalizedPoATitle, global::System.String formalizedPoAUnifiedNumber, global::System.String organizationInfo, global::System.String personInfo, global::System.String signingDate, global::System.Int32 signIcon, global::System.String status)
    {
      return new DpadSignatureInfo
      {
        CertificateIssuer = certificateIssuer,
        CertificateSerialNumber = certificateSerialNumber,
        FormalizedPoATitle = formalizedPoATitle,
        FormalizedPoAUnifiedNumber = formalizedPoAUnifiedNumber,
        OrganizationInfo = organizationInfo,
        PersonInfo = personInfo,
        SigningDate = signingDate,
        SignIcon = signIcon,
        Status = status
      };
    }

    public override int GetHashCode()
    {
      unchecked
      {
        return ((this.CertificateIssuer != null ? this.CertificateIssuer.GetHashCode() : 0) * 199) ^ ((this.CertificateSerialNumber != null ? this.CertificateSerialNumber.GetHashCode() : 0) * 199) ^ ((this.FormalizedPoATitle != null ? this.FormalizedPoATitle.GetHashCode() : 0) * 199) ^ ((this.FormalizedPoAUnifiedNumber != null ? this.FormalizedPoAUnifiedNumber.GetHashCode() : 0) * 199) ^ ((this.OrganizationInfo != null ? this.OrganizationInfo.GetHashCode() : 0) * 199) ^ ((this.PersonInfo != null ? this.PersonInfo.GetHashCode() : 0) * 199) ^ ((this.SigningDate != null ? this.SigningDate.GetHashCode() : 0) * 199) ^ (this.SignIcon.GetHashCode() * 199) ^ ((this.Status != null ? this.Status.GetHashCode() : 0) * 199);
      }
    }

    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != this.GetType()) return false;
      return Equals((DpadSignatureInfo)obj);
    }

    public static bool operator ==(DpadSignatureInfo left, DpadSignatureInfo right)
    {
      if (ReferenceEquals(left, right))
        return true;

      if (((object)left) == null || ((object)right) == null)
        return false;

      return left.Equals(right);
    }

    public static bool operator !=(DpadSignatureInfo left, DpadSignatureInfo right)
    {
      return !(left == right);
    }

    protected bool Equals(DpadSignatureInfo other)
    {
      return object.Equals(this.CertificateIssuer, other.CertificateIssuer) 
             && object.Equals(this.CertificateSerialNumber, other.CertificateSerialNumber) 
             && object.Equals(this.FormalizedPoATitle, other.FormalizedPoATitle) 
             && object.Equals(this.FormalizedPoAUnifiedNumber, other.FormalizedPoAUnifiedNumber) 
             && object.Equals(this.OrganizationInfo, other.OrganizationInfo) 
             && object.Equals(this.PersonInfo, other.PersonInfo) 
             && object.Equals(this.SigningDate, other.SigningDate) 
             && this.SignIcon == other.SignIcon
             && object.Equals(this.Status, other.Status) ;
    }

  }

  public interface IDpadPageStampInfo
  {
    global::System.String Title { get; set; }
    global::System.String DocumentId { get; set; }

  }

  [global::System.Serializable]
  public class DpadPageStampInfo : IDpadPageStampInfo
  {
    public global::System.String Title { get; set; }
    public global::System.String DocumentId { get; set; }


    public static IDpadPageStampInfo Create()
    {
      return new DpadPageStampInfo();
    }

    public static IDpadPageStampInfo Create(global::System.String title, global::System.String documentId)
    {
      return new DpadPageStampInfo
      {
        Title = title,
        DocumentId = documentId
      };
    }

    public override int GetHashCode()
    {
      unchecked
      {
        return ((this.Title != null ? this.Title.GetHashCode() : 0) * 199) ^ ((this.DocumentId != null ? this.DocumentId.GetHashCode() : 0) * 199);
      }
    }

    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != this.GetType()) return false;
      return Equals((DpadPageStampInfo)obj);
    }

    public static bool operator ==(DpadPageStampInfo left, DpadPageStampInfo right)
    {
      if (ReferenceEquals(left, right))
        return true;

      if (((object)left) == null || ((object)right) == null)
        return false;

      return left.Equals(right);
    }

    public static bool operator !=(DpadPageStampInfo left, DpadPageStampInfo right)
    {
      return !(left == right);
    }

    protected bool Equals(DpadPageStampInfo other)
    {
      return object.Equals(this.Title, other.Title) 
             && object.Equals(this.DocumentId, other.DocumentId) ;
    }

  }

}