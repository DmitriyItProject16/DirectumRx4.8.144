
// ==================================================================
// ApprovalTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.Docflow.IApprovalTask
    {
      protected new global::Sungero.Docflow.IApprovalTaskFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IApprovalTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ApprovalTaskFilter(global::Sungero.Docflow.IApprovalTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected ApprovalTaskFilter()
      {
      }
    }
    public class ApprovalTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Signatory { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRuleBase> ApprovalRule { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ApprovalTaskObserversModel Observers { get { return (ApprovalTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskReqApproversModel ReqApprovers { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskAddApproversModel AddApprovers { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskAddApproversExpandedModel AddApproversExpanded { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskRevokedDocumentsRightsModel RevokedDocumentsRights { get; protected set; }
                   public ApprovalTaskAddresseesModel Addressees { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskAddedAddendaModel AddedAddenda { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public ApprovalTaskRemovedAddendaModel RemovedAddenda { get; protected set; }

        }

      public class ApprovalTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class ApprovalTaskReqApproversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalTaskAddApproversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalTaskAddApproversExpandedModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalTaskRevokedDocumentsRightsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalTaskAddresseesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> Addressee { get; protected set; }

         }
      public class ApprovalTaskAddedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class ApprovalTaskRemovedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class ApprovalTaskFilterForSignatory<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskSignatoryPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("SignatoryFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskSignatoryPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).SignatoryFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForSignatory<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskSignatorySearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("SignatorySearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskSignatorySearchPropertyFilteringServerHandler<TQueryEntity>().SignatorySearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForSignatory(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskFilterForApprovalRule<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskApprovalRulePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ApprovalRuleFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskApprovalRulePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ApprovalRuleFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForApprovalRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForApprovalRule<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskApprovalRuleSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ApprovalRuleSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskApprovalRuleSearchPropertyFilteringServerHandler<TQueryEntity>().ApprovalRuleSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForApprovalRule(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskFilterForAddressee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddresseePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AddresseeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AddresseeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddresseeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskFilterForDeliveryMethod<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskDeliveryMethodPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("DeliveryMethodFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskDeliveryMethodPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).DeliveryMethodFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForDeliveryMethod<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskDeliveryMethodSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("DeliveryMethodSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskDeliveryMethodSearchPropertyFilteringServerHandler<TQueryEntity>().DeliveryMethodSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForDeliveryMethod(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskFilterForExchangeService<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskExchangeServicePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ExchangeServiceFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskExchangeServicePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ExchangeServiceFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForExchangeService<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskExchangeServiceSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ExchangeServiceSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskExchangeServiceSearchPropertyFilteringServerHandler<TQueryEntity>().ExchangeServiceSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskFilterForReworkPerformer<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IApprovalTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskReworkPerformerPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ReworkPerformerFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskReworkPerformerPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ReworkPerformerFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class ApprovalTaskSearchFilterForReworkPerformer<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskReworkPerformerSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ReworkPerformerSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.ApprovalTaskReworkPerformerSearchPropertyFilteringServerHandler<TQueryEntity>().ReworkPerformerSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public ApprovalTaskSearchFilterForReworkPerformer(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilter<global::Sungero.Docflow.IApprovalTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForSignatory<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalTask>), "Signatory")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForSignatory<global::Sungero.CoreEntities.IRecipient>), "Signatory")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForApprovalRule<global::Sungero.Docflow.IApprovalRuleBase, global::Sungero.Docflow.IApprovalTask>), "ApprovalRule")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForApprovalRule<global::Sungero.Docflow.IApprovalRuleBase>), "ApprovalRule")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalTask>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod, global::Sungero.Docflow.IApprovalTask>), "DeliveryMethod")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForDeliveryMethod<global::Sungero.Docflow.IMailDeliveryMethod>), "DeliveryMethod")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService, global::Sungero.Docflow.IApprovalTask>), "ExchangeService")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService>), "ExchangeService")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskFilterForReworkPerformer<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IApprovalTask>), "ReworkPerformer")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.ApprovalTaskSearchFilterForReworkPerformer<global::Sungero.CoreEntities.IRecipient>), "ReworkPerformer")]


  public class ApprovalTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.Docflow.IApprovalTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("100950d0-03d2-44f0-9e31-f9c8dfdf3829");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.ApprovalTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IApprovalTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Docflow.IApprovalTaskState State
    {
      get { return (global::Sungero.Docflow.IApprovalTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.ApprovalTaskState(this);
    }

    public new virtual global::Sungero.Docflow.IApprovalTaskInfo Info
    {
      get { return (global::Sungero.Docflow.IApprovalTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IApprovalTaskAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IApprovalTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.ApprovalTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.ApprovalTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.ApprovalTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.ApprovalTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.ApprovalTaskSharedHandlers(this);
    }

    private global::System.Int32? _StageNumber;
    public virtual global::System.Int32? StageNumber
    {
      get
      {
        return this._StageNumber;
      }

      set
      {
        this.SetPropertyValue("StageNumber", this._StageNumber, value, (propertyValue) => { this._StageNumber = propertyValue; }, this.StageNumberChangedHandler);
      }
    }
    private global::System.DateTime? _ControlReturnStartDate;
    public virtual global::System.DateTime? ControlReturnStartDate
    {
      get
      {
        return this._ControlReturnStartDate;
      }

      set
      {
        this.SetPropertyValue("ControlReturnStartDate", this._ControlReturnStartDate, value, (propertyValue) => { this._ControlReturnStartDate = propertyValue; }, this.ControlReturnStartDateChangedHandler);
      }
    }
    private global::System.Int32? _Iteration;
    public virtual global::System.Int32? Iteration
    {
      get
      {
        return this._Iteration;
      }

      set
      {
        this.SetPropertyValue("Iteration", this._Iteration, value, (propertyValue) => { this._Iteration = propertyValue; }, this.IterationChangedHandler);
      }
    }
    private global::System.String _ReworkReason;
    public virtual global::System.String ReworkReason
    {
      get
      {
        return this._ReworkReason;
      }

      set
      {
        this.SetPropertyValue("ReworkReason", this._ReworkReason, value, (propertyValue) => { this._ReworkReason = propertyValue; }, this.ReworkReasonChangedHandler);
      }
    }
    private global::System.Boolean? _IsStageAssigneeNotFound;
    public virtual global::System.Boolean? IsStageAssigneeNotFound
    {
      get
      {
        return this._IsStageAssigneeNotFound;
      }

      set
      {
        this.SetPropertyValue("IsStageAssigneeNotFound", this._IsStageAssigneeNotFound, value, (propertyValue) => { this._IsStageAssigneeNotFound = propertyValue; }, this.IsStageAssigneeNotFoundChangedHandler);
      }
    }
    private global::System.Boolean? _IsManyAddressees;
    public virtual global::System.Boolean? IsManyAddressees
    {
      get
      {
        return this._IsManyAddressees;
      }

      set
      {
        this.SetPropertyValue("IsManyAddressees", this._IsManyAddressees, value, (propertyValue) => { this._IsManyAddressees = propertyValue; }, this.IsManyAddresseesChangedHandler);
      }
    }



    private global::System.String _AbortingReason;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String AbortingReason
    {
      get
      {
        return this._AbortingReason;
      }

      set
      {
        this.SetPropertyValue("AbortingReason", this._AbortingReason, value, (propertyValue) => { this._AbortingReason = propertyValue; }, this.AbortingReasonChangedHandler);
      }
    }
    private global::System.String _ResolutionText;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ResolutionText
    {
      get
      {
        return this._ResolutionText;
      }

      set
      {
        this.SetPropertyValue("ResolutionText", this._ResolutionText, value, (propertyValue) => { this._ResolutionText = propertyValue; }, this.ResolutionTextChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _DocumentExternalApprovalStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.ApprovalTask.DocumentExternalApprovalState),
      typeof(global::Sungero.Docflow.Server.ApprovalTask),
      "DocumentExternalApprovalState");

    public static global::Sungero.Domain.Shared.EnumerationItems DocumentExternalApprovalStateItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalTask._DocumentExternalApprovalStateItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems DocumentExternalApprovalStateAllowedItems
    {
      get { return global::Sungero.Docflow.Server.ApprovalTask.DocumentExternalApprovalStateItems; }
    }

    private global::Sungero.Core.Enumeration? _DocumentExternalApprovalState;

    public virtual global::Sungero.Core.Enumeration? DocumentExternalApprovalState
    {
      get { return this._DocumentExternalApprovalState; }
      set { this.SetEnumPropertyValue("DocumentExternalApprovalState", this._DocumentExternalApprovalState, value, (propertyValue) => { this._DocumentExternalApprovalState = propertyValue; }, this.DocumentExternalApprovalStateChangedHandler, this.DocumentExternalApprovalStateAllowedItems); }
    }


    private global::Sungero.Company.IEmployee _Signatory;
    public virtual global::Sungero.Company.IEmployee Signatory
    {
      get
      {
        return this._Signatory;
      }

      set
      {
        this.SetPropertyValue("Signatory", this._Signatory, value, (propertyValue) => { this._Signatory = propertyValue; }, this.SignatoryChangedHandler);
      }
    }
    private global::Sungero.Docflow.IApprovalRuleBase _ApprovalRule;
    public virtual global::Sungero.Docflow.IApprovalRuleBase ApprovalRule
    {
      get
      {
        return this._ApprovalRule;
      }

      set
      {
        this.SetPropertyValue("ApprovalRule", this._ApprovalRule, value, (propertyValue) => { this._ApprovalRule = propertyValue; }, this.ApprovalRuleChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }
    private global::Sungero.Docflow.IMailDeliveryMethod _DeliveryMethod;
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get
      {
        return this._DeliveryMethod;
      }

      set
      {
        this.SetPropertyValue("DeliveryMethod", this._DeliveryMethod, value, (propertyValue) => { this._DeliveryMethod = propertyValue; }, this.DeliveryMethodChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IExchangeService _ExchangeService;
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get
      {
        return this._ExchangeService;
      }

      set
      {
        this.SetPropertyValue("ExchangeService", this._ExchangeService, value, (propertyValue) => { this._ExchangeService = propertyValue; }, this.ExchangeServiceChangedHandler);
      }
    }
    private global::Sungero.Company.IEmployee _ReworkPerformer;
    public virtual global::Sungero.Company.IEmployee ReworkPerformer
    {
      get
      {
        return this._ReworkPerformer;
      }

      set
      {
        this.SetPropertyValue("ReworkPerformer", this._ReworkPerformer, value, (propertyValue) => { this._ReworkPerformer = propertyValue; }, this.ReworkPerformerChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskReqApprovers> _ReqApprovers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskReqApprovers> ReqApprovers
    {
      get
      {
        if (this._ReqApprovers == null)
        {
          this._ReqApprovers = this.CreateReqApproversCollection();
          this.SetReqApproversEventHandlers();
        }
        return this._ReqApprovers;
      }

      set
      {
        if (this._ReqApprovers != null)
          this.UnsetChildCollectionEventHandlers(this._ReqApprovers);

        this._ReqApprovers = value;
        this.SetReqApproversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskReqApprovers> CreateReqApproversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskReqApprovers>() { RootEntity = this };
    }

    private void SetReqApproversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ReqApprovers, "ReqApprovers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ReqApprovers;
      changeNotifier.Added += this.ReqApproversAddedHandler;
      changeNotifier.Deleted += this.ReqApproversDeletedHandler;
      changeNotifier.Added += this.ReqApproversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ReqApproversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ReqApproversCollectionUpdateEventHandler;
    }

    private void ReqApproversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ReqApprovers"))
        this.ReqApproversChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApprovers> _AddApprovers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApprovers> AddApprovers
    {
      get
      {
        if (this._AddApprovers == null)
        {
          this._AddApprovers = this.CreateAddApproversCollection();
          this.SetAddApproversEventHandlers();
        }
        return this._AddApprovers;
      }

      set
      {
        if (this._AddApprovers != null)
          this.UnsetChildCollectionEventHandlers(this._AddApprovers);

        this._AddApprovers = value;
        this.SetAddApproversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApprovers> CreateAddApproversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApprovers>() { RootEntity = this };
    }

    private void SetAddApproversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddApprovers, "AddApprovers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddApprovers;
      changeNotifier.Added += this.AddApproversAddedHandler;
      changeNotifier.Deleted += this.AddApproversDeletedHandler;
      changeNotifier.Added += this.AddApproversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddApproversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddApproversCollectionUpdateEventHandler;
    }

    private void AddApproversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddApprovers"))
        this.AddApproversChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApproversExpanded> _AddApproversExpanded;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApproversExpanded> AddApproversExpanded
    {
      get
      {
        if (this._AddApproversExpanded == null)
        {
          this._AddApproversExpanded = this.CreateAddApproversExpandedCollection();
          this.SetAddApproversExpandedEventHandlers();
        }
        return this._AddApproversExpanded;
      }

      set
      {
        if (this._AddApproversExpanded != null)
          this.UnsetChildCollectionEventHandlers(this._AddApproversExpanded);

        this._AddApproversExpanded = value;
        this.SetAddApproversExpandedEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApproversExpanded> CreateAddApproversExpandedCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddApproversExpanded>() { RootEntity = this };
    }

    private void SetAddApproversExpandedEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddApproversExpanded, "AddApproversExpanded");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddApproversExpanded;
      changeNotifier.Added += this.AddApproversExpandedAddedHandler;
      changeNotifier.Deleted += this.AddApproversExpandedDeletedHandler;
      changeNotifier.Added += this.AddApproversExpandedCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddApproversExpandedCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddApproversExpandedCollectionUpdateEventHandler;
    }

    private void AddApproversExpandedCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddApproversExpanded"))
        this.AddApproversExpandedChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRevokedDocumentsRights> _RevokedDocumentsRights;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRevokedDocumentsRights> RevokedDocumentsRights
    {
      get
      {
        if (this._RevokedDocumentsRights == null)
        {
          this._RevokedDocumentsRights = this.CreateRevokedDocumentsRightsCollection();
          this.SetRevokedDocumentsRightsEventHandlers();
        }
        return this._RevokedDocumentsRights;
      }

      set
      {
        if (this._RevokedDocumentsRights != null)
          this.UnsetChildCollectionEventHandlers(this._RevokedDocumentsRights);

        this._RevokedDocumentsRights = value;
        this.SetRevokedDocumentsRightsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRevokedDocumentsRights> CreateRevokedDocumentsRightsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRevokedDocumentsRights>() { RootEntity = this };
    }

    private void SetRevokedDocumentsRightsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._RevokedDocumentsRights, "RevokedDocumentsRights");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._RevokedDocumentsRights;
      changeNotifier.Added += this.RevokedDocumentsRightsAddedHandler;
      changeNotifier.Deleted += this.RevokedDocumentsRightsDeletedHandler;
      changeNotifier.Added += this.RevokedDocumentsRightsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RevokedDocumentsRightsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RevokedDocumentsRightsCollectionUpdateEventHandler;
    }

    private void RevokedDocumentsRightsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("RevokedDocumentsRights"))
        this.RevokedDocumentsRightsChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddressees> _Addressees;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddressees> Addressees
    {
      get
      {
        if (this._Addressees == null)
        {
          this._Addressees = this.CreateAddresseesCollection();
          this.SetAddresseesEventHandlers();
        }
        return this._Addressees;
      }

      set
      {
        if (this._Addressees != null)
          this.UnsetChildCollectionEventHandlers(this._Addressees);

        this._Addressees = value;
        this.SetAddresseesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddressees> CreateAddresseesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddressees>() { RootEntity = this };
    }

    private void SetAddresseesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Addressees, "Addressees");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Addressees;
      changeNotifier.Added += this.AddresseesAddedHandler;
      changeNotifier.Deleted += this.AddresseesDeletedHandler;
      changeNotifier.Added += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddresseesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddresseesCollectionUpdateEventHandler;
    }

    private void AddresseesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Addressees"))
        this.AddresseesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddedAddenda> _AddedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddedAddenda> AddedAddenda
    {
      get
      {
        if (this._AddedAddenda == null)
        {
          this._AddedAddenda = this.CreateAddedAddendaCollection();
          this.SetAddedAddendaEventHandlers();
        }
        return this._AddedAddenda;
      }

      set
      {
        if (this._AddedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._AddedAddenda);

        this._AddedAddenda = value;
        this.SetAddedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddedAddenda> CreateAddedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskAddedAddenda>() { RootEntity = this };
    }

    private void SetAddedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddedAddenda, "AddedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddedAddenda;
      changeNotifier.Added += this.AddedAddendaAddedHandler;
      changeNotifier.Deleted += this.AddedAddendaDeletedHandler;
      changeNotifier.Added += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddedAddendaCollectionUpdateEventHandler;
    }

    private void AddedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddedAddenda"))
        this.AddedAddendaChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRemovedAddenda> _RemovedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRemovedAddenda> RemovedAddenda
    {
      get
      {
        if (this._RemovedAddenda == null)
        {
          this._RemovedAddenda = this.CreateRemovedAddendaCollection();
          this.SetRemovedAddendaEventHandlers();
        }
        return this._RemovedAddenda;
      }

      set
      {
        if (this._RemovedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._RemovedAddenda);

        this._RemovedAddenda = value;
        this.SetRemovedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRemovedAddenda> CreateRemovedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskRemovedAddenda>() { RootEntity = this };
    }

    private void SetRemovedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._RemovedAddenda, "RemovedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._RemovedAddenda;
      changeNotifier.Added += this.RemovedAddendaAddedHandler;
      changeNotifier.Deleted += this.RemovedAddendaDeletedHandler;
      changeNotifier.Added += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RemovedAddendaCollectionUpdateEventHandler;
    }

    private void RemovedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("RemovedAddenda"))
        this.RemovedAddendaChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IApprovalTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.ApprovalTaskCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IApprovalTask)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.ApprovalTaskCreatingFromServerHandler((global::Sungero.Docflow.IApprovalTask)entitySource, this.Info);
    }

    #region Framework events

    protected void ReqApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ReqApproversChanged(args);
    }

    protected void AddApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddApproversChanged(args);
    }

    protected void SignatoryChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskSignatoryChangedEventArgs(this.State.Properties.Signatory, this.Signatory, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).SignatoryChanged(args);
    }

    protected void StageNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.StageNumber, this.StageNumber, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).StageNumberChanged(args);
    }

    protected void ApprovalRuleChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskApprovalRuleChangedEventArgs(this.State.Properties.ApprovalRule, this.ApprovalRule, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ApprovalRuleChanged(args);
    }

    protected void ControlReturnStartDateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.ControlReturnStartDate, this.ControlReturnStartDate, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ControlReturnStartDateChanged(args);
    }

    protected void IterationChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Iteration, this.Iteration, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).IterationChanged(args);
    }

    protected void AbortingReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.AbortingReason, this.AbortingReason, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AbortingReasonChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }

    protected void ResolutionTextChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ResolutionText, this.ResolutionText, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ResolutionTextChanged(args);
    }

    protected void ReworkReasonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ReworkReason, this.ReworkReason, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ReworkReasonChanged(args);
    }

    protected void DeliveryMethodChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskDeliveryMethodChangedEventArgs(this.State.Properties.DeliveryMethod, this.DeliveryMethod, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).DeliveryMethodChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void AddApproversExpandedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddApproversExpandedChanged(args);
    }

    protected void IsStageAssigneeNotFoundChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsStageAssigneeNotFound, this.IsStageAssigneeNotFound, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).IsStageAssigneeNotFoundChanged(args);
    }

    protected void DocumentExternalApprovalStateChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.DocumentExternalApprovalState, this.DocumentExternalApprovalState, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).DocumentExternalApprovalStateChanged(args);
    }

    protected void ReworkPerformerChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.ApprovalTaskReworkPerformerChangedEventArgs(this.State.Properties.ReworkPerformer, this.ReworkPerformer, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).ReworkPerformerChanged(args);
    }

    protected void RevokedDocumentsRightsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).RevokedDocumentsRightsChanged(args);
    }

    protected void AddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddresseesChanged(args);
    }

    protected void IsManyAddresseesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.IsManyAddressees, this.IsManyAddressees, this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).IsManyAddresseesChanged(args);
    }

    protected void AddedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddedAddendaChanged(args);
    }

    protected void RemovedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).RemovedAddendaChanged(args);
    }




    protected virtual global::Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers CreateReqApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers CreateReqApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ReqApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ReqApproversAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateReqApproversAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ReqApproversAdded(args);
        }
      }
    }

    protected virtual void ReqApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskReqApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ReqApproversDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateReqApproversDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ReqApproversDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers CreateAddApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers CreateAddApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddApproversAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddApproversAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddApproversAdded(args);
        }
      }
    }

    protected virtual void AddApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddApproversDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddApproversDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddApproversDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers CreateAddApproversExpandedAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers CreateAddApproversExpandedDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddApproversExpandedAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddApproversExpandedAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddApproversExpandedAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddApproversExpandedAdded(args);
        }
      }
    }

    protected virtual void AddApproversExpandedDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddApproversExpandedSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddApproversExpandedDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddApproversExpandedDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddApproversExpandedDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers CreateRevokedDocumentsRightsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers CreateRevokedDocumentsRightsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RevokedDocumentsRightsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RevokedDocumentsRightsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRevokedDocumentsRightsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RevokedDocumentsRightsAdded(args);
        }
      }
    }

    protected virtual void RevokedDocumentsRightsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskRevokedDocumentsRightsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RevokedDocumentsRightsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRevokedDocumentsRightsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RevokedDocumentsRightsDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers CreateAddresseesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers CreateAddresseesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddresseesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddresseesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddresseesAdded(args);
        }
      }
    }

    protected virtual void AddresseesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddresseesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddresseesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddresseesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddresseesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddedAddendaAdded(args);
        }
      }
    }

    protected virtual void AddedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddedAddendaDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RemovedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RemovedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RemovedAddendaAdded(args);
        }
      }
    }

    protected virtual void RemovedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.ApprovalTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RemovedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RemovedAddendaDeleted(args);
        }
      }
    }


    #endregion


    public ApprovalTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IApprovalTaskDocumentGroupAttachments DocumentGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalTaskDocumentGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IApprovalTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.ApprovalTaskOtherGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).DocumentGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).DocumentGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).DocumentGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }

    }
    #endregion

    #region Workflow blocks

    public new virtual global::Sungero.Docflow.IApprovalTaskBlocksInfo Blocks
    {
      get
      {
        return new global::Sungero.Docflow.Server.ApprovalTaskBlocksInfo(this);
      }
    }

    #endregion

  }
}

// ==================================================================
// ApprovalTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class ApprovalTaskSignatoryPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public ApprovalTaskSignatoryPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskSignatorySearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> SignatorySearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskSignatorySearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalTaskApprovalRulePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public ApprovalTaskApprovalRulePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskApprovalRuleSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IApprovalRuleBase
  {

    public virtual global::System.Linq.IQueryable<T> ApprovalRuleSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskApprovalRuleSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalTaskAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalTaskDeliveryMethodPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskDeliveryMethodPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskDeliveryMethodSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Docflow.IMailDeliveryMethod
  {

    public virtual global::System.Linq.IQueryable<T> DeliveryMethodSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskDeliveryMethodSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalTaskExchangeServicePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public ApprovalTaskExchangeServicePropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskExchangeServiceSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {

    public virtual global::System.Linq.IQueryable<T> ExchangeServiceSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskExchangeServiceSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class ApprovalTaskReworkPerformerPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ReworkPerformerFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskReworkPerformerPropertyFilteringServerHandler(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskReworkPerformerSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> ReworkPerformerSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public ApprovalTaskReworkPerformerSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class ApprovalTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IApprovalTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IApprovalTaskFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IApprovalTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public ApprovalTaskFilteringServerHandler(global::Sungero.Docflow.IApprovalTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected ApprovalTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class ApprovalTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.ApprovalTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.ApprovalTaskSearchDialogModel)this.Dialog;
       }
     }

     public ApprovalTaskSearchDialogServerHandler(global::Sungero.Docflow.Server.ApprovalTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ApprovalTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public ApprovalTaskServerHandlers(global::Sungero.Docflow.IApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class ApprovalTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IApprovalTask _source
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Source; }
    }

    private global::Sungero.Docflow.IApprovalTaskInfo _info
    {
      get { return (global::Sungero.Docflow.IApprovalTaskInfo)this._Info; }
    }

    public ApprovalTaskCreatingFromServerHandler(global::Sungero.Docflow.IApprovalTask source, global::Sungero.Docflow.IApprovalTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ApprovalTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.Docflow.IApprovalTaskAccessRights
  {

    public ApprovalTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ApprovalTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.Docflow.IApprovalTaskAccessRights
  {

    public ApprovalTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ApprovalTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class ApprovalTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.Docflow.IApprovalTaskRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IApprovalTask 
    {
       public new global::Sungero.Docflow.IApprovalTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IApprovalTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IApprovalTaskInfo Info
       {
          get { return (global::Sungero.Docflow.IApprovalTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.ApprovalTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ApprovalTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// ApprovalTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class ApprovalTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Entity; }
    }

    public ApprovalTaskFunctions(global::Sungero.Docflow.IApprovalTask entity) : base(entity) { }
  }
}

// ==================================================================
// ApprovalTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class ApprovalTask
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetTaskAssigments(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetTaskAssigments",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetTaskAssigments(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetFunctionBlockProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBaseStages stage, Sungero.Core.StateBlock taskBlock)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetFunctionBlockProperties", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBaseStages), typeof(Sungero.Core.StateBlock) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage, taskBlock });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetApprovalCheckReturnBlockProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBaseStages stage, Sungero.Core.StateBlock taskBlock)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetApprovalCheckReturnBlockProperties", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBaseStages), typeof(Sungero.Core.StateBlock) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage, taskBlock });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.String GetHeader(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::System.Boolean isResolutionBlock)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetHeader", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Boolean) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, isResolutionBlock });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.StateViewAssignmentInfo GetPerformerAndDeadlineAndStatus(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::System.Boolean isResolutionBlock)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPerformerAndDeadlineAndStatus", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Boolean) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.StateViewAssignmentInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, isResolutionBlock });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.StateViewAssignmentInfo GetPerformerAndDeadlineAndStatus(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean isResolutionBlock, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPerformerAndDeadlineAndStatus", new System.Type[] { typeof(global::System.Boolean), typeof(global::Sungero.Workflow.IAssignment) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.StateViewAssignmentInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isResolutionBlock, assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void AddActionItemInfo(Sungero.Core.StateBlock block, global::Sungero.Workflow.ITask actionItem)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddActionItemInfo",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Workflow.ITask) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { block, actionItem });
      }
      else
      {
    global::Sungero.Docflow.Server.ApprovalTaskFunctions.AddActionItemInfo(block, actionItem);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStagesStateView(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStagesStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.DateTime> GetDocumentLastViewDate(global::Sungero.Content.IElectronicDocument document, global::Sungero.CoreEntities.IUser employee)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDocumentLastViewDate",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument), typeof(global::Sungero.CoreEntities.IUser) }, null);
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, employee });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetDocumentLastViewDate(document, employee);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean DocumentHasBodyUpdateAfterLastView(global::Sungero.Content.IElectronicDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DocumentHasBodyUpdateAfterLastView",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.DocumentHasBodyUpdateAfterLastView(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean DocumenHasBeenViewed(global::Sungero.Content.IElectronicDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("DocumenHasBeenViewed",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.DocumenHasBeenViewed(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> GetAvailableToCollapseStageTypes()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetAvailableToCollapseStageTypes",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetAvailableToCollapseStageTypes();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean NeedCollapse(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedCollapse", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> GetCollapsedStages(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedStages", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.Int32> CollapsedDeadlineInDays(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CollapsedDeadlineInDays", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.Int32> CollapsedDeadlineInHours(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CollapsedDeadlineInHours", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.String GetCollapsedSubject(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedSubject", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.String GetCollapsedThreadSubject(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedThreadSubject", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>> GetCollapsedStagesTypes(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedStagesTypes", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite) });
      return (global::System.Collections.Generic.List<global::System.Nullable<global::Sungero.Core.Enumeration>>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  CommonLibrary.LocalizedString GetCollapsedResult(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Nullable<global::Sungero.Core.Enumeration> result)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedResult", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
      return (CommonLibrary.LocalizedString)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { result });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetCollapsedStageInstructions(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Core.Enumeration currentType, global::System.Nullable<global::System.Int32> stageNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCollapsedStageInstructions", new System.Type[] { typeof(global::Sungero.Core.Enumeration), typeof(global::System.Nullable<global::System.Int32>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { currentType, stageNumber });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CurrentStageCollapsedWithSpecificStage(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite currentStage, global::Sungero.Core.Enumeration specificStageType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CurrentStageCollapsedWithSpecificStage", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite), typeof(global::Sungero.Core.Enumeration) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { currentStage, specificStageType });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CurrentStageCollapsedWithSpecificStage(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Nullable<global::System.Int32> currentStageNumber, global::Sungero.Core.Enumeration specificStageType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CurrentStageCollapsedWithSpecificStage", new System.Type[] { typeof(global::System.Nullable<global::System.Int32>), typeof(global::Sungero.Core.Enumeration) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { currentStageNumber, specificStageType });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean NeedSkipSignStage(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite stage, global::Sungero.Company.IEmployee signatory, global::Sungero.Company.IEmployee addressee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedSkipSignStage", new System.Type[] { typeof(global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite), typeof(global::Sungero.Company.IEmployee), typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage, signatory, addressee });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean NeedSkipSendingStage(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean isCollapsedWithSigning)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedSkipSendingStage", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isCollapsedWithSigning });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void IssueDocument(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Int64 returnResponsibleID)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IssueDocument", new System.Type[] { typeof(global::System.Int64) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { returnResponsibleID });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void IssueDocumentToCounterparty(global::Sungero.Docflow.IApprovalTask task, global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::System.Int32> days, global::System.Int64 performerId, global::Sungero.Core.Enumeration action)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IssueDocumentToCounterparty",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask), typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Nullable<global::System.Int32>), typeof(global::System.Int64), typeof(global::Sungero.Core.Enumeration) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, document, days, performerId, action });
      }
      else
      {
    global::Sungero.Docflow.Server.ApprovalTaskFunctions.IssueDocumentToCounterparty(task, document, days, performerId, action);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void GrantAccessRightsForAttachments(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsForAttachments", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignments });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void GrantAccessRightsForAttachments(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> recipients)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsForAttachments", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { recipients });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetAccessRightsForAttachments(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.CoreEntities.IRecipient recipient, global::System.Guid accessRightsType, global::System.Boolean withRestrict)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetAccessRightsForAttachments", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Guid), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { recipient, accessRightsType, withRestrict });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void GrantAccessRightsForAttachmentsToInitiatorOnAbort(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsForAttachmentsToInitiatorOnAbort", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RestrictAccessRightsForAssignmentsPerformers(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestrictAccessRightsForAssignmentsPerformers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignments });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RestrictAccessRightsForAssignmentPerformer(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestrictAccessRightsForAssignmentPerformer", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void GrantAccessRightsOnDocument(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.CoreEntities.IRecipient recipient, global::System.Guid accessRightsType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GrantAccessRightsOnDocument", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.CoreEntities.IRecipient), typeof(global::System.Guid) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, recipient, accessRightsType });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RestrictAccessRightsForAttachmentsToInitiatorOnStart(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestrictAccessRightsForAttachmentsToInitiatorOnStart", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RestrictAccessRightsForAttachmentsToReworkPerformer(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.CoreEntities.IRecipient performer)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestrictAccessRightsForAttachmentsToReworkPerformer", new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { performer });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RestrictAccessRightsForAttachmentsToInitiatorOnRework(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RestrictAccessRightsForAttachmentsToInitiatorOnRework", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SaveTaskInitiatorAccessRights(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean isStrictMode)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SaveTaskInitiatorAccessRights", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isStrictMode });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetSkippedRecipientAccessRights(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalStage stage, global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetSkippedRecipientAccessRights", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStage), typeof(global::Sungero.CoreEntities.IRecipient) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage, recipient });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RelateAddedAddendaToPrimaryDocument(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RelateAddedAddendaToPrimaryDocument", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries GetAttachmentHistoryEntriesByGroupId(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Guid groupId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAttachmentHistoryEntriesByGroupId", new System.Type[] { typeof(global::System.Guid) });
      return (global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { groupId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetDocumentStateAborted(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean setObsolete)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentStateAborted", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { setObsolete });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetDocumentStateAbortedAsync(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean setObsolete, global::System.Boolean needSetState, global::System.Boolean needGrantAccessRightsOnDocument)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentStateAbortedAsync", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { setObsolete, needSetState, needGrantAccessRightsOnDocument });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CheckSequenceOfCoupleStages(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Core.Enumeration firstStageType, global::Sungero.Core.Enumeration secondStageType, global::System.Boolean allowAdditionalApprovers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckSequenceOfCoupleStages", new System.Type[] { typeof(global::Sungero.Core.Enumeration), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { firstStageType, secondStageType, allowAdditionalApprovers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CheckSignatory(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Company.IEmployee signatory, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckSignatory", new System.Type[] { typeof(global::Sungero.Company.IEmployee), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signatory, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Workflow.IAssignment GetLastTaskAssigment(global::Sungero.Workflow.ITask task, global::System.Nullable<global::System.DateTime> assignmentCreated)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLastTaskAssigment",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::System.Nullable<global::System.DateTime>) }, null);
        return (global::Sungero.Workflow.IAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignmentCreated });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetLastTaskAssigment(task, assignmentCreated);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> GetParallelAssignments(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetParallelAssignments", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
      return (global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsSignatoryAbortTask(global::Sungero.Workflow.ITask task, global::System.Nullable<global::System.DateTime> assignmentCreated)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsSignatoryAbortTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::System.Nullable<global::System.DateTime>) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignmentCreated });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsSignatoryAbortTask(task, assignmentCreated);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsExternalSignatoryAbortTask(global::Sungero.Workflow.ITask task, global::System.Nullable<global::System.DateTime> assignmentCreated)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsExternalSignatoryAbortTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::System.Nullable<global::System.DateTime>) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignmentCreated });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsExternalSignatoryAbortTask(task, assignmentCreated);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsInvoiceAmendmentRequest(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsInvoiceAmendmentRequest",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsInvoiceAmendmentRequest(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsAddresseeAbortTask(global::Sungero.Workflow.ITask task, global::System.Nullable<global::System.DateTime> assignmentCreated)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsAddresseeAbortTask",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::System.Nullable<global::System.DateTime>) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignmentCreated });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsAddresseeAbortTask(task, assignmentCreated);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsAttachmentObsolete(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsAttachmentObsolete",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsAttachmentObsolete(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean IsAttachmentTerminated(global::Sungero.Workflow.ITask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("IsAttachmentTerminated",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask) }, null);
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.IsAttachmentTerminated(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.ApprovalStatus AuthorMustApproveDocument(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.CoreEntities.IUser assignee, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> approvers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AuthorMustApproveDocument", new System.Type[] { typeof(global::Sungero.CoreEntities.IUser), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.ApprovalStatus)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignee, approvers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean HasValidSignature(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.CoreEntities.IUser user)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasValidSignature", new System.Type[] { typeof(global::Sungero.CoreEntities.IUser) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { user });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void UpdateApprovalState(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateApprovalState", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { state });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void UpdateAddendaApprovalState(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateAddendaApprovalState", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, state });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void UpdateDocumentApprovalState(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument document, global::System.Nullable<global::Sungero.Core.Enumeration> state)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateDocumentApprovalState", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, state });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetDocumentSignatory(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee signatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetDocumentSignatory", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, signatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SetAddendaSignatory(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::Sungero.Company.IEmployee signatory)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetAddendaSignatory", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, signatory });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean DocumentHasApprovalSignature(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DocumentHasApprovalSignature", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Workflow.IAssignment) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document, assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void ApprovalRuleChanged(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ApprovalRuleChanged", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void ApprovalRuleChanged(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ApprovalRuleChanged", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void ApprovalRuleChanged(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ApprovalRuleChanged", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void UpdateReglamentApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateReglamentApprovers", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void UpdateReglamentApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateReglamentApprovers", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  void UpdateReglamentApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalRuleBase rule)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateReglamentApprovers", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalRuleBase) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { rule });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAllRequiredApprovers(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAllRequiredApprovers", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAllRequiredApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAllRequiredApprovers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite>) });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetAllRequiredApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAllRequiredApprovers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>) });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite GetStage(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Core.Enumeration stageType)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStage", new System.Type[] { typeof(global::Sungero.Core.Enumeration) });
      return (global::Sungero.Docflow.Structures.Module.DefinedApprovalStageLite)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stageType });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Boolean NeedControlReturn(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedControlReturn", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.String GetEndorsingResultFromSignature(Sungero.Domain.Shared.ISignature signature, global::System.Boolean emptyIfNotValid)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetEndorsingResultFromSignature",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Domain.Shared.ISignature), typeof(global::System.Boolean) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { signature, emptyIfNotValid });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetEndorsingResultFromSignature(signature, emptyIfNotValid);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void UpdateApprovalSheetReportTable(global::Sungero.Docflow.IOfficialDocument document, global::System.String reportSessionId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("UpdateApprovalSheetReportTable",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.String) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document, reportSessionId });
      }
      else
      {
    global::Sungero.Docflow.Server.ApprovalTaskFunctions.UpdateApprovalSheetReportTable(document, reportSessionId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAdditionalAssignees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAssignees(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean withObservers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAssignees", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { withObservers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.IApprovalReworkAssignment GetLastReworkAssignment(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLastReworkAssignment", new System.Type[] {  });
      return (global::Sungero.Docflow.IApprovalReworkAssignment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void FillApproversList(global::Sungero.Docflow.IApprovalTask approvalTask, Sungero.Docflow.Server.ApprovalReworkAssignmentBlock block, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> approvers, global::System.Boolean isRequiredApprovers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillApproversList", new System.Type[] { typeof(Sungero.Docflow.Server.ApprovalReworkAssignmentBlock), typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, approvers, isRequiredApprovers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetAllApproversAndSignatories(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAllApproversAndSignatories", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.ExchangeServies GetExchangeServices(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExchangeServices", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.ApprovalTask.ExchangeServies)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  void CreateParamsCache(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateParamsCache", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void FillReworkReasonWhenAssigneeNotFound(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalStage stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillReworkReasonWhenAssigneeNotFound", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStage) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void RefreshDeliveryMethod(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IMailDeliveryMethod deliveryMethod)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshDeliveryMethod", new System.Type[] { typeof(global::Sungero.Docflow.IMailDeliveryMethod) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { deliveryMethod });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void UpdateAdditionalApprovers(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> approvers)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateAdditionalApprovers", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { approvers });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Nullable<global::System.DateTime> GetExpectedDate(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExpectedDate", new System.Type[] {  });
      return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Nullable<global::System.DateTime> GetExpectedDate(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment currentAssignment, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExpectedDate", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>) });
      return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { currentAssignment, stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.DateTime GetMaxAssignmentDeadline(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalStageBase stageBase, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetMaxAssignmentDeadline", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStageBase), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) });
      return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stageBase, assignments });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true, IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalStages GetStages(global::Sungero.Docflow.IApprovalTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStages",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask) }, null);
        return (global::Sungero.Docflow.Structures.Module.DefinedApprovalStages)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Server.ApprovalTaskFunctions.GetStages(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true, IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalStages GetApprovalStages(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetApprovalStages", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.Module.DefinedApprovalStages)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true, IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStages GetBaseStages(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetBaseStages", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStages)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters GetFullStagesInfoForRefresh(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFullStagesInfoForRefresh", new System.Type[] {  });
      return (global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters GetFullStagesInfoForRefresh(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFullStagesInfoForRefresh", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stages });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> GetReworkPerformers(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetReworkPerformers", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Company.IEmployee GetReworkPerformer(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalStage stage)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetReworkPerformer", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalStage) });
      return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stage });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.CoreEntities.IUser GetLastAssignmentPerformer(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLastAssignmentPerformer", new System.Type[] {  });
      return (global::Sungero.CoreEntities.IUser)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void DeleteFunctionQueueItem(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DeleteFunctionQueueItem", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.IApprovalFunctionStageBase GetFunctionStage(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetFunctionStage", new System.Type[] {  });
      return (global::Sungero.Docflow.IApprovalFunctionStageBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void AbortPassedFunctionStages(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AbortPassedFunctionStages", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void ReworkPassedFunctionStages(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ReworkPassedFunctionStages", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> GetPassedFunctionStages(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPassedFunctionStages", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Nullable<global::System.DateTime> GetApprovalTaskModified(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetApprovalTaskModified", new System.Type[] {  });
      return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean GetApprovalWithSuggestionsParameter(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Int32 stageNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetApprovalWithSuggestionsParameter", new System.Type[] { typeof(global::System.Int32) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stageNumber });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void SendApprovalAbortNotice(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendApprovalAbortNotice", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.ApprovalTaskFunctions" />
    internal static  void ExecuteApprovalFunctionAsyncHandler(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IApprovalFunctionQueueItem queueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ExecuteApprovalFunctionAsyncHandler", new System.Type[] { typeof(global::Sungero.Docflow.IApprovalFunctionQueueItem) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { queueItem });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.Int32> GetNextStageNumber(global::Sungero.Docflow.IApprovalTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetNextStageNumber",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IApprovalTask) }, null);
        return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Shared.ApprovalTaskFunctions.GetNextStageNumber(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters refreshParameters)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] { typeof(global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { refreshParameters });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SetVisibleProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters refreshParameters)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetVisibleProperties", new System.Type[] { typeof(global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { refreshParameters });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SetEnabledProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters refreshParameters)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetEnabledProperties", new System.Type[] { typeof(global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { refreshParameters });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.String GetDeliveryMethodDescription(global::Sungero.Docflow.IMailDeliveryMethod method, global::Sungero.ExchangeCore.IExchangeService service, global::System.Boolean isManyAddressees)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.ApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDeliveryMethodDescription",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IMailDeliveryMethod), typeof(global::Sungero.ExchangeCore.IExchangeService), typeof(global::System.Boolean) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { method, service, isManyAddressees });
      }
      else
      {
        return global::Sungero.Docflow.Shared.ApprovalTaskFunctions.GetDeliveryMethodDescription(method, service, isManyAddressees);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RefreshApprovalTaskForm(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite> stages, global::System.Boolean updateCache)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshApprovalTaskForm", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.Module.DefinedApprovalBaseStageLite>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stages, updateCache });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RefreshApprovalTaskForm(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Boolean updateCache)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshApprovalTaskForm", new System.Type[] { typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { updateCache });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters GetOrUpdateAssignmentRefreshParams(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Workflow.IAssignment assignment, global::System.Boolean updateCache)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetOrUpdateAssignmentRefreshParams", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Boolean) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment, updateCache });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters GetRefreshParams(global::Sungero.Docflow.IApprovalTask approvalTask, Domain.Shared.IExtendedEntity entity)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRefreshParams", new System.Type[] { typeof(Domain.Shared.IExtendedEntity) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { entity });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SetRefreshParams(global::Sungero.Docflow.IApprovalTask approvalTask, Domain.Shared.IExtendedEntity entity, global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters refreshParameters)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRefreshParams", new System.Type[] { typeof(Domain.Shared.IExtendedEntity), typeof(global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { entity, refreshParameters });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RefreshProperties(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters refreshParameters)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshProperties", new System.Type[] { typeof(global::Sungero.Docflow.Structures.ApprovalTask.RefreshParameters) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { refreshParameters });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean SchemeVersionSupportsRework(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SchemeVersionSupportsRework", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean SchemeVersionSupportsApproveWithSuggestions(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SchemeVersionSupportsApproveWithSuggestions", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean ClientValidateApprovalTaskStart(global::Sungero.Docflow.IApprovalTask approvalTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ClientValidateApprovalTaskStart", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean ValidateApprovalTaskStart(global::Sungero.Docflow.IApprovalTask approvalTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateApprovalTaskStart", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean NeedGrantAccessRightsOnDocument(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedGrantAccessRightsOnDocument", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void ClearAddresseesAndFillFirstAddressee(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ClearAddresseesAndFillFirstAddressee", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void FillAddresseeFromAddressees(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillAddresseeFromAddressees", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SychronizeMemoAddressees(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IMemo document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SychronizeMemoAddressees", new System.Type[] { typeof(global::Sungero.Docflow.IMemo) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SynchronizeAddresses(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees, global::Sungero.Company.IEmployee addressee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddresses", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>), typeof(global::Sungero.Company.IEmployee) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees, addressee });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SetAddressees(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetAddressees", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean AreAdresseesEquals(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Collections.Generic.List<global::Sungero.Company.IEmployee> addressees)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AreAdresseesEquals", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Company.IEmployee>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addressees });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void SynchronizeAddendaAndAttachmentsGroup(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddendaAndAttachmentsGroup", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void AddedAddendaRemove(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaRemove", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  void RemovedAddendaRemove(global::Sungero.Docflow.IApprovalTask approvalTask, global::Sungero.Docflow.IOfficialDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaRemove", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetAddendaGroupAttachments(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddendaGroupAttachments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetAddedAddenda(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetRemovedAddenda(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetAddedAddendaFromAssignments(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddendaFromAssignments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetRemovedAddendaFromAssignments(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddendaFromAssignments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.ApprovalTask.ReworkParameters GetAssignmentReworkParameters(global::Sungero.Docflow.IApprovalTask approvalTask, global::System.Int32 stageNumber)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAssignmentReworkParameters", new System.Type[] { typeof(global::System.Int32) });
      return (global::Sungero.Docflow.Structures.ApprovalTask.ReworkParameters)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stageNumber });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.ApprovalTaskFunctions" />
    internal static  global::System.Boolean HasDocumentAndCanRead(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)approvalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasDocumentAndCanRead", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// ApprovalTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalTaskServerPublicFunctions : global::Sungero.Docflow.Server.IApprovalTaskServerPublicFunctions
  {
    public global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetAllApproversAndSignatories(global::Sungero.Docflow.IApprovalTask approvalTask)
    {
      return global::Sungero.Docflow.Functions.ApprovalTask.GetAllApproversAndSignatories(approvalTask);
    }
    public global::System.Nullable<global::System.DateTime> GetDocumentLastViewDate(global::Sungero.Content.IElectronicDocument document, global::Sungero.CoreEntities.IUser employee)
    {
      return global::Sungero.Docflow.Functions.ApprovalTask.GetDocumentLastViewDate(document, employee);
    }
  }
}

// ==================================================================
// ApprovalTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class ApprovalTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.ApprovalTask.ApprovalTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ApprovalTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<ApprovalTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public ApprovalTaskArguments(ApprovalTaskBlock block) : base(block) { }
  }

  public class ApprovalTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<ApprovalTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.Docflow.IApprovalTask> 
  {
    public ApprovalTaskEndBlockEventArguments(ApprovalTaskBlock block) : base(block) { }
  }

  public partial class ApprovalTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.Int32? StageNumber
    {
      get { return this.GetCustomProperty<global::System.Int32?>("StageNumber"); }
      set { this.SetCustomProperty("StageNumber", value); }
    }
    public virtual global::System.DateTime? ControlReturnStartDate
    {
      get { return this.GetCustomProperty<global::System.DateTime?>("ControlReturnStartDate"); }
      set { this.SetCustomProperty("ControlReturnStartDate", value); }
    }
    public virtual global::System.Int32? Iteration
    {
      get { return this.GetCustomProperty<global::System.Int32?>("Iteration"); }
      set { this.SetCustomProperty("Iteration", value); }
    }
    public virtual global::System.String ReworkReason
    {
      get { return this.GetCustomProperty<global::System.String>("ReworkReason"); }
      set { this.SetCustomProperty("ReworkReason", value); }
    }
    public virtual global::System.Boolean? IsStageAssigneeNotFound
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsStageAssigneeNotFound"); }
      set { this.SetCustomProperty("IsStageAssigneeNotFound", value); }
    }
    public virtual global::Sungero.Core.Enumeration? DocumentExternalApprovalState
    {
      get { return this.GetCustomEnumProperty("DocumentExternalApprovalState"); }
      set { this.SetCustomEnumProperty("DocumentExternalApprovalState", value); }
    }
    public virtual global::System.Boolean? IsManyAddressees
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("IsManyAddressees"); }
      set { this.SetCustomProperty("IsManyAddressees", value); }
    }

    public virtual global::Sungero.Company.IEmployee Signatory
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Signatory"); }
      set { this.SetCustomNavigationProperty("Signatory", value); }
    }
    public virtual global::Sungero.Docflow.IApprovalRuleBase ApprovalRule
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>("ApprovalRule"); }
      set { this.SetCustomNavigationProperty("ApprovalRule", value); }
    }
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }
    public virtual global::Sungero.Docflow.IMailDeliveryMethod DeliveryMethod
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Docflow.IMailDeliveryMethod>("DeliveryMethod"); }
      set { this.SetCustomNavigationProperty("DeliveryMethod", value); }
    }
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.ExchangeCore.IExchangeService>("ExchangeService"); }
      set { this.SetCustomNavigationProperty("ExchangeService", value); }
    }
    public virtual global::Sungero.Company.IEmployee ReworkPerformer
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("ReworkPerformer"); }
      set { this.SetCustomNavigationProperty("ReworkPerformer", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskReqApproversWrapper> _ReqApprovers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskReqApproversWrapper> GetApprovalTaskReqApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskReqApproversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskReqApproversWrapper> ReqApprovers
    {
      get 
      {
        if(this._ReqApprovers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("ReqApprovers"); 
          this._ReqApprovers = this.GetApprovalTaskReqApproversCollectionWrapper(items);
        }

        return this._ReqApprovers;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversWrapper> _AddApprovers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversWrapper> GetApprovalTaskAddApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskAddApproversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversWrapper> AddApprovers
    {
      get 
      {
        if(this._AddApprovers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddApprovers"); 
          this._AddApprovers = this.GetApprovalTaskAddApproversCollectionWrapper(items);
        }

        return this._AddApprovers;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversExpandedWrapper> _AddApproversExpanded;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversExpandedWrapper> GetApprovalTaskAddApproversExpandedCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskAddApproversExpandedCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddApproversExpandedWrapper> AddApproversExpanded
    {
      get 
      {
        if(this._AddApproversExpanded == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddApproversExpanded"); 
          this._AddApproversExpanded = this.GetApprovalTaskAddApproversExpandedCollectionWrapper(items);
        }

        return this._AddApproversExpanded;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRevokedDocumentsRightsWrapper> _RevokedDocumentsRights;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRevokedDocumentsRightsWrapper> GetApprovalTaskRevokedDocumentsRightsCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskRevokedDocumentsRightsCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRevokedDocumentsRightsWrapper> RevokedDocumentsRights
    {
      get 
      {
        if(this._RevokedDocumentsRights == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("RevokedDocumentsRights"); 
          this._RevokedDocumentsRights = this.GetApprovalTaskRevokedDocumentsRightsCollectionWrapper(items);
        }

        return this._RevokedDocumentsRights;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddresseesWrapper> _Addressees;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddresseesWrapper> GetApprovalTaskAddresseesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskAddresseesCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddresseesWrapper> Addressees
    {
      get 
      {
        if(this._Addressees == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("Addressees"); 
          this._Addressees = this.GetApprovalTaskAddresseesCollectionWrapper(items);
        }

        return this._Addressees;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddedAddendaWrapper> _AddedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddedAddendaWrapper> GetApprovalTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskAddedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskAddedAddendaWrapper> AddedAddenda
    {
      get 
      {
        if(this._AddedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddedAddenda"); 
          this._AddedAddenda = this.GetApprovalTaskAddedAddendaCollectionWrapper(items);
        }

        return this._AddedAddenda;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRemovedAddendaWrapper> _RemovedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRemovedAddendaWrapper> GetApprovalTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.ApprovalTaskRemovedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.ApprovalTaskRemovedAddendaWrapper> RemovedAddenda
    {
      get 
      {
        if(this._RemovedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("RemovedAddenda"); 
          this._RemovedAddenda = this.GetApprovalTaskRemovedAddendaCollectionWrapper(items);
        }

        return this._RemovedAddenda;
      }
    }



    public ApprovalTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// ApprovalTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalTaskReqApproversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskReqApproversWrapper>
  {
    protected override ApprovalTaskReqApproversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskReqApproversWrapper(value);
    }

    public ApprovalTaskReqApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskReqApproversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public ApprovalTaskReqApproversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskAddApproversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskAddApproversWrapper>
  {
    protected override ApprovalTaskAddApproversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskAddApproversWrapper(value);
    }

    public ApprovalTaskAddApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskAddApproversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public ApprovalTaskAddApproversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskAddApproversExpandedCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskAddApproversExpandedWrapper>
  {
    protected override ApprovalTaskAddApproversExpandedWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskAddApproversExpandedWrapper(value);
    }

    public ApprovalTaskAddApproversExpandedCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskAddApproversExpandedWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public ApprovalTaskAddApproversExpandedWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskRevokedDocumentsRightsCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskRevokedDocumentsRightsWrapper>
  {
    protected override ApprovalTaskRevokedDocumentsRightsWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskRevokedDocumentsRightsWrapper(value);
    }

    public ApprovalTaskRevokedDocumentsRightsCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskRevokedDocumentsRightsWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? DocumentId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("DocumentId"); }
          set { this.SetCustomProperty("DocumentId", value); }
        }

        public virtual global::Sungero.Core.Enumeration? RightType
        {
          get { return this.GetCustomEnumProperty("RightType"); }
          set { this.SetCustomEnumProperty("RightType", value); }
        }



    public ApprovalTaskRevokedDocumentsRightsWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskAddresseesCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskAddresseesWrapper>
  {
    protected override ApprovalTaskAddresseesWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskAddresseesWrapper(value);
    }

    public ApprovalTaskAddresseesCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskAddresseesWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Addressee"); }
      set { this.SetCustomNavigationProperty("Addressee", value); }
    }

    public ApprovalTaskAddresseesWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskAddedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskAddedAddendaWrapper>
  {
    protected override ApprovalTaskAddedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskAddedAddendaWrapper(value);
    }

    public ApprovalTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskAddedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public ApprovalTaskAddedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class ApprovalTaskRemovedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<ApprovalTaskRemovedAddendaWrapper>
  {
    protected override ApprovalTaskRemovedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new ApprovalTaskRemovedAddendaWrapper(value);
    }

    public ApprovalTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class ApprovalTaskRemovedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public ApprovalTaskRemovedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}

// ==================================================================
// ApprovalTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class ApprovalTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.Docflow.IApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IApprovalTask)this.Task; }
    }


              public virtual void EndBlock42(Sungero.Docflow.Server.ApprovalNotificationEndBlockEventArguments e)
              {
                
              }


    protected readonly int _schemeVersion;

    public ApprovalTaskRouteHandlers(global::Sungero.Docflow.IApprovalTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Необходимо использовать LayerSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
      public static readonly int V2 = 2;
      public static readonly int V3 = 3;
      public static readonly int V4 = 4;
      public static readonly int V5 = 5;
}

    }
}

// ==================================================================
// ApprovalTaskBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server.ApprovalTaskBlocks
{
}

// ==================================================================
// ApprovalTaskBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class ApprovalTaskBlocksInfo : global::Sungero.Docflow.IApprovalTaskBlocksInfo
  {
    private readonly Sungero.Workflow.ITask task;

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block29
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "29");
        }
      }

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block45
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "45");
        }
      }

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block52
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "52");
        }
      }


    public void ExecuteAllMonitoringBlocks()
    {
      new global::Sungero.Workflow.Server.TaskBlocksInfo(this.task).ExecuteAllMonitoringBlocks();
    }

    public ApprovalTaskBlocksInfo(Sungero.Workflow.ITask task)
    {
      this.task = task;
    }
  }

}
