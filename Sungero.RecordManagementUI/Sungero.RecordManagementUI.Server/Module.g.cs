
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public partial class RecordManagementUIModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("51247c94-981f-4bc8-819a-128704b5aa31"); }
    }

    public override string Name
    {
      get { return "Sungero.RecordManagementUI"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagementUI.Server.IModuleServerInitializationFunctions, global::Sungero.RecordManagementUI.Server.ModuleServerInitializationFunctions>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState, global::Sungero.RecordManagementUI.Shared.DocumentsToReturnFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState, global::Sungero.RecordManagementUI.Shared.PowerOfAttorneyListFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagementUI.Server.IModuleServerPublicFunctions, global::Sungero.RecordManagementUI.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.RecordManagementUI.Shared.IModuleSharedPublicFunctions, global::Sungero.RecordManagementUI.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public partial class DocumentsToReturnFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsDocumentsToReturnVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> DocumentsToReturnEmployeeFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IEmployee> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> DocumentsToReturnDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup> DocumentsToReturnRegistrationGroupFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> DocumentsToReturnFilelistFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile> query)
    {
      return query;
    }


    public DocumentsToReturnFolderHandlers(global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class PowerOfAttorneyListFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsPowerOfAttorneyListVisible()
    {
      return true;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister> PowerOfAttorneyListDocumentRegisterFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> PowerOfAttorneyListDocumentKindFiltering(global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> PowerOfAttorneyListBusinessUnitFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> PowerOfAttorneyListDepartmentFiltering(global::System.Linq.IQueryable<global::Sungero.Company.IDepartment> query)
    {
      return query;
    }

    public virtual global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> PowerOfAttorneyListPerformerFiltering(global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty> query)
    {
      return query;
    }


    public PowerOfAttorneyListFolderHandlers(global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.RecordManagementUI.Server" type="Sungero.RecordManagementUI.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetFilteredRegisteredDocuments(global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDateFrom, global::System.Nullable<global::System.DateTime> registrationDateTo, global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.ICaseFile caseFile, global::Sungero.Company.IEmployee registeredBy)
    {
      var __typeName = "Sungero.RecordManagementUI.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFilteredRegisteredDocuments", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Docflow.IDocumentRegister), typeof(global::Sungero.Docflow.ICaseFile), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{registrationNumber, registrationDateFrom, registrationDateTo, documentRegister, caseFile, registeredBy});
      }
      else
      {
        return global::Sungero.RecordManagementUI.Server.ModuleFunctions.GetFilteredRegisteredDocuments(registrationNumber, registrationDateFrom, registrationDateTo, documentRegister, caseFile, registeredBy);
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.Server" type="Sungero.RecordManagementUI.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetOfficialCorrespondenceWithCounterparty(global::Sungero.Parties.ICounterparty counterparty, global::System.Nullable<global::System.DateTime> periodBegin, global::System.Nullable<global::System.DateTime> periodEnd)
    {
      var __typeName = "Sungero.RecordManagementUI.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOfficialCorrespondenceWithCounterparty", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty, periodBegin, periodEnd});
      }
      else
      {
        return global::Sungero.RecordManagementUI.Server.ModuleFunctions.GetOfficialCorrespondenceWithCounterparty(counterparty, periodBegin, periodEnd);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagementUI.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.ModuleInitialization
{
  internal static partial class Module
  {

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagementUI.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public class DocumentsToReturnDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.DocumentsToReturnFolderHandlers(typedState);
      var result = handlers.DocumentsToReturnDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class DocumentsToReturnEmployeePanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IEmployee>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.DocumentsToReturnFolderHandlers(typedState);
      var result = handlers.DocumentsToReturnEmployeeFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IEmployee>();
      return result;
    }
  }

  public class DocumentsToReturnDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.DocumentsToReturnFolderHandlers(typedState);
      var result = handlers.DocumentsToReturnDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }

  public class DocumentsToReturnRegistrationGroupPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IRegistrationGroup>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.DocumentsToReturnFolderHandlers(typedState);
      var result = handlers.DocumentsToReturnRegistrationGroupFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IRegistrationGroup>();
      return result;
    }
  }

  public class DocumentsToReturnFilelistPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.ICaseFile>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.DocumentsToReturnFolderHandlers(typedState);
      var result = handlers.DocumentsToReturnFilelistFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.ICaseFile>();
      return result;
    }
  }


  public class PowerOfAttorneyListDocumentRegisterPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.PowerOfAttorneyListFolderHandlers(typedState);
      var result = handlers.PowerOfAttorneyListDocumentRegisterFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
      return result;
    }
  }

  public class PowerOfAttorneyListDocumentKindPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.PowerOfAttorneyListFolderHandlers(typedState);
      var result = handlers.PowerOfAttorneyListDocumentKindFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
      return result;
    }
  }

  public class PowerOfAttorneyListBusinessUnitPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.PowerOfAttorneyListFolderHandlers(typedState);
      var result = handlers.PowerOfAttorneyListBusinessUnitFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
      return result;
    }
  }

  public class PowerOfAttorneyListDepartmentPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.PowerOfAttorneyListFolderHandlers(typedState);
      var result = handlers.PowerOfAttorneyListDepartmentFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
      return result;
    }
  }

  public class PowerOfAttorneyListPerformerPanelNavigationFilter : global::Sungero.Domain.PanelNavigationFilterBase
  {
    public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
    {
      var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
      var typedState = (global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState)this.State;
      var handlers = new global::Sungero.RecordManagementUI.Server.PowerOfAttorneyListFolderHandlers(typedState);
      var result = handlers.PowerOfAttorneyListPerformerFiltering(typedQuery);
      if (handlers._disableUiFiltering)
         global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
      return result;
    }
  }


}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.RecordManagementUI.Server.IModuleServerPublicFunctions
  {
  }
}

namespace Sungero.RecordManagementUI.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.RecordManagementUI.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.RecordManagementUI.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server.RecordManagementUIBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagementUI.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

