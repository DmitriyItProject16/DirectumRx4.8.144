
// ==================================================================
// FreeApprovalTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class FreeApprovalTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.Docflow.IFreeApprovalTask
    {
      protected new global::Sungero.Docflow.IFreeApprovalTaskFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IFreeApprovalTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public FreeApprovalTaskFilter(global::Sungero.Docflow.IFreeApprovalTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected FreeApprovalTaskFilter()
      {
      }
    }
    public class FreeApprovalTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new FreeApprovalTaskObserversModel Observers { get { return (FreeApprovalTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }
                   public FreeApprovalTaskApproversModel Approvers { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public FreeApprovalTaskAddedAddendaModel AddedAddenda { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public FreeApprovalTaskRemovedAddendaModel RemovedAddenda { get; protected set; }

        }

      public class FreeApprovalTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }


      public class FreeApprovalTaskApproversModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.CoreEntities.IRecipient> Approver { get; protected set; }

         }
      public class FreeApprovalTaskAddedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class FreeApprovalTaskRemovedAddendaModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }




  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.FreeApprovalTaskFilter<global::Sungero.Docflow.IFreeApprovalTask>))]

  public class FreeApprovalTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.Docflow.IFreeApprovalTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("77f43035-9f23-4a19-9882-5a6a2cd5c9c7");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IFreeApprovalTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskState State
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalTaskState(this);
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskInfo Info
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.FreeApprovalTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.FreeApprovalTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.FreeApprovalTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.FreeApprovalTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.FreeApprovalTaskSharedHandlers(this);
    }

    private global::System.Boolean? _ReceiveNotice;
    public virtual global::System.Boolean? ReceiveNotice
    {
      get
      {
        return this._ReceiveNotice;
      }

      set
      {
        this.SetPropertyValue("ReceiveNotice", this._ReceiveNotice, value, (propertyValue) => { this._ReceiveNotice = propertyValue; }, this.ReceiveNoticeChangedHandler);
      }
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _ReceiveOnCompletionItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.Docflow.FreeApprovalTask.ReceiveOnCompletion),
      typeof(global::Sungero.Docflow.Server.FreeApprovalTask),
      "ReceiveOnCompletion");

    public static global::Sungero.Domain.Shared.EnumerationItems ReceiveOnCompletionItems
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask._ReceiveOnCompletionItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ReceiveOnCompletionAllowedItems
    {
      get { return global::Sungero.Docflow.Server.FreeApprovalTask.ReceiveOnCompletionItems; }
    }

    private global::Sungero.Core.Enumeration? _ReceiveOnCompletion;

    public virtual global::Sungero.Core.Enumeration? ReceiveOnCompletion
    {
      get { return this._ReceiveOnCompletion; }
      set { this.SetEnumPropertyValue("ReceiveOnCompletion", this._ReceiveOnCompletion, value, (propertyValue) => { this._ReceiveOnCompletion = propertyValue; }, this.ReceiveOnCompletionChangedHandler, this.ReceiveOnCompletionAllowedItems); }
    }



    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> _Approvers;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> Approvers
    {
      get
      {
        if (this._Approvers == null)
        {
          this._Approvers = this.CreateApproversCollection();
          this.SetApproversEventHandlers();
        }
        return this._Approvers;
      }

      set
      {
        if (this._Approvers != null)
          this.UnsetChildCollectionEventHandlers(this._Approvers);

        this._Approvers = value;
        this.SetApproversEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers> CreateApproversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskApprovers>() { RootEntity = this };
    }

    private void SetApproversEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._Approvers, "Approvers");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._Approvers;
      changeNotifier.Added += this.ApproversAddedHandler;
      changeNotifier.Deleted += this.ApproversDeletedHandler;
      changeNotifier.Added += this.ApproversCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ApproversCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ApproversCollectionUpdateEventHandler;
    }

    private void ApproversCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("Approvers"))
        this.ApproversChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskAddedAddenda> _AddedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskAddedAddenda> AddedAddenda
    {
      get
      {
        if (this._AddedAddenda == null)
        {
          this._AddedAddenda = this.CreateAddedAddendaCollection();
          this.SetAddedAddendaEventHandlers();
        }
        return this._AddedAddenda;
      }

      set
      {
        if (this._AddedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._AddedAddenda);

        this._AddedAddenda = value;
        this.SetAddedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskAddedAddenda> CreateAddedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskAddedAddenda>() { RootEntity = this };
    }

    private void SetAddedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._AddedAddenda, "AddedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._AddedAddenda;
      changeNotifier.Added += this.AddedAddendaAddedHandler;
      changeNotifier.Deleted += this.AddedAddendaDeletedHandler;
      changeNotifier.Added += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.AddedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.AddedAddendaCollectionUpdateEventHandler;
    }

    private void AddedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("AddedAddenda"))
        this.AddedAddendaChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskRemovedAddenda> _RemovedAddenda;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskRemovedAddenda> RemovedAddenda
    {
      get
      {
        if (this._RemovedAddenda == null)
        {
          this._RemovedAddenda = this.CreateRemovedAddendaCollection();
          this.SetRemovedAddendaEventHandlers();
        }
        return this._RemovedAddenda;
      }

      set
      {
        if (this._RemovedAddenda != null)
          this.UnsetChildCollectionEventHandlers(this._RemovedAddenda);

        this._RemovedAddenda = value;
        this.SetRemovedAddendaEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskRemovedAddenda> CreateRemovedAddendaCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskRemovedAddenda>() { RootEntity = this };
    }

    private void SetRemovedAddendaEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._RemovedAddenda, "RemovedAddenda");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._RemovedAddenda;
      changeNotifier.Added += this.RemovedAddendaAddedHandler;
      changeNotifier.Deleted += this.RemovedAddendaDeletedHandler;
      changeNotifier.Added += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.RemovedAddendaCollectionUpdateEventHandler;
      changeNotifier.Updated += this.RemovedAddendaCollectionUpdateEventHandler;
    }

    private void RemovedAddendaCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("RemovedAddenda"))
        this.RemovedAddendaChangedHandler();
    }


    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IFreeApprovalTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.FreeApprovalTaskCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IFreeApprovalTask)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.FreeApprovalTaskCreatingFromServerHandler((global::Sungero.Docflow.IFreeApprovalTask)entitySource, this.Info);
    }

    #region Framework events

    protected void ReceiveNoticeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.ReceiveNotice, this.ReceiveNotice, this);
     ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ReceiveNoticeChanged(args);
    }

    protected void ReceiveOnCompletionChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ReceiveOnCompletion, this.ReceiveOnCompletion, this);
     ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ReceiveOnCompletionChanged(args);
    }

    protected void ApproversChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ApproversChanged(args);
    }

    protected void AddedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).AddedAddendaChanged(args);
    }

    protected void RemovedAddendaChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).RemovedAddendaChanged(args);
    }




    protected virtual global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers CreateApproversAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers CreateApproversDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ApproversAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ApproversAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateApproversAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ApproversAdded(args);
        }
      }
    }

    protected virtual void ApproversDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskApproversSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ApproversDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateApproversDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ApproversDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers CreateAddedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void AddedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("AddedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.AddedAddendaAdded(args);
        }
      }
    }

    protected virtual void AddedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskAddedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("AddedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateAddedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.AddedAddendaDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers CreateRemovedAddendaDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void RemovedAddendaAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("RemovedAddendaAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.RemovedAddendaAdded(args);
        }
      }
    }

    protected virtual void RemovedAddendaDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.FreeApprovalTaskRemovedAddendaSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("RemovedAddendaDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateRemovedAddendaDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.RemovedAddendaDeleted(args);
        }
      }
    }


    #endregion


    public FreeApprovalTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.Docflow.IFreeApprovalTaskForApprovalGroupAttachments ForApprovalGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskForApprovalGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.Docflow.IFreeApprovalTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.Docflow.Shared.FreeApprovalTaskOtherGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ForApprovalGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).ForApprovalGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.Docflow.IFreeApprovalTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }

    }
    #endregion

    #region Workflow blocks

    public new virtual global::Sungero.Docflow.IFreeApprovalTaskBlocksInfo Blocks
    {
      get
      {
        return new global::Sungero.Docflow.Server.FreeApprovalTaskBlocksInfo(this);
      }
    }

    #endregion

  }
}

// ==================================================================
// FreeApprovalTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class FreeApprovalTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IFreeApprovalTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IFreeApprovalTaskFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IFreeApprovalTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public FreeApprovalTaskFilteringServerHandler(global::Sungero.Docflow.IFreeApprovalTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected FreeApprovalTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class FreeApprovalTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel)this.Dialog;
       }
     }

     public FreeApprovalTaskSearchDialogServerHandler(global::Sungero.Docflow.Server.FreeApprovalTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class FreeApprovalTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Entity; }
    }

    public FreeApprovalTaskServerHandlers(global::Sungero.Docflow.IFreeApprovalTask entity)
      : base(entity)
    {
    }
  }

  public partial class FreeApprovalTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IFreeApprovalTask _source
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Source; }
    }

    private global::Sungero.Docflow.IFreeApprovalTaskInfo _info
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)this._Info; }
    }

    public FreeApprovalTaskCreatingFromServerHandler(global::Sungero.Docflow.IFreeApprovalTask source, global::Sungero.Docflow.IFreeApprovalTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// FreeApprovalTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// FreeApprovalTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.Docflow.IFreeApprovalTaskAccessRights
  {

    public FreeApprovalTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class FreeApprovalTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.Docflow.IFreeApprovalTaskAccessRights
  {

    public FreeApprovalTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// FreeApprovalTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class FreeApprovalTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.Docflow.IFreeApprovalTaskRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IFreeApprovalTask 
    {
       public new global::Sungero.Docflow.IFreeApprovalTaskAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IFreeApprovalTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IFreeApprovalTaskInfo Info
       {
          get { return (global::Sungero.Docflow.IFreeApprovalTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.FreeApprovalTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// FreeApprovalTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// FreeApprovalTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class FreeApprovalTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Entity; }
    }

    public FreeApprovalTaskFunctions(global::Sungero.Docflow.IFreeApprovalTask entity) : base(entity) { }
  }
}

// ==================================================================
// FreeApprovalTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class FreeApprovalTask
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  Sungero.Core.StateBlock AddTaskBlock(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Core.StateView stateView)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddTaskBlock", new System.Type[] { typeof(global::Sungero.Core.StateView) });
      return (Sungero.Core.StateBlock)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { stateView });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddSendForApprovalBlock(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock parentBlock, global::Sungero.Workflow.IAssignment assignment, global::System.Boolean hasReworkBefore, global::System.Boolean hasRestartBefore)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddSendForApprovalBlock", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Workflow.IAssignment), typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentBlock, assignment, hasReworkBefore, hasRestartBefore });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddAssignmentsBlocks(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock parentBlock, Sungero.Core.StateBlock taskBlock, global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment> assignments)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddAssignmentsBlocks", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(Sungero.Core.StateBlock), typeof(global::System.Collections.Generic.List<global::Sungero.Workflow.IAssignment>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { parentBlock, taskBlock, assignments });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void SetIcon(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock block, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetIcon", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(global::Sungero.Workflow.IAssignment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddStatusInfoToRight(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.StateBlock block, Sungero.Core.StateBlockLabelStyle style)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddStatusInfoToRight", new System.Type[] { typeof(Sungero.Core.StateBlock), typeof(Sungero.Core.StateBlockLabelStyle) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { block, style });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::Sungero.Docflow.Structures.FreeApprovalTask.AssignmentInfo GetPerformerAndDeadlineAndStatus(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Workflow.IAssignment assignment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPerformerAndDeadlineAndStatus", new System.Type[] { typeof(global::Sungero.Workflow.IAssignment) });
      return (global::Sungero.Docflow.Structures.FreeApprovalTask.AssignmentInfo)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { assignment });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void RelateAddedAddendaToPrimaryDocument(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RelateAddedAddendaToPrimaryDocument", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries GetAttachmentHistoryEntriesByGroupId(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::System.Guid groupId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAttachmentHistoryEntriesByGroupId", new System.Type[] { typeof(global::System.Guid) });
      return (global::Sungero.Docflow.Structures.Module.AttachmentHistoryEntries)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { groupId });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetUsersFromGroups(global::Sungero.CoreEntities.IRecipient recipient)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.FreeApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetUsersFromGroups",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.CoreEntities.IRecipient) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { recipient });
      }
      else
      {
        return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetUsersFromGroups(recipient);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Nullable<global::System.Int32> GetApprovalAssignmentLastIterationId(global::Sungero.Docflow.IFreeApprovalTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.FreeApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetApprovalAssignmentLastIterationId",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IFreeApprovalTask) }, null);
        return (global::System.Nullable<global::System.Int32>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetApprovalAssignmentLastIterationId(task);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IFreeApprovalAssignment> GetLastAssignmentWithoutNotice(global::Sungero.Docflow.IFreeApprovalTask task, global::System.Nullable<global::System.Int32> lastIterationId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.FreeApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLastAssignmentWithoutNotice",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IFreeApprovalTask), typeof(global::System.Nullable<global::System.Int32>) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IFreeApprovalAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, lastIterationId });
      }
      else
      {
        return global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GetLastAssignmentWithoutNotice(task, lastIterationId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void GrantRightForAttachmentsToPerformers(global::Sungero.Docflow.IFreeApprovalTask task, global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> performers)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.FreeApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GrantRightForAttachmentsToPerformers",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IFreeApprovalTask), typeof(global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, performers });
      }
      else
      {
    global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.GrantRightForAttachmentsToPerformers(task, performers);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAdditionalAssignees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.FreeApprovalTaskFunctions" />
    internal static  void AddToReworkAssigneeNewApprover(Sungero.Docflow.Server.FreeApprovalReworkAssignmentArguments e, global::Sungero.Docflow.IFreeApprovalAssignment assignment)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.FreeApprovalTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("AddToReworkAssigneeNewApprover",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(Sungero.Docflow.Server.FreeApprovalReworkAssignmentArguments), typeof(global::Sungero.Docflow.IFreeApprovalAssignment) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { e, assignment });
      }
      else
      {
    global::Sungero.Docflow.Server.FreeApprovalTaskFunctions.AddToReworkAssigneeNewApprover(e, assignment);
      }
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.FreeApprovalTask.StartValidationMessage> GetStartValidationMessages(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStartValidationMessages", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.FreeApprovalTask.StartValidationMessage>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Boolean ValidateFreeApprovalTaskStart(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, Sungero.Core.IValidationArgs e)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateFreeApprovalTaskStart", new System.Type[] { typeof(Sungero.Core.IValidationArgs) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { e });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void SynchronizeAddendaAndAttachmentsGroup(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SynchronizeAddendaAndAttachmentsGroup", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void AddedAddendaAppend(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void AddedAddendaRemove(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void RemovedAddendaAppend(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaAppend", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  void RemovedAddendaRemove(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask, global::Sungero.Content.IElectronicDocument addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RemovedAddendaRemove", new System.Type[] { typeof(global::Sungero.Content.IElectronicDocument) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { addendum });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddendaGroupAttachments(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddendaGroupAttachments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetAddedAddenda(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::System.Int64> GetRemovedAddenda(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddenda", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetAddedAddendaFromAssignments(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetAddedAddendaFromAssignments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument> GetRemovedAddendaFromAssignments(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRemovedAddendaFromAssignments", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.FreeApprovalTaskFunctions" />
    internal static  global::System.Boolean HasDocumentAndCanRead(global::Sungero.Docflow.IFreeApprovalTask freeApprovalTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)freeApprovalTask).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasDocumentAndCanRead", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// FreeApprovalTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskServerPublicFunctions : global::Sungero.Docflow.Server.IFreeApprovalTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// FreeApprovalTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class FreeApprovalTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.FreeApprovalTask.FreeApprovalTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// FreeApprovalTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<FreeApprovalTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public FreeApprovalTaskArguments(FreeApprovalTaskBlock block) : base(block) { }
  }

  public class FreeApprovalTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<FreeApprovalTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.Docflow.IFreeApprovalTask> 
  {
    public FreeApprovalTaskEndBlockEventArguments(FreeApprovalTaskBlock block) : base(block) { }
  }

  public partial class FreeApprovalTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::System.Boolean? ReceiveNotice
    {
      get { return this.GetCustomProperty<global::System.Boolean?>("ReceiveNotice"); }
      set { this.SetCustomProperty("ReceiveNotice", value); }
    }
    public virtual global::Sungero.Core.Enumeration? ReceiveOnCompletion
    {
      get { return this.GetCustomEnumProperty("ReceiveOnCompletion"); }
      set { this.SetCustomEnumProperty("ReceiveOnCompletion", value); }
    }


    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> _Approvers;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> GetFreeApprovalTaskApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.FreeApprovalTaskApproversCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskApproversWrapper> Approvers
    {
      get 
      {
        if(this._Approvers == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("Approvers"); 
          this._Approvers = this.GetFreeApprovalTaskApproversCollectionWrapper(items);
        }

        return this._Approvers;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskAddedAddendaWrapper> _AddedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskAddedAddendaWrapper> GetFreeApprovalTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.FreeApprovalTaskAddedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskAddedAddendaWrapper> AddedAddenda
    {
      get 
      {
        if(this._AddedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("AddedAddenda"); 
          this._AddedAddenda = this.GetFreeApprovalTaskAddedAddendaCollectionWrapper(items);
        }

        return this._AddedAddenda;
      }
    }
    private global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskRemovedAddendaWrapper> _RemovedAddenda;

	protected virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskRemovedAddendaWrapper> GetFreeApprovalTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items)
	{
	  return new global::Sungero.Docflow.Server.FreeApprovalTaskRemovedAddendaCollectionWrapper(items);
	}

    public virtual global::Sungero.Workflow.Blocks.IChildCollectionWrapper<global::Sungero.Docflow.Server.FreeApprovalTaskRemovedAddendaWrapper> RemovedAddenda
    {
      get 
      {
        if(this._RemovedAddenda == null)
        {
          var items = this.GetCustomCollectionPropertyInternalValue("RemovedAddenda"); 
          this._RemovedAddenda = this.GetFreeApprovalTaskRemovedAddendaCollectionWrapper(items);
        }

        return this._RemovedAddenda;
      }
    }



    public FreeApprovalTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// FreeApprovalTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskApproversCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<FreeApprovalTaskApproversWrapper>
  {
    protected override FreeApprovalTaskApproversWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new FreeApprovalTaskApproversWrapper(value);
    }

    public FreeApprovalTaskApproversCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class FreeApprovalTaskApproversWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

    public virtual global::Sungero.CoreEntities.IRecipient Approver
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.CoreEntities.IRecipient>("Approver"); }
      set { this.SetCustomNavigationProperty("Approver", value); }
    }

    public FreeApprovalTaskApproversWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class FreeApprovalTaskAddedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<FreeApprovalTaskAddedAddendaWrapper>
  {
    protected override FreeApprovalTaskAddedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new FreeApprovalTaskAddedAddendaWrapper(value);
    }

    public FreeApprovalTaskAddedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class FreeApprovalTaskAddedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public FreeApprovalTaskAddedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }
  public class FreeApprovalTaskRemovedAddendaCollectionWrapper :
       global::Sungero.Workflow.Blocks.ChildCollectionWrapper<FreeApprovalTaskRemovedAddendaWrapper>
  {
    protected override FreeApprovalTaskRemovedAddendaWrapper CreateWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> value)
    {
      return new FreeApprovalTaskRemovedAddendaWrapper(value);
    }

    public FreeApprovalTaskRemovedAddendaCollectionWrapper(global::System.Collections.ObjectModel.Collection<global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty>> items) : base(items) { }
  }

  public class FreeApprovalTaskRemovedAddendaWrapper: 
        global::Sungero.Workflow.Blocks.ChildEntityWrapper
  {

        public virtual global::System.Int64? AddendumId
        {
          get { return this.GetCustomProperty<global::System.Int64?>("AddendumId"); }
          set { this.SetCustomProperty("AddendumId", value); }
        }


    public FreeApprovalTaskRemovedAddendaWrapper(global::System.Collections.ObjectModel.Collection<global::Sungero.Workflow.CustomTypeProperty> properties): base(properties) { }
  }

}

// ==================================================================
// FreeApprovalTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public partial class FreeApprovalTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.Docflow.IFreeApprovalTask _obj
    {
      get { return (global::Sungero.Docflow.IFreeApprovalTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public FreeApprovalTaskRouteHandlers(global::Sungero.Docflow.IFreeApprovalTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Необходимо использовать LayerSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
      public static readonly int V2 = 2;
      public static readonly int V3 = 3;
}

    }
}

// ==================================================================
// FreeApprovalTaskBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server.FreeApprovalTaskBlocks
{
}

// ==================================================================
// FreeApprovalTaskBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class FreeApprovalTaskBlocksInfo : global::Sungero.Docflow.IFreeApprovalTaskBlocksInfo
  {
    private readonly Sungero.Workflow.ITask task;

      public global::Sungero.Workflow.ITaskMonitoringBlockInfo Block10
      {
        get
        {
          return new global::Sungero.Workflow.Server.TaskMonitoringBlockInfo(this.task, "10");
        }
      }


    public void ExecuteAllMonitoringBlocks()
    {
      new global::Sungero.Workflow.Server.TaskBlocksInfo(this.task).ExecuteAllMonitoringBlocks();
    }

    public FreeApprovalTaskBlocksInfo(Sungero.Workflow.ITask task)
    {
      this.task = task;
    }
  }

}
