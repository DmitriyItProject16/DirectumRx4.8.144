
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void GetMessages()
    {
      var __typeName = "Sungero.Exchange.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMessages", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Exchange.Client.ModuleFunctions.GetMessages();
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.ICertificate GetCurrentUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Exchange.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetCurrentUserExchangeCertificate", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.CoreEntities.ICertificate)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, employee});
      }
      else
      {
        return global::Sungero.Exchange.Client.ModuleFunctions.GetCurrentUserExchangeCertificate(box, employee);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::Sungero.CoreEntities.ICertificate GetUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetUserExchangeCertificate", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.Company.IEmployee)});
        return (global::Sungero.CoreEntities.ICertificate)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, employee});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetUserExchangeCertificate(box, employee);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
      var __typeName = "Sungero.Exchange.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAmendmentRequest", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest});
      }
      else
      {
        return global::Sungero.Exchange.Client.ModuleFunctions.SendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SignAndSendDeliveryConfirmation()
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SignAndSendDeliveryConfirmation", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SignAndSendDeliveryConfirmation();
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SendDeliveryConfirmation(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean bulkMode)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDeliveryConfirmation", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{box, certificate, bulkMode});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendDeliveryConfirmation(box, certificate, bulkMode);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendResultToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendResultToCounterparty(document);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendResultToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.ExchangeCore.IExchangeService), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, service, addenda});
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendResultToCounterparty(document, service, addenda);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDocumentToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::Sungero.ExchangeCore.IExchangeService), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, service, addenda});
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendDocumentToCounterparty(document, documentInfo, service, addenda);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String ValidateBeforeSendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.CoreEntities.IUser signatureOwner, global::Sungero.ExchangeCore.IBusinessUnitBox box)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeSendDocumentToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.CoreEntities.IUser), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, counterparty, signatureOwner, box});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ValidateBeforeSendDocumentToCounterparty(document, documentInfo, selectedAddenda, counterparty, signatureOwner, box);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SignBeforeSendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SignBeforeSendDocumentToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, counterparty, box, certificate});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SignBeforeSendDocumentToCounterparty(document, documentInfo, selectedAddenda, counterparty, box, certificate);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SignBeforeSendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isSendAswer)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SignBeforeSendDocumentToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, certificate, isSendAswer});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SignBeforeSendDocumentToCounterparty(document, documentInfo, selectedAddenda, certificate, isSendAswer);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String SendDocumentToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendDocumentToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, counterparty, counterpartyDepartmentBox, box, certificate, needSign, comment});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendDocumentToCounterparty(document, documentInfo, selectedAddenda, counterparty, counterpartyDepartmentBox, box, certificate, needSign, comment);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void TryRejectCounterpartyVersion(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificateToRejectFirstVersion)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TryRejectCounterpartyVersion", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, counterparty, counterpartyDepartmentBox, box, certificateToRejectFirstVersion});
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).TryRejectCounterpartyVersion(document, documentInfo, selectedAddenda, counterparty, counterpartyDepartmentBox, box, certificateToRejectFirstVersion);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String GetDocumentLockedError(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentLockedError", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetDocumentLockedError(document);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String GetDocumentInfoLockedError(global::Sungero.Exchange.IExchangeDocumentInfo documentInfo)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentInfoLockedError", new global::System.Type[]{typeof(global::Sungero.Exchange.IExchangeDocumentInfo)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentInfo});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetDocumentInfoLockedError(documentInfo);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void SendAnswerToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAnswerToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, addenda});
      }
      else
      {
    ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendAnswerToCounterparty(document, documentInfo, addenda);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.String ValidateBeforeSendAnswerToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo documentInfo, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.CoreEntities.IUser signatureOwner, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String comment, global::System.String signResult)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ValidateBeforeSendAnswerToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.CoreEntities.IUser), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, documentInfo, selectedAddenda, counterparty, signatureOwner, box, comment, signResult});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ValidateBeforeSendAnswerToCounterparty(document, documentInfo, selectedAddenda, counterparty, signatureOwner, box, comment, signResult);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.Boolean SendReplySignToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, CommonLibrary.BaseInputDialogEventArgs args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendReplySignToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(CommonLibrary.BaseInputDialogEventArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, selectedAddenda, counterparty, box, certificate, args});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendReplySignToCounterparty(document, selectedAddenda, counterparty, box, certificate, args);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static global::System.Boolean SendAmendmentRequestToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> selectedAddenda, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String comment, global::System.String signResult, CommonLibrary.BaseInputDialogEventArgs args)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SendAmendmentRequestToCounterparty", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument), typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.String), typeof(global::System.String), typeof(CommonLibrary.BaseInputDialogEventArgs)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document, selectedAddenda, counterparty, box, comment, signResult, args});
      }
      else
      {
        return ((global::Sungero.Exchange.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SendAmendmentRequestToCounterparty(document, selectedAddenda, counterparty, box, comment, signResult, args);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void GeneratePublicBody(global::System.String documentId)
    {
      var __typeName = "Sungero.Exchange.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GeneratePublicBody", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
    global::Sungero.Exchange.Client.ModuleFunctions.GeneratePublicBody(documentId);
      }
    }
    /// <redirect project="Sungero.Exchange.ClientBase" type="Sungero.Exchange.Client.ModuleFunctions" />
    internal static void CreateQueueItem(global::System.String businessUnitBoxId, global::System.String messageId)
    {
      var __typeName = "Sungero.Exchange.Client.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateQueueItem", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBoxId, messageId});
      }
      else
      {
    global::Sungero.Exchange.Client.ModuleFunctions.CreateQueueItem(businessUnitBoxId, messageId);
      }
    }

    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.String GenerateAndSendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
      var __typeName = "Sungero.Exchange.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateAndSendAmendmentRequest", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::Sungero.ExchangeCore.IBoxBase), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest});
      }
      else
      {
        return global::Sungero.Exchange.Shared.ModuleFunctions.GenerateAndSendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean IsInvoiceFlowDocument(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __typeName = "Sungero.Exchange.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsInvoiceFlowDocument", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return global::Sungero.Exchange.Shared.ModuleFunctions.IsInvoiceFlowDocument(document);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.Boolean HasCurrentUserExchangeServiceCertificate(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("HasCurrentUserExchangeServiceCertificate", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{businessUnitBox});
      }
      else
      {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).HasCurrentUserExchangeServiceCertificate(businessUnitBox);
      }
    }
    /// <redirect project="Sungero.Exchange.Shared" type="Sungero.Exchange.Shared.ModuleFunctions" />
    internal static global::System.String GenerateAndSendDeliveryConfirmation(global::Sungero.ExchangeCore.IBusinessUnitBox rootBox, global::Sungero.CoreEntities.ICertificate certificate, global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.Boolean bulkMode, global::System.Int32 partSize)
    {
      var __moduleId = new global::System.Guid("cec41b99-da21-422f-9332-0fbc423e95c0");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Exchange.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GenerateAndSendDeliveryConfirmation", new global::System.Type[]{typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::Sungero.CoreEntities.ICertificate), typeof(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>), typeof(global::System.Boolean), typeof(global::System.Int32)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{rootBox, certificate, documentInfos, bulkMode, partSize});
      }
      else
      {
        return ((global::Sungero.Exchange.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GenerateAndSendDeliveryConfirmation(rootBox, certificate, documentInfos, bulkMode, partSize);
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void CreateQueueItem(global::System.Int64 businessUnitBoxId, global::System.String serviceMessageId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "CreateQueueItem(global::System.Int64,global::System.String)", businessUnitBoxId, serviceMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void UpdateLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String incomingMessageId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "UpdateLastIncomingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String)", box, incomingMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void UpdateLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.String outgoingMessageId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "UpdateLastOutgoingMessageId(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String)", box, outgoingMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void GeneratePublicBody(global::System.Int64 documentId)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GeneratePublicBody(global::System.Int64)", documentId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean FixReceiptNotificationForSbis(global::Sungero.Exchange.IExchangeDocumentInfo info)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FixReceiptNotificationForSbis(global::Sungero.Exchange.IExchangeDocumentInfo)", info);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentHyperlink(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetDocumentHyperlink(global::Sungero.ExchangeCore.IMessageQueueItem messageQueueItem)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentHyperlink(global::Sungero.ExchangeCore.IMessageQueueItem)", messageQueueItem);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Content.IAssociatedApplication GetOrCreateAssociatedApplicationByDocumentName(global::System.String documentName)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Content.IAssociatedApplication>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetOrCreateAssociatedApplicationByDocumentName(global::System.String)", documentName);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isAgent)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendAnswers(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documents, counterparty, box, certificate, isAgent);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBoxBase,global::System.String)", signedDocuments, receiver, box, note);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> signedDocuments, global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendDeliveryConfirmation(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>,global::Sungero.ExchangeCore.IBusinessUnitBox)", signedDocuments, box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendDocuments(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean,global::System.String)", document, addenda, receiver, box, certificate, needSign, comment);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SendDocuments(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda, global::Sungero.Parties.ICounterparty receiver, global::System.String receiverServiceDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.String senderServiceDepartmentId, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean needSign, global::System.String comment)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SendDocuments(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.Parties.ICounterparty,global::System.String,global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String,global::Sungero.CoreEntities.ICertificate,global::System.Boolean,global::System.String)", document, addenda, receiver, receiverServiceDepartmentId, senderBox, senderServiceDepartmentId, certificate, needSign, comment);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase statement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "HasUnsignedBuyerTitle(global::Sungero.Docflow.IAccountingDocumentBase)", statement);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean CanSendSign(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "CanSendSign(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean generateServiceDocuments)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetGeneratedDeliveryConfirmationDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documentInfos, box, certificate, generateServiceDocuments);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.ExchangeCore.IBoxBase box, global::System.String note, global::System.Boolean throwError, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean sendInvoiceAmendmentRequest)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GenerateAmendmentRequestDocuments(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>,global::Sungero.ExchangeCore.IBoxBase,global::System.String,global::System.Boolean,global::Sungero.CoreEntities.ICertificate,global::System.Boolean)", documents, box, note, throwError, certificate, sendInvoiceAmendmentRequest);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.ICancellationAgreement CreateCancellationAgreement(global::Sungero.Docflow.IOfficialDocument leadingDocument, global::System.String reason, global::Sungero.Company.IEmployee ourSignatory)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.ICancellationAgreement>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "CreateCancellationAgreement(global::Sungero.Docflow.IOfficialDocument,global::System.String,global::Sungero.Company.IEmployee)", leadingDocument, reason, ourSignatory);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String ValidateBeforeCreatingCancellationAgreement(global::System.Int64 leadingDocumentId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "ValidateBeforeCreatingCancellationAgreement(global::System.Int64)", leadingDocumentId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String ValidateBeforeSendingCancellationAgreement(global::Sungero.Docflow.IOfficialDocument leadingDocument)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "ValidateBeforeSendingCancellationAgreement(global::Sungero.Docflow.IOfficialDocument)", leadingDocument);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetInfoForSendToCounterparty(global::Sungero.Docflow.IOfficialDocument)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> GetSbisCancellationAgreementAddenda(global::Sungero.Exchange.ICancellationAgreement cancellationAgreement)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetSbisCancellationAgreementAddenda(global::Sungero.Exchange.ICancellationAgreement)", cancellationAgreement);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo GetFormalizedDocumentInfoForSendToCounterparty(global::Sungero.Docflow.IAccountingDocumentBase document)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetFormalizedDocumentInfoForSendToCounterparty(global::Sungero.Docflow.IAccountingDocumentBase)", document);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo FillCertificates(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box, global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo result)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FillCertificates(global::Sungero.Docflow.IOfficialDocument,global::Sungero.ExchangeCore.IBusinessUnitBox,global::Sungero.Exchange.Structures.Module.SendToCounterpartyInfo)", document, box, result);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.Structures.Module.DocumentCertificatesInfo>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentCertificatesToBox(global::Sungero.Docflow.IOfficialDocument,global::Sungero.ExchangeCore.IBusinessUnitBox)", document, box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetConnectedExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)", document, counterparties);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.ExchangeCore.ICounterpartyDepartmentBox GetCounterpartyDepartmentBox(global::Sungero.Parties.ICounterparty counterparty, global::System.String counterpartyDepartmentId, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetCounterpartyDepartmentBox(global::Sungero.Parties.ICounterparty,global::System.String,global::Sungero.ExchangeCore.IBusinessUnitBox)", counterparty, counterpartyDepartmentId, businessUnitBox);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox> GetCounterpartyDepartments(global::Sungero.Parties.ICounterparty counterparty, global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetCounterpartyDepartments(global::Sungero.Parties.ICounterparty,global::Sungero.ExchangeCore.IBusinessUnitBox)", counterparty, businessUnitBox);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox> GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> counterparties)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IBusinessUnitBox>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetAllExchangeBoxesToCounterparty(global::Sungero.Docflow.IOfficialDocument,global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)", document, counterparties);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox box, global::System.Int32 skip, global::System.Int32 take, global::System.Boolean withoutGenerated)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentInfosWithoutReceiptNotificationPart(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.Int32,global::System.Int32,global::System.Boolean)", box, skip, take, withoutGenerated);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean IsReglamentDocumentsNotSent(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "IsReglamentDocumentsNotSent(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)", documentInfos);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetDocumentsWithoutReceiptNotification(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo info, global::System.String comment, global::System.Boolean sent)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FixReceiptNotification(global::Sungero.Exchange.IExchangeDocumentInfo,global::System.String,global::System.Boolean)", info, comment, sent);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> documentInfos, global::System.String comment)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "FixReceiptNotification(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>,global::System.String)", documentInfos, comment);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::Sungero.Exchange.IReceiptNotificationSendingTask CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox box)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::Sungero.Exchange.IReceiptNotificationSendingTask>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "CreateReceiptNotificationSendingTask(global::Sungero.ExchangeCore.IBusinessUnitBox)", box);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate> documentsToSign)
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "SaveDeliveryConfirmationSigns(global::System.Collections.Generic.List<global::Sungero.Exchange.Structures.Module.ReglamentDocumentWithCertificate>)", documentsToSign);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean IsJobEnabled(global::System.String id)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "IsJobEnabled(global::System.String)", id);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueMessagesGet()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueMessagesGet()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueGetHistoricalMessages()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueGetHistoricalMessages()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueBodyConverterJob()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueBodyConverterJob()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueGenerateServiceDocuments()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueGenerateServiceDocuments()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static void RequeueSendSignedReceiptNotifications()
      {
      global::Sungero.Domain.Shared.RemoteFunctionExecutor.Execute(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "RequeueSendSignedReceiptNotifications()");
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.String GetValidFileName(global::System.String name)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.String>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetValidFileName(global::System.String)", name);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate> GetCertificates(global::Sungero.CoreEntities.IUser owner)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetCertificates(global::Sungero.CoreEntities.IUser)", owner);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetPackageDocumentsExchangeInfos(global::System.String serviceMessageId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetPackageDocumentsExchangeInfos(global::System.String)", serviceMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> GetPackageCancellationAgreementInfos(global::System.String serviceMessageId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetPackageCancellationAgreementInfos(global::System.String)", serviceMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetSbisPackageDocuments(global::Sungero.ExchangeCore.IBusinessUnitBox rootBox, global::System.String serviceMessageId)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetSbisPackageDocuments(global::Sungero.ExchangeCore.IBusinessUnitBox,global::System.String)", rootBox, serviceMessageId);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Boolean HasRightsToPackageExchangeDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo> exchangeDocumentsInfos)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Boolean>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "HasRightsToPackageExchangeDocuments(global::System.Collections.Generic.List<global::Sungero.Exchange.IExchangeDocumentInfo>)", exchangeDocumentsInfos);
      }
      /// <redirect project="Sungero.Exchange.Server" type="Sungero.Exchange.Server.ModuleFunctions" />
      internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate> GetExchangeCertificatesForEmployee(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Collections.Generic.List<global::Sungero.CoreEntities.ICertificate>>(
          global::System.Guid.Parse("cec41b99-da21-422f-9332-0fbc423e95c0"),
          "GetExchangeCertificatesForEmployee(global::Sungero.ExchangeCore.IBoxBase,global::Sungero.Company.IEmployee)", box, employee);
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Exchange.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.Exchange.Client.IModuleClientPublicFunctions
  {
    public global::Sungero.CoreEntities.ICertificate GetUserExchangeCertificate(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.Company.IEmployee employee)
    {
      return global::Sungero.Exchange.Functions.Module.GetUserExchangeCertificate(box, employee);
    }
    public global::System.String SendAmendmentRequest(global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> documents, global::Sungero.Parties.ICounterparty receiver, global::System.String note, global::System.Boolean throwError, global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean isInvoiceAmendmentRequest)
    {
      return global::Sungero.Exchange.Functions.Module.SendAmendmentRequest(documents, receiver, note, throwError, box, certificate, isInvoiceAmendmentRequest);
    }
    public global::System.String SendDeliveryConfirmation(global::Sungero.ExchangeCore.IBoxBase box, global::Sungero.CoreEntities.ICertificate certificate, global::System.Boolean bulkMode)
    {
      return global::Sungero.Exchange.Functions.Module.SendDeliveryConfirmation(box, certificate, bulkMode);
    }
    public void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document)
    {
global::Sungero.Exchange.Functions.Module.SendResultToCounterparty(document);
    }
    public void SendResultToCounterparty(global::Sungero.Docflow.IOfficialDocument document, global::Sungero.ExchangeCore.IExchangeService service, global::System.Collections.Generic.List<global::Sungero.Docflow.IOfficialDocument> addenda)
    {
global::Sungero.Exchange.Functions.Module.SendResultToCounterparty(document, service, addenda);
    }
    public void SignAndSendDeliveryConfirmation()
    {
global::Sungero.Exchange.Functions.Module.SignAndSendDeliveryConfirmation();
    }
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Exchange.Client
{

}

