
// ==================================================================
// BusinessUnitBox.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class BusinessUnitBoxFilter<T> :
      global::Sungero.ExchangeCore.Server.BoxBaseFilter<T>
      where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
    {
      private global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState filter
      {
        get
        {
          return (Sungero.ExchangeCore.IBusinessUnitBoxFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public BusinessUnitBoxFilter(global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState filter)
      : base(filter)
      {
      }

      protected BusinessUnitBoxFilter()
      {
      }
    }
      public class BusinessUnitBoxUiFilter<T> :
        global::Sungero.ExchangeCore.Server.BoxBaseUiFilter<T>
        where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class BusinessUnitBoxSearchDialogModel : global::Sungero.ExchangeCore.Server.BoxBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Note { get; protected set; }
                  public override global::System.Int32? DeadlineInDays { get; protected set; }
                  public override global::System.Int32? DeadlineInHours { get; protected set; }
                  public override global::System.String Name { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Routing { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ConnectionStatus { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Responsible { get; protected set; }


                  public virtual global::System.String Password { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.ExchangeCore.IExchangeService> ExchangeService { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.ICertificate> CertificateReceiptNotifications { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public BusinessUnitBoxExchangeServiceCertificatesModel ExchangeServiceCertificates { get; protected set; }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public BusinessUnitBoxFormalizedPoAInfosModel FormalizedPoAInfos { get; protected set; }

        }


      public class BusinessUnitBoxExchangeServiceCertificatesModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }
      public class BusinessUnitBoxFormalizedPoAInfosModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


         }



  public class BusinessUnitBoxFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxBusinessUnitPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("BusinessUnitFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitBoxSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxBusinessUnitSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("BusinessUnitSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitBoxFilterForExchangeService<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
    where TSourceEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxExchangeServicePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ExchangeServiceFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServicePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ExchangeServiceFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitBoxSearchFilterForExchangeService<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.ExchangeCore.IExchangeService
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ExchangeServiceSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceSearchPropertyFilteringServerHandler<TQueryEntity>().ExchangeServiceSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxSearchFilterForExchangeService(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitBoxFilterForCertificateReceiptNotifications<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.ICertificate
    where TSourceEntity : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxCertificateReceiptNotificationsPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("CertificateReceiptNotificationsFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxCertificateReceiptNotificationsPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).CertificateReceiptNotificationsFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxFilterForCertificateReceiptNotifications(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class BusinessUnitBoxSearchFilterForCertificateReceiptNotifications<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.ICertificate
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxCertificateReceiptNotificationsSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("CertificateReceiptNotificationsSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.ExchangeCore.BusinessUnitBoxCertificateReceiptNotificationsSearchPropertyFilteringServerHandler<TQueryEntity>().CertificateReceiptNotificationsSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public BusinessUnitBoxSearchFilterForCertificateReceiptNotifications(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxFilter<global::Sungero.ExchangeCore.IBusinessUnitBox>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxUiFilter<global::Sungero.ExchangeCore.IBusinessUnitBox>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.ExchangeCore.IBusinessUnitBox>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService, global::Sungero.ExchangeCore.IBusinessUnitBox>), "ExchangeService")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchFilterForExchangeService<global::Sungero.ExchangeCore.IExchangeService>), "ExchangeService")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxFilterForCertificateReceiptNotifications<global::Sungero.CoreEntities.ICertificate, global::Sungero.ExchangeCore.IBusinessUnitBox>), "CertificateReceiptNotifications")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchFilterForCertificateReceiptNotifications<global::Sungero.CoreEntities.ICertificate>), "CertificateReceiptNotifications")]


  public class BusinessUnitBox :
    global::Sungero.ExchangeCore.Server.BoxBase, global::Sungero.ExchangeCore.IBusinessUnitBox, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("2dd7a803-8db7-40e1-9da6-b41c62d367c8");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Server.BusinessUnitBox.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.IBusinessUnitBox, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.ExchangeCore.IBusinessUnitBoxState State
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.BusinessUnitBoxState(this);
    }

    public new virtual global::Sungero.ExchangeCore.IBusinessUnitBoxInfo Info
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxInfo)base.Info; }
    }

    public new virtual global::Sungero.ExchangeCore.IBusinessUnitBoxAccessRights AccessRights
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Server.BusinessUnitBoxAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxSharedHandlers(this);
    }

    private global::System.String _Login;
    public virtual global::System.String Login
    {
      get
      {
        return this._Login;
      }

      set
      {
        this.SetPropertyValue("Login", this._Login, value, (propertyValue) => { this._Login = propertyValue; }, this.LoginChangedHandler);
      }
    }
    private global::System.String _OrganizationId;
    public virtual global::System.String OrganizationId
    {
      get
      {
        return this._OrganizationId;
      }

      set
      {
        this.SetPropertyValue("OrganizationId", this._OrganizationId, value, (propertyValue) => { this._OrganizationId = propertyValue; }, this.OrganizationIdChangedHandler);
      }
    }
    private global::System.Boolean? _HasExchangeServiceCertificates;
    public virtual global::System.Boolean? HasExchangeServiceCertificates
    {
      get
      {
        return this._HasExchangeServiceCertificates;
      }

      set
      {
        this.SetPropertyValue("HasExchangeServiceCertificates", this._HasExchangeServiceCertificates, value, (propertyValue) => { this._HasExchangeServiceCertificates = propertyValue; }, this.HasExchangeServiceCertificatesChangedHandler);
      }
    }
    private global::System.String _FtsId;
    public virtual global::System.String FtsId
    {
      get
      {
        return this._FtsId;
      }

      set
      {
        this.SetPropertyValue("FtsId", this._FtsId, value, (propertyValue) => { this._FtsId = propertyValue; }, this.FtsIdChangedHandler);
      }
    }



    private global::System.String _Password;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Password
    {
      get
      {
        return this._Password;
      }

      set
      {
        this.SetPropertyValue("Password", this._Password, value, (propertyValue) => { this._Password = propertyValue; }, this.PasswordChangedHandler);
      }
    }





    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }
    private global::Sungero.ExchangeCore.IExchangeService _ExchangeService;
    public virtual global::Sungero.ExchangeCore.IExchangeService ExchangeService
    {
      get
      {
        return this._ExchangeService;
      }

      set
      {
        this.SetPropertyValue("ExchangeService", this._ExchangeService, value, (propertyValue) => { this._ExchangeService = propertyValue; }, this.ExchangeServiceChangedHandler);
      }
    }
    private global::Sungero.CoreEntities.ICertificate _CertificateReceiptNotifications;
    public virtual global::Sungero.CoreEntities.ICertificate CertificateReceiptNotifications
    {
      get
      {
        return this._CertificateReceiptNotifications;
      }

      set
      {
        this.SetPropertyValue("CertificateReceiptNotifications", this._CertificateReceiptNotifications, value, (propertyValue) => { this._CertificateReceiptNotifications = propertyValue; }, this.CertificateReceiptNotificationsChangedHandler);
      }
    }


    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxExchangeServiceCertificates> _ExchangeServiceCertificates;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxExchangeServiceCertificates> ExchangeServiceCertificates
    {
      get
      {
        if (this._ExchangeServiceCertificates == null)
        {
          this._ExchangeServiceCertificates = this.CreateExchangeServiceCertificatesCollection();
          this.SetExchangeServiceCertificatesEventHandlers();
        }
        return this._ExchangeServiceCertificates;
      }

      set
      {
        if (this._ExchangeServiceCertificates != null)
          this.UnsetChildCollectionEventHandlers(this._ExchangeServiceCertificates);

        this._ExchangeServiceCertificates = value;
        this.SetExchangeServiceCertificatesEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxExchangeServiceCertificates> CreateExchangeServiceCertificatesCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxExchangeServiceCertificates>() { RootEntity = this };
    }

    private void SetExchangeServiceCertificatesEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._ExchangeServiceCertificates, "ExchangeServiceCertificates");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._ExchangeServiceCertificates;
      changeNotifier.Added += this.ExchangeServiceCertificatesAddedHandler;
      changeNotifier.Deleted += this.ExchangeServiceCertificatesDeletedHandler;
      changeNotifier.Added += this.ExchangeServiceCertificatesCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.ExchangeServiceCertificatesCollectionUpdateEventHandler;
      changeNotifier.Updated += this.ExchangeServiceCertificatesCollectionUpdateEventHandler;
    }

    private void ExchangeServiceCertificatesCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("ExchangeServiceCertificates"))
        this.ExchangeServiceCertificatesChangedHandler();
    }
    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxFormalizedPoAInfos> _FormalizedPoAInfos;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxFormalizedPoAInfos> FormalizedPoAInfos
    {
      get
      {
        if (this._FormalizedPoAInfos == null)
        {
          this._FormalizedPoAInfos = this.CreateFormalizedPoAInfosCollection();
          this.SetFormalizedPoAInfosEventHandlers();
        }
        return this._FormalizedPoAInfos;
      }

      set
      {
        if (this._FormalizedPoAInfos != null)
          this.UnsetChildCollectionEventHandlers(this._FormalizedPoAInfos);

        this._FormalizedPoAInfos = value;
        this.SetFormalizedPoAInfosEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxFormalizedPoAInfos> CreateFormalizedPoAInfosCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.ExchangeCore.IBusinessUnitBoxFormalizedPoAInfos>() { RootEntity = this };
    }

    private void SetFormalizedPoAInfosEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._FormalizedPoAInfos, "FormalizedPoAInfos");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._FormalizedPoAInfos;
      changeNotifier.Added += this.FormalizedPoAInfosAddedHandler;
      changeNotifier.Deleted += this.FormalizedPoAInfosDeletedHandler;
      changeNotifier.Added += this.FormalizedPoAInfosCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.FormalizedPoAInfosCollectionUpdateEventHandler;
      changeNotifier.Updated += this.FormalizedPoAInfosCollectionUpdateEventHandler;
    }

    private void FormalizedPoAInfosCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("FormalizedPoAInfos"))
        this.FormalizedPoAInfosChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.ExchangeCore.BusinessUnitBoxCreatingFromServerHandler", new object[] { (global::Sungero.ExchangeCore.IBusinessUnitBox)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.ExchangeCore.BusinessUnitBoxCreatingFromServerHandler((global::Sungero.ExchangeCore.IBusinessUnitBox)entitySource, this.Info);
    }

    #region Framework events

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BusinessUnitBoxBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void ExchangeServiceChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BusinessUnitBoxExchangeServiceChangedEventArgs(this.State.Properties.ExchangeService, this.ExchangeService, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).ExchangeServiceChanged(args);
    }

    protected void LoginChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Login, this.Login, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).LoginChanged(args);
    }

    protected void PasswordChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Password, this.Password, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).PasswordChanged(args);
    }

    protected void OrganizationIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OrganizationId, this.OrganizationId, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).OrganizationIdChanged(args);
    }

    protected void ExchangeServiceCertificatesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).ExchangeServiceCertificatesChanged(args);
    }

    protected void HasExchangeServiceCertificatesChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.HasExchangeServiceCertificates, this.HasExchangeServiceCertificates, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).HasExchangeServiceCertificatesChanged(args);
    }

    protected void FtsIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FtsId, this.FtsId, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).FtsIdChanged(args);
    }

    protected void CertificateReceiptNotificationsChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.BusinessUnitBoxCertificateReceiptNotificationsChangedEventArgs(this.State.Properties.CertificateReceiptNotifications, this.CertificateReceiptNotifications, this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).CertificateReceiptNotificationsChanged(args);
    }

    protected void FormalizedPoAInfosChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.ExchangeCore.IBusinessUnitBoxSharedHandlers)this.SharedHandlers).FormalizedPoAInfosChanged(args);
    }



    protected virtual global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers CreateExchangeServiceCertificatesAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers CreateExchangeServiceCertificatesDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void ExchangeServiceCertificatesAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("ExchangeServiceCertificatesAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateExchangeServiceCertificatesAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.ExchangeServiceCertificatesAdded(args);
        }
      }
    }

    protected virtual void ExchangeServiceCertificatesDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxExchangeServiceCertificatesSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("ExchangeServiceCertificatesDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateExchangeServiceCertificatesDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.ExchangeServiceCertificatesDeleted(args);
        }
      }
    }


    protected virtual global::Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers CreateFormalizedPoAInfosAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers CreateFormalizedPoAInfosDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void FormalizedPoAInfosAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("FormalizedPoAInfosAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateFormalizedPoAInfosAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.FormalizedPoAInfosAdded(args);
        }
      }
    }

    protected virtual void FormalizedPoAInfosDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.BusinessUnitBoxFormalizedPoAInfosSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("FormalizedPoAInfosDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateFormalizedPoAInfosDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.FormalizedPoAInfosDeleted(args);
        }
      }
    }


    #endregion


    public BusinessUnitBox()
    {
    }

  }
}

// ==================================================================
// BusinessUnitBoxHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore
{
  public partial class BusinessUnitBoxBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _obj
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBoxBusinessUnitPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IBusinessUnitBox entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitBoxBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBoxBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitBoxExchangeServicePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _obj
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Entity; }
    }

    public BusinessUnitBoxExchangeServicePropertyFilteringServerHandler(global::Sungero.ExchangeCore.IBusinessUnitBox entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitBoxExchangeServiceSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.ExchangeCore.IExchangeService
  {

    public virtual global::System.Linq.IQueryable<T> ExchangeServiceSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBoxExchangeServiceSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class BusinessUnitBoxCertificateReceiptNotificationsPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.ICertificate
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _obj
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Entity; }
    }

    public BusinessUnitBoxCertificateReceiptNotificationsPropertyFilteringServerHandler(global::Sungero.ExchangeCore.IBusinessUnitBox entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitBoxCertificateReceiptNotificationsSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.ICertificate
  {

    public virtual global::System.Linq.IQueryable<T> CertificateReceiptNotificationsSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public BusinessUnitBoxCertificateReceiptNotificationsSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class BusinessUnitBoxFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.BoxBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState _filter
    {
      get
      {
        return (Sungero.ExchangeCore.IBusinessUnitBoxFilterState)this.Filter;
      }
    }

    public BusinessUnitBoxFilteringServerHandler(global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState filter)
    : base(filter)
    {
    }

    protected BusinessUnitBoxFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.ExchangeCore.IExchangeService> ExchangeServiceFiltering(global::System.Linq.IQueryable<Sungero.ExchangeCore.IExchangeService> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.ExchangeServiceFiltering(query, e);
              return query;
      }


  }

  public partial class BusinessUnitBoxUiFilteringServerHandler<T>
    : global::Sungero.ExchangeCore.BoxBaseUiFilteringServerHandler<T>
    where T : class, global::Sungero.ExchangeCore.IBusinessUnitBox
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class BusinessUnitBoxSearchDialogServerHandler : global::Sungero.ExchangeCore.BoxBaseSearchDialogServerHandler
   {
     private global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchDialogModel)this.Dialog;
       }
     }

     public BusinessUnitBoxSearchDialogServerHandler(global::Sungero.ExchangeCore.Server.BusinessUnitBoxSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class BusinessUnitBoxServerHandlers : global::Sungero.ExchangeCore.BoxBaseServerHandlers
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _obj
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Entity; }
    }

    public BusinessUnitBoxServerHandlers(global::Sungero.ExchangeCore.IBusinessUnitBox entity)
      : base(entity)
    {
    }
  }

  public partial class BusinessUnitBoxCreatingFromServerHandler : global::Sungero.ExchangeCore.BoxBaseCreatingFromServerHandler
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _source
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Source; }
    }

    private global::Sungero.ExchangeCore.IBusinessUnitBoxInfo _info
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxInfo)this._Info; }
    }

    public BusinessUnitBoxCreatingFromServerHandler(global::Sungero.ExchangeCore.IBusinessUnitBox source, global::Sungero.ExchangeCore.IBusinessUnitBoxInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// BusinessUnitBoxEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
}

// ==================================================================
// BusinessUnitBoxAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class BusinessUnitBoxAccessRights : 
    Sungero.ExchangeCore.Server.BoxBaseAccessRights, Sungero.ExchangeCore.IBusinessUnitBoxAccessRights
  {

    public BusinessUnitBoxAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BusinessUnitBoxTypeAccessRights : 
    Sungero.ExchangeCore.Server.BoxBaseTypeAccessRights, Sungero.ExchangeCore.IBusinessUnitBoxAccessRights
  {

    public BusinessUnitBoxTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// BusinessUnitBoxRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class BusinessUnitBoxRepositoryImplementer<T> : 
      global::Sungero.ExchangeCore.Server.BoxBaseRepositoryImplementer<T>,
      global::Sungero.ExchangeCore.IBusinessUnitBoxRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.IBusinessUnitBox 
    {
       public new global::Sungero.ExchangeCore.IBusinessUnitBoxAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.IBusinessUnitBoxInfo Info
       {
          get { return (global::Sungero.ExchangeCore.IBusinessUnitBoxInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Server.BusinessUnitBoxTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BusinessUnitBoxPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
    public class BusinessUnitBoxBusinessUnitPanelNavigationFilter : global::Sungero.ExchangeCore.Server.BoxBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.ExchangeCore.IBusinessUnitBox
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState)this.State;
        var handlers = new global::Sungero.ExchangeCore.BusinessUnitBoxFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.ExchangeCore.IBusinessUnitBox>(query);
      }
    }

    public class BusinessUnitBoxExchangeServicePanelNavigationFilter : global::Sungero.ExchangeCore.Server.BoxBaseExchangeServicePanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.ExchangeCore.IBusinessUnitBox
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IExchangeService>)query;
        var typedState = (global::Sungero.ExchangeCore.IBusinessUnitBoxFilterState)this.State;
        var handlers = new global::Sungero.ExchangeCore.BusinessUnitBoxFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.ExchangeServiceFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.ExchangeCore.IExchangeService>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.ExchangeCore.IBusinessUnitBox>(query);
      }
    }

}

// ==================================================================
// BusinessUnitBoxServerFunctions.g.cs
// ==================================================================

namespace Sungero.ExchangeCore.Server
{
  public partial class BusinessUnitBoxFunctions : global::Sungero.ExchangeCore.Server.BoxBaseFunctions
  {
    private global::Sungero.ExchangeCore.IBusinessUnitBox _obj
    {
      get { return (global::Sungero.ExchangeCore.IBusinessUnitBox)this.Entity; }
    }

    public BusinessUnitBoxFunctions(global::Sungero.ExchangeCore.IBusinessUnitBox entity) : base(entity) { }
  }
}

// ==================================================================
// BusinessUnitBoxFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Functions
{
  internal static class BusinessUnitBox
  {
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IBusinessUnitBox> GetConnectedBoxes()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetConnectedBoxes",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IBusinessUnitBox>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.GetConnectedBoxes();
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IBusinessUnitBox> GetActiveBoxes()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetActiveBoxes",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::System.Linq.IQueryable<global::Sungero.ExchangeCore.IBusinessUnitBox>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.GetActiveBoxes();
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String Login(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.String password)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("Login", new System.Type[] { typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { password });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String CheckConnection(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckConnection", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String SendInvitation(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String invitationNote)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendInvitation", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, invitationNote });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String SendInvitation(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String operatorCode, global::System.String departmentCode, global::System.String invitationNote)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendInvitation", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, operatorCode, departmentCode, invitationNote });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String SendInvitation(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.String organizationId, global::System.String counterpartyName, global::System.String invitationNote)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendInvitation", new System.Type[] { typeof(global::System.String), typeof(global::System.String), typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { organizationId, counterpartyName, invitationNote });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.String> CanSendInvitationFrom(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CanSendInvitationFrom", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty) });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String UpdateExchange(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String counterpartyId, global::System.String counterpartyFtsId, global::System.String counterpartyBranchId, global::System.Nullable<global::System.Int64> boxLineId)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateExchange", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Nullable<global::System.Int64>) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, counterpartyId, counterpartyFtsId, counterpartyBranchId, boxLineId });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String AcceptInvitation(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String counterpartyId, global::System.String invitationNote)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AcceptInvitation", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, counterpartyId, invitationNote });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::System.String RejectInvitation(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String counterpartyId, global::System.String invitationNote)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RejectInvitation", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(global::System.String) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, counterpartyId, invitationNote });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Core.Enumeration GetCounterpartyExchangeStatus(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.ContactStatus status)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyExchangeStatus", new System.Type[] { typeof(NpoComputer.DCX.Common.ContactStatus) });
      return (global::Sungero.Core.Enumeration)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { status });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  System.Object GetPublicClient(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetPublicClient", new System.Type[] {  });
      return (System.Object)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  NpoComputer.DCX.ClientApi.Client GetClient(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetClient", new System.Type[] {  });
      return (NpoComputer.DCX.ClientApi.Client)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SyncBoxStatus(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncBoxStatus", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Boolean SyncBoxCounterparties(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncBoxCounterparties", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void FillCounterpartiesFtsIds(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.ClientApi.Client client, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact> contacts)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillCounterpartiesFtsIds", new System.Type[] { typeof(NpoComputer.DCX.ClientApi.Client), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { client, contacts });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void UpdateExchangeStatus(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, NpoComputer.DCX.Common.IContact contact, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateExchangeStatus", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, contact, queueItem });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterpartyExchangeBoxes GetCounterpartyExchangeBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, NpoComputer.DCX.Common.IContact contact, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyExchangeBox", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem) });
      return (global::Sungero.Parties.ICounterpartyExchangeBoxes)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, contact, queueItem });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SetIsDefault(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetIsDefault", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> TryCompareCounterparty(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, System.Collections.Generic.IEnumerable<global::Sungero.Parties.ICounterparty> counterparties, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("TryCompareCounterparty", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(System.Collections.Generic.IEnumerable<global::Sungero.Parties.ICounterparty>), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem) });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, counterparties, queueItem });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateCounterpartyExchangeBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::Sungero.Parties.ICounterparty сounterparty, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterpartyExchangeBox", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, сounterparty, queueItem });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterparty FindSbisCounterparty(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> doubles)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FindSbisCounterparty", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>).MakeByRefType() });
      return (global::Sungero.Parties.ICounterparty)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, queueItem, doubles });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterparty CreateCounterparty(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterparty", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact) });
      return (global::Sungero.Parties.ICounterparty)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String ConvertAddressToPostalFormat(global::System.Collections.Generic.List<global::System.String> addressTerms)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("ConvertAddressToPostalFormat",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Collections.Generic.List<global::System.String>) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { addressTerms });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.ConvertAddressToPostalFormat(addressTerms);
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.String ConvertAddressToPostalFormat(NpoComputer.DCX.Common.OrganizationAddress address)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("ConvertAddressToPostalFormat",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(NpoComputer.DCX.Common.OrganizationAddress) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { address });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.ConvertAddressToPostalFormat(address);
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SetCityAndRegion(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.OrganizationAddress address, global::Sungero.Parties.ICounterparty counterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetCityAndRegion", new System.Type[] { typeof(NpoComputer.DCX.Common.OrganizationAddress), typeof(global::Sungero.Parties.ICounterparty) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { address, counterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateConflictTask(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, System.Collections.Generic.Dictionary<NpoComputer.DCX.Common.IContact, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>> conflicts)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateConflictTask", new System.Type[] { typeof(System.Collections.Generic.Dictionary<NpoComputer.DCX.Common.IContact, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { conflicts });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateConflictTask(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, System.Collections.Generic.Dictionary<NpoComputer.DCX.Common.Organization, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>> conflicts, global::System.Boolean isExchangeBoxConflict)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateConflictTask", new System.Type[] { typeof(System.Collections.Generic.Dictionary<NpoComputer.DCX.Common.Organization, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>>), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { conflicts, isExchangeBoxConflict });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateCounterpartyConflictTask(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.Organization serviceOrganization, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> organizations, global::Sungero.ExchangeCore.ICounterpartyQueueItem queueItem, global::System.Boolean isExchangeBoxConflict)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterpartyConflictTask", new System.Type[] { typeof(NpoComputer.DCX.Common.Organization), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>), typeof(global::Sungero.ExchangeCore.ICounterpartyQueueItem), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { serviceOrganization, organizations, queueItem, isExchangeBoxConflict });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateNotice(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, System.Collections.Generic.IList<global::Sungero.ExchangeCore.ICounterpartyQueueItem> queueItems)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateNotice", new System.Type[] { typeof(System.Collections.Generic.IList<global::Sungero.ExchangeCore.ICounterpartyQueueItem>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { queueItems });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void AddLines(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Workflow.ISimpleTask task, System.Collections.Generic.IEnumerable<global::Sungero.ExchangeCore.ICounterpartyQueueItem> queueItems, global::System.String header)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddLines", new System.Type[] { typeof(global::Sungero.Workflow.ISimpleTask), typeof(System.Collections.Generic.IEnumerable<global::Sungero.ExchangeCore.ICounterpartyQueueItem>), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, queueItems, header });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SyncBoxCounterpartyBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncBoxCounterpartyBranches", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SyncCounterpartyOrgStructureUnits(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.ClientApi.Client client, NpoComputer.DCX.Common.IContact headCounterparty, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> synchronizedBoxes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyOrgStructureUnits", new System.Type[] { typeof(NpoComputer.DCX.ClientApi.Client), typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>).MakeByRefType() });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { client, headCounterparty, synchronizedBoxes });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact> GetHeadCounterparties(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact> contacts)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetHeadCounterparties", new System.Type[] { typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact>) });
      return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IContact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contacts });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> SyncCounterpartyBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyBranches", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, counterpartyOrgStructureUnits });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterpartyExchangeBoxes SyncCounterpartyBranch(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment counterpartyBranch, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> currentCounterpartyBranches)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyBranch", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>) });
      return (global::Sungero.Parties.ICounterpartyExchangeBoxes)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, counterpartyBranch, currentCounterpartyBranches });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterparty CreateCounterpartyBranch(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterpartyBranch", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment) });
      return (global::Sungero.Parties.ICounterparty)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  NpoComputer.DCX.Common.Organization ConvertBranchToOrganization(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ConvertBranchToOrganization", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment) });
      return (NpoComputer.DCX.Common.Organization)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> SyncCounterpartyDeletedBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyBranches, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> currentCounterpartyBranches)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyDeletedBranches", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>) });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, counterpartyBranches, currentCounterpartyBranches });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICompany GetHeadCompany(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetHeadCompany", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact) });
      return (global::Sungero.Parties.ICompany)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.String GetCounterpartyBranchName(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyBranchName", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterpartyExchangeBoxes CreateCounterpartyExchangeBoxRecord(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty counterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterpartyExchangeBoxRecord", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty) });
      return (global::Sungero.Parties.ICounterpartyExchangeBoxes)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department, counterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Parties.ICounterpartyExchangeBoxes UpdateCounterpartyExchangeBoxRecord(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty counterparty, global::Sungero.Parties.ICounterpartyExchangeBoxes exchangeBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateCounterpartyExchangeBoxRecord", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty), typeof(global::Sungero.Parties.ICounterpartyExchangeBoxes) });
      return (global::Sungero.Parties.ICounterpartyExchangeBoxes)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department, counterparty, exchangeBox });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SyncCounterpartyDepartments(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyDepartments", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, counterpartyOrgStructureUnits });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SyncCounterpartyDepartment(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits, NpoComputer.DCX.Common.IDepartment department)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SyncCounterpartyDepartment", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>), typeof(NpoComputer.DCX.Common.IDepartment) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, counterpartyOrgStructureUnits, department });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CloseCounterpartyDeletedDepartments(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact counterparty, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> departmentsFromService)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyDeletedDepartments", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, departmentsFromService });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.ExchangeCore.ICounterpartyDepartmentBox CreateCounterpartyDepartmentBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact headCounterparty, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty counterparty, NpoComputer.DCX.Common.IDepartment parentBranch)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateCounterpartyDepartmentBox", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty), typeof(NpoComputer.DCX.Common.IDepartment) });
      return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBox)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { headCounterparty, department, counterparty, parentBranch });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void UpdateCounterpartyDepartmentBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox counterpartyDepartmentBox, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty сounterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateCounterpartyDepartmentBox", new System.Type[] { typeof(global::Sungero.ExchangeCore.ICounterpartyDepartmentBox), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterpartyDepartmentBox, department, сounterparty });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> CloseCounterpartyBranchesForClosedContacts(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyBranchesForClosedContacts", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CloseCounterpartyDepartmentsForClosedContacts(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyDepartmentsForClosedContacts", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CloseCounterpartyDepartmentsWithChangeBranchId(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyDepartmentsWithChangeBranchId", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> CloseCounterpartyBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty> branchesToClose)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyBranches", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterparty>) });
      return (global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { branchesToClose });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CloseCounterpartyDepartmentBoxes(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox> boxesToClose)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CloseCounterpartyDepartmentBoxes", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.ExchangeCore.ICounterpartyDepartmentBox>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { boxesToClose });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  NpoComputer.DCX.Common.IDepartment GetParentBranch(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IDepartment currentDepartment, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetParentBranch", new System.Type[] { typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
      return (NpoComputer.DCX.Common.IDepartment)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { currentDepartment, counterpartyOrgStructureUnits });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> GetCounterpartyBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyBranches", new System.Type[] { typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
      return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterpartyOrgStructureUnits });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> GetCounterpartyDepartments(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment> counterpartyOrgStructureUnits)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyDepartments", new System.Type[] { typeof(global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>) });
      return (global::System.Collections.Generic.List<NpoComputer.DCX.Common.IDepartment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterpartyOrgStructureUnits });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void SendNotices(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> synchronizedBoxes)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendNotices", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { synchronizedBoxes });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void CreateBranchNotice(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> boxesForNotice)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CreateBranchNotice", new System.Type[] { typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { boxesForNotice });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void AddBranchLines(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Workflow.ISimpleTask task, global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes> boxesForNotice, global::System.String header)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("AddBranchLines", new System.Type[] { typeof(global::Sungero.Workflow.ISimpleTask), typeof(global::System.Collections.Generic.List<global::Sungero.Parties.ICounterpartyExchangeBoxes>), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { task, boxesForNotice, header });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IExchangeService> GetUsedServicesOfBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Company.IBusinessUnit businessUnit)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetUsedServicesOfBox", new System.Type[] { typeof(global::Sungero.Company.IBusinessUnit) });
      return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IExchangeService>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { businessUnit });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IExchangeService> GetUsedServicesOfBox()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetUsedServicesOfBox",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::System.Collections.Generic.List<global::Sungero.ExchangeCore.IExchangeService>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.GetUsedServicesOfBox();
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.ExchangeCore.IExchangeService GetDefaultExchangeService(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDefaultExchangeService", new System.Type[] {  });
      return (global::Sungero.ExchangeCore.IExchangeService)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.ExchangeCore.IExchangeService GetExchangeService(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetExchangeService", new System.Type[] {  });
      return (global::Sungero.ExchangeCore.IExchangeService)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.Company.IBusinessUnit GetBusinessUnit(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetBusinessUnit", new System.Type[] {  });
      return (global::Sungero.Company.IBusinessUnit)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate> GetCertificatesOfEmployee(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Company.IEmployee employee)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCertificatesOfEmployee", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Linq.IQueryable<global::Sungero.CoreEntities.ICertificate>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { employee });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CheckResponsibleServiceCertificates(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Company.IEmployee responsible)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckResponsibleServiceCertificates", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { responsible });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CheckAllResponsibleCertificates(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Company.IEmployee responsible)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckAllResponsibleCertificates", new System.Type[] { typeof(global::Sungero.Company.IEmployee) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { responsible });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Boolean CheckBusinessUnitTinTRRC(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckBusinessUnitTinTRRC", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void UpdateExchangeServiceCertificates(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateExchangeServiceCertificates", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void UpdateServiceFormalizedPoA(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateServiceFormalizedPoA", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::System.String> CheckProperties(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckProperties", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  System.Collections.Generic.Dictionary<Sungero.Domain.Shared.IPropertyInfo, global::System.String> BeforeSaveCheckProperties(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("BeforeSaveCheckProperties", new System.Type[] {  });
      return (System.Collections.Generic.Dictionary<Sungero.Domain.Shared.IPropertyInfo, global::System.String>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.String GetEncryptedDataRemote(global::System.String data)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetEncryptedDataRemote",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { data });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.GetEncryptedDataRemote(data);
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void ValidateCertificates(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ValidateCertificates", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.ExchangeCore.Structures.BusinessUnitBox.ExchangeDocumentsPackage GetExchangeDocumentsPackage(global::System.String messageId, global::System.String documentId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetExchangeDocumentsPackage",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String), typeof(global::System.String) }, null);
        return (global::Sungero.ExchangeCore.Structures.BusinessUnitBox.ExchangeDocumentsPackage)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { messageId, documentId });
      }
      else
      {
        return global::Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions.GetExchangeDocumentsPackage(messageId, documentId);
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession GetHistoricalMessagesDownloadSessionInWork(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetHistoricalMessagesDownloadSessionInWork", new System.Type[] {  });
      return (global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogDebugFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogDebugFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, text });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogDebugFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, global::Sungero.Parties.ICounterparty counterparty, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogDebugFormat", new System.Type[] { typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { counterparty, text });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogDebugFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, NpoComputer.DCX.Common.IDepartment department, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogDebugFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, department, text });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogDebugFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::Sungero.Parties.ICounterparty counterparty, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogDebugFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, counterparty, text });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogDebugFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty counterparty, global::System.String text)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogDebugFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, department, counterparty, text });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogErrorFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, NpoComputer.DCX.Common.IDepartment department, global::System.String text, System.Exception ex)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogErrorFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::System.String), typeof(System.Exception) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, department, text, ex });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogErrorFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::Sungero.Parties.ICounterparty counterparty, global::System.String text, System.Exception ex)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogErrorFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.String), typeof(System.Exception) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, counterparty, text, ex });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  void LogErrorFormat(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, global::System.String text, System.Exception ex)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("LogErrorFormat", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(global::System.String), typeof(System.Exception) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, text, ex });
    }
    /// <redirect project="Sungero.ExchangeCore.Server" type="Sungero.ExchangeCore.Server.BusinessUnitBoxFunctions" />
    internal static  global::System.String GetCounterpartyLogInfo(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox, NpoComputer.DCX.Common.IContact contact, NpoComputer.DCX.Common.IDepartment department, global::Sungero.Parties.ICounterparty counterparty)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetCounterpartyLogInfo", new System.Type[] { typeof(NpoComputer.DCX.Common.IContact), typeof(NpoComputer.DCX.Common.IDepartment), typeof(global::Sungero.Parties.ICounterparty) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { contact, department, counterparty });
    }

    /// <redirect project="Sungero.ExchangeCore.Shared" type="Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions" />
    internal static  void SetBusinessUnitBoxName(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetBusinessUnitBoxName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Shared" type="Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions" />
    internal static  void ResetConnectionStatus(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ResetConnectionStatus", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Shared" type="Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions" />
    internal static  global::System.String GetEncryptedData(global::System.String data)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetEncryptedData",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.String) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { data });
      }
      else
      {
        return global::Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions.GetEncryptedData(data);
      }
    }
    /// <redirect project="Sungero.ExchangeCore.Shared" type="Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions" />
    internal static  global::Sungero.ExchangeCore.IBusinessUnitBox GetRootBox(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetRootBox", new System.Type[] {  });
      return (global::Sungero.ExchangeCore.IBusinessUnitBox)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.ExchangeCore.Shared" type="Sungero.ExchangeCore.Shared.BusinessUnitBoxFunctions" />
    internal static  global::System.String CheckBusinessUnitBoxActive(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)businessUnitBox).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("CheckBusinessUnitBoxActive", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// BusinessUnitBoxServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Server
{
  public class BusinessUnitBoxServerPublicFunctions : global::Sungero.ExchangeCore.Server.IBusinessUnitBoxServerPublicFunctions
  {
    public global::Sungero.Company.IBusinessUnit GetBusinessUnit(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      return global::Sungero.ExchangeCore.Functions.BusinessUnitBox.GetBusinessUnit(businessUnitBox);
    }
    public global::Sungero.ExchangeCore.IHistoricalMessagesDownloadSession GetHistoricalMessagesDownloadSessionInWork(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      return global::Sungero.ExchangeCore.Functions.BusinessUnitBox.GetHistoricalMessagesDownloadSessionInWork(businessUnitBox);
    }
    public System.Object GetPublicClient(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      return global::Sungero.ExchangeCore.Functions.BusinessUnitBox.GetPublicClient(businessUnitBox);
    }
    public global::System.Boolean SyncBoxCounterparties(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
      return global::Sungero.ExchangeCore.Functions.BusinessUnitBox.SyncBoxCounterparties(businessUnitBox);
    }
    public void SyncBoxCounterpartyBranches(global::Sungero.ExchangeCore.IBusinessUnitBox businessUnitBox)
    {
global::Sungero.ExchangeCore.Functions.BusinessUnitBox.SyncBoxCounterpartyBranches(businessUnitBox);
    }
  }
}

// ==================================================================
// BusinessUnitBoxQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Queries
{
  public class BusinessUnitBox
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.ExchangeCore.Server.BusinessUnitBox.BusinessUnitBoxQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
