
// ==================================================================
// StampSetting.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class StampSettingFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.Docflow.IStampSetting
    {
      protected new global::Sungero.Docflow.IStampSettingFilterState Filter { get; private set; }

      private global::Sungero.Docflow.IStampSettingFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public StampSettingFilter(global::Sungero.Docflow.IStampSettingFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected StampSettingFilter()
      {
      }
    }
      public class StampSettingUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.Docflow.IStampSetting
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class StampSettingSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }



                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }



                   public StampSettingBusinessUnitsModel BusinessUnits { get; protected set; }

        }


      public class StampSettingBusinessUnitsModel : global::Sungero.Domain.CollectionPropertySearchDialogModel
          {
            public override global::System.Int64? Id { get; protected set; }


                      public virtual global::System.Collections.Generic.IEnumerable<global::Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }

         }




  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.StampSettingFilter<global::Sungero.Docflow.IStampSetting>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.Docflow.Server.StampSettingUiFilter<global::Sungero.Docflow.IStampSetting>))]

  public class StampSetting :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.Docflow.IStampSetting
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("06e3a0a6-5e8c-463e-bbfd-578227389d3f");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.StampSetting.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IStampSetting, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IStampSettingState State
    {
      get { return (global::Sungero.Docflow.IStampSettingState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.StampSettingState(this);
    }

    public new virtual global::Sungero.Docflow.IStampSettingInfo Info
    {
      get { return (global::Sungero.Docflow.IStampSettingInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IStampSettingAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IStampSettingAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.StampSettingAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.StampSettingFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.StampSettingFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.StampSettingServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.StampSettingSharedHandlers(this);
    }

    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }
    private global::System.Boolean? _NeedShowDateTime;
    public virtual global::System.Boolean? NeedShowDateTime
    {
      get
      {
        return this._NeedShowDateTime;
      }

      set
      {
        this.SetPropertyValue("NeedShowDateTime", this._NeedShowDateTime, value, (propertyValue) => { this._NeedShowDateTime = propertyValue; }, this.NeedShowDateTimeChangedHandler);
      }
    }



    private global::System.String _Title;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Title
    {
      get
      {
        return this._Title;
      }

      set
      {
        this.SetPropertyValue("Title", this._Title, value, (propertyValue) => { this._Title = propertyValue; }, this.TitleChangedHandler);
      }
    }
    private global::System.String _Note;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }
    private global::System.String _LogoAsBase64;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String LogoAsBase64
    {
      get
      {
        return this._LogoAsBase64;
      }

      set
      {
        this.SetPropertyValue("LogoAsBase64", this._LogoAsBase64, value, (propertyValue) => { this._LogoAsBase64 = propertyValue; }, this.LogoAsBase64ChangedHandler);
      }
    }


    private global::System.Byte[] _Logo;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.Byte[] Logo
    {
      get
      {
        return this._Logo;
      }

      set
      {
        this.SetPropertyValue("Logo", this._Logo, value, (propertyValue) => { this._Logo = propertyValue; }, this.LogoChangedHandler);
      }
    }





    protected global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStampSettingBusinessUnits> _BusinessUnits;

    public virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStampSettingBusinessUnits> BusinessUnits
    {
      get
      {
        if (this._BusinessUnits == null)
        {
          this._BusinessUnits = this.CreateBusinessUnitsCollection();
          this.SetBusinessUnitsEventHandlers();
        }
        return this._BusinessUnits;
      }

      set
      {
        if (this._BusinessUnits != null)
          this.UnsetChildCollectionEventHandlers(this._BusinessUnits);

        this._BusinessUnits = value;
        this.SetBusinessUnitsEventHandlers();
      }
    }

    protected virtual global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IStampSettingBusinessUnits> CreateBusinessUnitsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IStampSettingBusinessUnits>() { RootEntity = this };
    }

    private void SetBusinessUnitsEventHandlers()
    {
      this.SetChildCollectionEventHandlers(this._BusinessUnits, "BusinessUnits");

      var changeNotifier = (global::Sungero.Domain.Shared.INotifyChildEntityCollectionChanged)this._BusinessUnits;
      changeNotifier.Added += this.BusinessUnitsAddedHandler;
      changeNotifier.Deleted += this.BusinessUnitsDeletedHandler;
      changeNotifier.Added += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Deleted += this.BusinessUnitsCollectionUpdateEventHandler;
      changeNotifier.Updated += this.BusinessUnitsCollectionUpdateEventHandler;
    }

    private void BusinessUnitsCollectionUpdateEventHandler(object sender, global::Sungero.Domain.Shared.BaseChildEntityEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      if (this.IsPropertyChangedHandlerEnabled && this.IsPropertyChangedAppliedHandlerEnabled("BusinessUnits"))
        this.BusinessUnitsChangedHandler();
    }



    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.StampSettingCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IStampSetting)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.StampSettingCreatingFromServerHandler((global::Sungero.Docflow.IStampSetting)entitySource, this.Info);
    }

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void BusinessUnitsChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.CollectionPropertyChangedEventArgs(this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).BusinessUnitsChanged(args);
    }

    protected void LogoChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.ImagePropertyChangedEventArgs(this.State.Properties.Logo, this.Logo, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).LogoChanged(args);
    }

    protected void TitleChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Title, this.Title, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).TitleChanged(args);
    }

    protected void NeedShowDateTimeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BooleanPropertyChangedEventArgs(this.State.Properties.NeedShowDateTime, this.NeedShowDateTime, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).NeedShowDateTimeChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void LogoAsBase64ChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.LogoAsBase64, this.LogoAsBase64, this);
     ((global::Sungero.Docflow.IStampSettingSharedHandlers)this.SharedHandlers).LogoAsBase64Changed(args);
    }



    protected virtual global::Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsAddedHandler(global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers(this, e.Value, null, e.Source);
    }

    protected virtual global::Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers CreateBusinessUnitsDeletedHandler(global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      return new global::Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers(this, null, e.Value, null);
    }

    protected virtual void BusinessUnitsAddedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityAddedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, e.Value, null, e.Source });
        var methodInfo = type.GetMethod("BusinessUnitsAdded");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateBusinessUnitsAddedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyAddedEventArgs(this);
          collectionHandlers.BusinessUnitsAdded(args);
        }
      }
    }

    protected virtual void BusinessUnitsDeletedHandler(object sender, global::Sungero.Domain.Shared.ChildEntityDeletedEventArgs<global::Sungero.Domain.Shared.IChildEntity> e)
    {
      var type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.StampSettingBusinessUnitsSharedCollectionHandlers");
      if (type != null)
      {
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(type, new object[] { this, null, e.Value, null });
        var methodInfo = type.GetMethod("BusinessUnitsDeleted");
        var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
        global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { args });
      }
      else
      {
        var collectionHandlers = this.CreateBusinessUnitsDeletedHandler(e);
        if (collectionHandlers != null)
        {
          var args = new global::Sungero.Domain.Shared.CollectionPropertyDeletedEventArgs(this);
          collectionHandlers.BusinessUnitsDeleted(args);
        }
      }
    }


    #endregion


    public StampSetting()
    {
    }

  }
}

// ==================================================================
// StampSettingHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{

  public partial class StampSettingFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IStampSetting
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.Docflow.IStampSettingFilterState Filter { get; private set; }

    private global::Sungero.Docflow.IStampSettingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public StampSettingFilteringServerHandler(global::Sungero.Docflow.IStampSettingFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected StampSettingFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class StampSettingUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IStampSetting
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class StampSettingSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.StampSettingSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.StampSettingSearchDialogModel)this.Dialog;
       }
     }

     public StampSettingSearchDialogServerHandler(global::Sungero.Docflow.Server.StampSettingSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class StampSettingServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.Docflow.IStampSetting _obj
    {
      get { return (global::Sungero.Docflow.IStampSetting)this.Entity; }
    }

    public StampSettingServerHandlers(global::Sungero.Docflow.IStampSetting entity)
      : base(entity)
    {
    }
  }

  public partial class StampSettingCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IStampSetting _source
    {
      get { return (global::Sungero.Docflow.IStampSetting)this.Source; }
    }

    private global::Sungero.Docflow.IStampSettingInfo _info
    {
      get { return (global::Sungero.Docflow.IStampSettingInfo)this._Info; }
    }

    public StampSettingCreatingFromServerHandler(global::Sungero.Docflow.IStampSetting source, global::Sungero.Docflow.IStampSettingInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// StampSettingEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// StampSettingAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class StampSettingAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.Docflow.IStampSettingAccessRights
  {

    public StampSettingAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class StampSettingTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.Docflow.IStampSettingAccessRights
  {

    public StampSettingTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// StampSettingRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class StampSettingRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.Docflow.IStampSettingRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IStampSetting 
    {
       public new global::Sungero.Docflow.IStampSettingAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IStampSettingAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IStampSettingInfo Info
       {
          get { return (global::Sungero.Docflow.IStampSettingInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.StampSettingTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// StampSettingPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// StampSettingServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class StampSettingFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.Docflow.IStampSetting _obj
    {
      get { return (global::Sungero.Docflow.IStampSetting)this.Entity; }
    }

    public StampSettingFunctions(global::Sungero.Docflow.IStampSetting entity) : base(entity) { }
  }
}

// ==================================================================
// StampSettingFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class StampSetting
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetStampSettingDuplicates(global::Sungero.Docflow.IStampSetting stampSetting)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStampSettingDuplicates", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    internal static  global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams GetSignatureStampParams(global::Sungero.Docflow.IStampSetting stampSetting, global::System.DateTime signingDate, global::System.Boolean withCertificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureStampParams", new System.Type[] { typeof(global::System.DateTime), typeof(global::System.Boolean) });
      return (global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signingDate, withCertificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetStampSettings(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.StampSettingFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStampSettings",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Server.StampSettingFunctions.GetStampSettings(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    internal static  global::System.String GetLogoForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting, global::System.Boolean withCertificate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLogoForSignatureStamp", new System.Type[] { typeof(global::System.Boolean) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { withCertificate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    internal static  global::System.String GetSigningDateForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting, global::System.DateTime signingDate)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSigningDateForSignatureStamp", new System.Type[] { typeof(global::System.DateTime) });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { signingDate });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.StampSettingFunctions" />
    internal static  global::System.String GetTitleForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTitleForSignatureStamp", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.StampSettingFunctions" />
    internal static  global::System.String GetDuplicatesErrorText(global::Sungero.Docflow.IStampSetting stampSetting)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDuplicatesErrorText", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.StampSettingFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetDuplicates(global::Sungero.Docflow.IStampSetting stampSetting)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)stampSetting).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDuplicates", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// StampSettingServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class StampSettingServerPublicFunctions : global::Sungero.Docflow.Server.IStampSettingServerPublicFunctions
  {
    public global::System.String GetLogoForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting, global::System.Boolean withCertificate)
    {
      return global::Sungero.Docflow.Functions.StampSetting.GetLogoForSignatureStamp(stampSetting, withCertificate);
    }
    public global::Sungero.Docflow.Structures.StampSetting.ISignatureStampParams GetSignatureStampParams(global::Sungero.Docflow.IStampSetting stampSetting, global::System.DateTime signingDate, global::System.Boolean withCertificate)
    {
      return global::Sungero.Docflow.Functions.StampSetting.GetSignatureStampParams(stampSetting, signingDate, withCertificate);
    }
    public global::System.String GetSigningDateForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting, global::System.DateTime signingDate)
    {
      return global::Sungero.Docflow.Functions.StampSetting.GetSigningDateForSignatureStamp(stampSetting, signingDate);
    }
    public global::System.Collections.Generic.List<global::Sungero.Docflow.IStampSetting> GetStampSettings(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Docflow.Functions.StampSetting.GetStampSettings(document);
    }
    public global::System.String GetTitleForSignatureStamp(global::Sungero.Docflow.IStampSetting stampSetting)
    {
      return global::Sungero.Docflow.Functions.StampSetting.GetTitleForSignatureStamp(stampSetting);
    }
  }
}

// ==================================================================
// StampSettingQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class StampSetting
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.StampSetting.StampSettingQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
