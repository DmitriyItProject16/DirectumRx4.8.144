
// ==================================================================
// OutgoingInvoice.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class OutgoingInvoiceFilter<T> :
      global::Sungero.Docflow.Server.AccountingDocumentBaseFilter<T>
      where T : class, global::Sungero.Contracts.IOutgoingInvoice
    {
      private global::Sungero.Contracts.IOutgoingInvoiceFilterState filter
      {
        get
        {
          return (Sungero.Contracts.IOutgoingInvoiceFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        var args = new global::Sungero.Domain.FilteringEventArgs();
        global::System.Linq.IQueryable<T> result;
        var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Contracts.OutgoingInvoiceFilteringServerHandler`1");
        if (filterType != null)
        {
          var genericType = filterType.MakeGenericType(typeof(T));
          var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { this.filter });
          var methodInfo = genericType.GetMethod("Filtering");
          result = (global::System.Linq.IQueryable<T>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
        }
        else
        {
          result = new global::Sungero.Contracts.OutgoingInvoiceFilteringServerHandler<T>(this.filter).Filtering(query, args);
        }
        if (args.DisableCheckRights)
        global::Sungero.Domain.Security.FilteringAccessRightsOptions.DisableCheckRights<T>();
        return result;
      }

      public OutgoingInvoiceFilter(global::Sungero.Contracts.IOutgoingInvoiceFilterState filter)
      : base(filter)
      {
      }

      protected OutgoingInvoiceFilter()
      {
      }
    }
    public class OutgoingInvoiceSearchDialogModel : global::Sungero.Docflow.Server.AccountingDocumentBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.Int64? SellerTitleId { get; protected set; }
                  public override global::System.Int64? BuyerTitleId { get; protected set; }
                  public override global::System.Int64? SellerSignatureId { get; protected set; }
                  public override global::System.Int64? BuyerSignatureId { get; protected set; }
                  public override global::System.String Subject { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Boolean? IsAdjustment { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.ICounterparty> Counterparty { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOfficialDocument> LeadingDocument { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> ResponsibleEmployee { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.IContact> Contact { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Parties.IContact> CounterpartySignatory { get; protected set; }
                  [Sungero.Domain.Shared.HideInDevStudio()]
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IAccountingDocumentBase> Corrected { get; protected set; }




                   public new OutgoingInvoiceVersionsModel Versions { get { return (OutgoingInvoiceVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new OutgoingInvoiceTrackingModel Tracking { get { return (OutgoingInvoiceTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class OutgoingInvoiceVersionsModel : global::Sungero.Docflow.Server.AccountingDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class OutgoingInvoiceTrackingModel : global::Sungero.Docflow.Server.AccountingDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::Sungero.Contracts.Server.OutgoingInvoiceFilter<global::Sungero.Contracts.IOutgoingInvoice>))]

  public class OutgoingInvoice :
    global::Sungero.Docflow.Server.AccountingDocumentBase, global::Sungero.Contracts.IOutgoingInvoice, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("58ad01fb-6805-426b-9152-4de16d83b258");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Contracts.Server.OutgoingInvoice.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Contracts.IOutgoingInvoice, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Contracts.IOutgoingInvoiceState State
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoiceState(this);
    }

    public new virtual global::Sungero.Contracts.IOutgoingInvoiceInfo Info
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceInfo)base.Info; }
    }

    public new virtual global::Sungero.Contracts.IOutgoingInvoiceAccessRights AccessRights
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Contracts.Server.OutgoingInvoiceAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Contracts.Server.OutgoingInvoiceFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Contracts.Shared.OutgoingInvoiceFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Contracts.OutgoingInvoiceServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Contracts.OutgoingInvoiceSharedHandlers(this);
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _LifeCycleStateItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::Sungero.Docflow.Server.AccountingDocumentBase.LifeCycleStateItems,
      typeof(global::Sungero.Contracts.OutgoingInvoice.LifeCycleState),
      typeof(global::Sungero.Contracts.Server.OutgoingInvoice),
      "LifeCycleState");

    public static new global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateItems
    {
      get { return global::Sungero.Contracts.Server.OutgoingInvoice._LifeCycleStateItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems LifeCycleStateAllowedItems
    {
      get { return global::Sungero.Contracts.Server.OutgoingInvoice.LifeCycleStateItems; }
    }





    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IOutgoingInvoiceVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Contracts.IOutgoingInvoiceTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Contracts.OutgoingInvoiceCreatingFromServerHandler", new object[] { (global::Sungero.Contracts.IOutgoingInvoice)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Contracts.OutgoingInvoiceCreatingFromServerHandler((global::Sungero.Contracts.IOutgoingInvoice)entitySource, this.Info);
    }

    #region Framework events





    #endregion


    public OutgoingInvoice()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Contracts.OutgoingInvoiceConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Contracts.OutgoingInvoiceConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// OutgoingInvoiceHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{

  public partial class OutgoingInvoiceFilteringServerHandler<T>
    : global::Sungero.Docflow.AccountingDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Contracts.IOutgoingInvoice
  {
    private global::Sungero.Contracts.IOutgoingInvoiceFilterState _filter
    {
      get
      {
        return (Sungero.Contracts.IOutgoingInvoiceFilterState)this.Filter;
      }
    }

    public OutgoingInvoiceFilteringServerHandler(global::Sungero.Contracts.IOutgoingInvoiceFilterState filter)
    : base(filter)
    {
    }

    protected OutgoingInvoiceFilteringServerHandler()
    {
    }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> CounterpartyFiltering(global::System.Linq.IQueryable<Sungero.Parties.ICounterparty> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.CounterpartyFiltering(query, e);
              return query;
      }


  }

  public partial class OutgoingInvoiceSearchDialogServerHandler : global::Sungero.Docflow.AccountingDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Contracts.Server.OutgoingInvoiceSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Contracts.Server.OutgoingInvoiceSearchDialogModel)this.Dialog;
       }
     }

     public OutgoingInvoiceSearchDialogServerHandler(global::Sungero.Contracts.Server.OutgoingInvoiceSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class OutgoingInvoiceServerHandlers : global::Sungero.Docflow.AccountingDocumentBaseServerHandlers
  {
    private global::Sungero.Contracts.IOutgoingInvoice _obj
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoice)this.Entity; }
    }

    public OutgoingInvoiceServerHandlers(global::Sungero.Contracts.IOutgoingInvoice entity)
      : base(entity)
    {
    }
  }

  public partial class OutgoingInvoiceCreatingFromServerHandler : global::Sungero.Docflow.AccountingDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Contracts.IOutgoingInvoice _source
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoice)this.Source; }
    }

    private global::Sungero.Contracts.IOutgoingInvoiceInfo _info
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceInfo)this._Info; }
    }

    public OutgoingInvoiceCreatingFromServerHandler(global::Sungero.Contracts.IOutgoingInvoice source, global::Sungero.Contracts.IOutgoingInvoiceInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// OutgoingInvoiceEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// OutgoingInvoiceAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class OutgoingInvoiceAccessRights : 
    Sungero.Docflow.Server.AccountingDocumentBaseAccessRights, Sungero.Contracts.IOutgoingInvoiceAccessRights
  {

    public OutgoingInvoiceAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class OutgoingInvoiceTypeAccessRights : 
    Sungero.Docflow.Server.AccountingDocumentBaseTypeAccessRights, Sungero.Contracts.IOutgoingInvoiceAccessRights
  {

    public OutgoingInvoiceTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// OutgoingInvoiceRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class OutgoingInvoiceRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.AccountingDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Contracts.IOutgoingInvoiceRepositoryImplementer<T>
      where T : global::Sungero.Contracts.IOutgoingInvoice 
    {
       public new global::Sungero.Contracts.IOutgoingInvoiceAccessRights AccessRights
       {
          get { return (global::Sungero.Contracts.IOutgoingInvoiceAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Contracts.IOutgoingInvoiceInfo Info
       {
          get { return (global::Sungero.Contracts.IOutgoingInvoiceInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Contracts.Server.OutgoingInvoiceTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// OutgoingInvoicePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
    public class OutgoingInvoiceBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Contracts.IOutgoingInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Contracts.IOutgoingInvoiceFilterState)this.State;
        var handlers = new global::Sungero.Contracts.OutgoingInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Contracts.IOutgoingInvoice>(query);
      }
    }

    public class OutgoingInvoiceDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Contracts.IOutgoingInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Contracts.IOutgoingInvoiceFilterState)this.State;
        var handlers = new global::Sungero.Contracts.OutgoingInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Contracts.IOutgoingInvoice>(query);
      }
    }

    public class OutgoingInvoiceCounterpartyPanelNavigationFilter : global::Sungero.Docflow.Server.AccountingDocumentBaseCounterpartyPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Contracts.IOutgoingInvoice
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Parties.ICounterparty>)query;
        var typedState = (global::Sungero.Contracts.IOutgoingInvoiceFilterState)this.State;
        var handlers = new global::Sungero.Contracts.OutgoingInvoiceFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.CounterpartyFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Parties.ICounterparty>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Contracts.IOutgoingInvoice>(query);
      }
    }

}

// ==================================================================
// OutgoingInvoiceServerFunctions.g.cs
// ==================================================================

namespace Sungero.Contracts.Server
{
  public partial class OutgoingInvoiceFunctions : global::Sungero.Docflow.Server.AccountingDocumentBaseFunctions
  {
    private global::Sungero.Contracts.IOutgoingInvoice _obj
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoice)this.Entity; }
    }

    public OutgoingInvoiceFunctions(global::Sungero.Contracts.IOutgoingInvoice entity) : base(entity) { }
  }
}

// ==================================================================
// OutgoingInvoiceFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static class OutgoingInvoice
  {
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  void FillName(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  void UpdateLifeCycle(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice, global::System.Nullable<global::Sungero.Core.Enumeration> registrationState, global::System.Nullable<global::Sungero.Core.Enumeration> approvalState, global::System.Nullable<global::Sungero.Core.Enumeration> counterpartyApprovalState)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("UpdateLifeCycle", new System.Type[] { typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>), typeof(global::System.Nullable<global::Sungero.Core.Enumeration>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { registrationState, approvalState, counterpartyApprovalState });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee> GetEmailAddressees(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetEmailAddressees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Docflow.Structures.OfficialDocument.IEmailAddressee>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Contracts.Shared" type="Sungero.Contracts.Shared.OutgoingInvoiceFunctions" />
    internal static  global::System.Boolean NeedCounterpartySign(global::Sungero.Contracts.IOutgoingInvoice outgoingInvoice, global::Sungero.ExchangeCore.IBusinessUnitBox senderBox, global::System.Boolean isPrimaryDocument, global::System.Boolean needSign)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)outgoingInvoice).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("NeedCounterpartySign", new System.Type[] { typeof(global::Sungero.ExchangeCore.IBusinessUnitBox), typeof(global::System.Boolean), typeof(global::System.Boolean) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { senderBox, isPrimaryDocument, needSign });
    }

  }
}

// ==================================================================
// OutgoingInvoiceServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public class OutgoingInvoiceServerPublicFunctions : global::Sungero.Contracts.Server.IOutgoingInvoiceServerPublicFunctions
  {
  }
}

// ==================================================================
// OutgoingInvoiceQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Queries
{
  public class OutgoingInvoice
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Contracts.Server.OutgoingInvoice.OutgoingInvoiceQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// OutgoingInvoiceServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts
{
  public partial class OutgoingInvoiceConvertingFromServerHandler : global::Sungero.Docflow.AccountingDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Contracts.IOutgoingInvoiceInfo _info
    {
      get { return (global::Sungero.Contracts.IOutgoingInvoiceInfo)this._Info; }
    }

    public OutgoingInvoiceConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Contracts.IOutgoingInvoiceInfo info)
      : base(source, info)
    {
    }
  }
}
