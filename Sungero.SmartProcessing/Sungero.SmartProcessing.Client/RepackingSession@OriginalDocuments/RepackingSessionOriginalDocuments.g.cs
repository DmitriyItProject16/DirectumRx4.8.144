
// ==================================================================
// RepackingSessionOriginalDocuments.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class RepackingSessionOriginalDocuments :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.SmartProcessing.IRepackingSessionOriginalDocuments
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("35f47ffd-e1c9-4bfa-acfc-8810ab726178");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Client.RepackingSessionOriginalDocuments.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IRepackingSessionOriginalDocuments, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsState State
    {
      get
      {
        return (global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.RepackingSessionOriginalDocumentsState(this);
    }

    public new global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsInfo Info
    {
      get
      {
        return (global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.SmartProcessing.IRepackingSession> _RepackingSession;

    public global::Sungero.SmartProcessing.IRepackingSession RepackingSession
    {
      get { return this._RepackingSession.Value; }
      set { this._RepackingSession.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.RepackingSession; }
      set { this.RepackingSession = (global::Sungero.SmartProcessing.IRepackingSession)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?> _DocumentId;

        public virtual global::System.Int64? DocumentId
        {
          get { return this._DocumentId.Value; }
          set { this._DocumentId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _VersionNumber;

        public virtual global::System.Int32? VersionNumber
        {
          get { return this._VersionNumber.Value; }
          set { this._VersionNumber.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DocumentName;

        public virtual global::System.String DocumentName
        {
          get { return this._DocumentName.Value; }
          set { this._DocumentName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ResultVersionNumber;

        public virtual global::System.Int32? ResultVersionNumber
        {
          get { return this._ResultVersionNumber.Value; }
          set { this._ResultVersionNumber.Value = value; }
        }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void DocumentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.LongIntegerPropertyChangedEventArgs(this.State.Properties.DocumentId, this.DocumentId, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsSharedHandlers)this.SharedHandlers).OriginalDocumentsDocumentIdChanged(args);
    }

    protected void VersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.VersionNumber, this.VersionNumber, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsSharedHandlers)this.SharedHandlers).OriginalDocumentsVersionNumberChanged(args);
    }

    protected void DocumentNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DocumentName, this.DocumentName, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsSharedHandlers)this.SharedHandlers).OriginalDocumentsDocumentNameChanged(args);
    }

    protected void ResultVersionNumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ResultVersionNumber, this.ResultVersionNumber, this);
     ((global::Sungero.SmartProcessing.IRepackingSessionOriginalDocumentsSharedHandlers)this.SharedHandlers).OriginalDocumentsResultVersionNumberChanged(args);
    }



  protected global::System.Int64? DocumentIdValueInputHandler(global::System.Int64? value)
  {
    var args = new global::Sungero.Presentation.LongIntegerValueInputEventArgs(this.DocumentId, value, this, this.Info.Properties.DocumentId);
    ((global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsClientHandlers)this.Handlers).OriginalDocumentsDocumentIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? VersionNumberValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.VersionNumber, value, this, this.Info.Properties.VersionNumber);
    ((global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsClientHandlers)this.Handlers).OriginalDocumentsVersionNumberValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DocumentNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DocumentName, value, this, this.Info.Properties.DocumentName);
    ((global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsClientHandlers)this.Handlers).OriginalDocumentsDocumentNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ResultVersionNumberValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ResultVersionNumber, value, this, this.Info.Properties.ResultVersionNumber);
    ((global::Sungero.SmartProcessing.RepackingSessionOriginalDocumentsClientHandlers)this.Handlers).OriginalDocumentsResultVersionNumberValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



    public RepackingSessionOriginalDocuments()
    {
      this._RepackingSession = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.SmartProcessing.IRepackingSession>("RepackingSession", this, true);

            this._DocumentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int64?>("DocumentId", this);
            this._DocumentId.ValueChanged += (sender, e) => { this.DocumentIdChangedHandler(); };
            this.AddProperty(this._DocumentId);

            this._VersionNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("VersionNumber", this);
            this._VersionNumber.ValueChanged += (sender, e) => { this.VersionNumberChangedHandler(); };
            this.AddProperty(this._VersionNumber);

            this._DocumentName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DocumentName", this);
            this._DocumentName.ValueChanged += (sender, e) => { this.DocumentNameChangedHandler(); };
            this.AddProperty(this._DocumentName);

            this._ResultVersionNumber = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ResultVersionNumber", this);
            this._ResultVersionNumber.ValueChanged += (sender, e) => { this.ResultVersionNumberChangedHandler(); };
            this.AddProperty(this._ResultVersionNumber);








    }

    #endregion

  }
}
