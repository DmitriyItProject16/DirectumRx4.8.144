
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public partial class ContractsModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("f9d15b1c-2784-4c84-8348-1e162d70b988"); }
    }

    public override string Name
    {
      get { return "Sungero.Contracts"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IModuleServerInitializationFunctions, global::Sungero.Contracts.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("16aa8863-3f80-486b-be94-069e6f7b4d94"), new Sungero.Contracts.Shared.ApprovalIncInvoicePaidStageInfo(typeof(global::Sungero.Contracts.IApprovalIncInvoicePaidStage)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IApprovalIncInvoicePaidStageServerPublicFunctions, global::Sungero.Contracts.Server.ApprovalIncInvoicePaidStageServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IApprovalIncInvoicePaidStageSharedPublicFunctions, global::Sungero.Contracts.Shared.ApprovalIncInvoicePaidStageSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f37c7e63-b134-4446-9b5b-f8811f6c9666"), new Sungero.Contracts.Shared.ContractInfo(typeof(global::Sungero.Contracts.IContract)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractServerPublicFunctions, global::Sungero.Contracts.Server.ContractServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a8df1a5c-e08a-40a7-a9e4-dc41dd326303"), new Sungero.Contracts.Shared.ContractStagesInfo(typeof(global::Sungero.Contracts.IContractStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c3c85262-6f62-400a-b238-27a76aa4e860"), new Sungero.Contracts.Shared.ContractTrackingInfo(typeof(global::Sungero.Contracts.IContractTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6fd4c4b8-1bf8-466d-b4a7-7958ec225672"), new Sungero.Contracts.Shared.ContractVersionsInfo(typeof(global::Sungero.Contracts.IContractVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("03a2d2f4-a15a-4b5b-a97b-71140a938cbe"), new Sungero.Contracts.Shared.ContractApprovalRoleInfo(typeof(global::Sungero.Contracts.IContractApprovalRole)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractApprovalRoleServerPublicFunctions, global::Sungero.Contracts.Server.ContractApprovalRoleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractApprovalRoleSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractApprovalRoleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("306da7fa-dc27-437c-bb83-42c92436b7e2"), new Sungero.Contracts.Shared.ContractBaseInfo(typeof(global::Sungero.Contracts.IContractBase)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractBaseServerPublicFunctions, global::Sungero.Contracts.Server.ContractBaseServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractBaseSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractBaseSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ed27ede9-3dd2-4d4a-b1fc-2ca9eae265b5"), new Sungero.Contracts.Shared.ContractBaseStagesInfo(typeof(global::Sungero.Contracts.IContractBaseStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("af611b7d-7a97-4c85-bd0e-44335ba5a989"), new Sungero.Contracts.Shared.ContractBaseTrackingInfo(typeof(global::Sungero.Contracts.IContractBaseTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("c7a89d8e-e835-42f5-81af-6c741c43d259"), new Sungero.Contracts.Shared.ContractBaseVersionsInfo(typeof(global::Sungero.Contracts.IContractBaseVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("eb34ad64-f23b-4c9f-9d48-74834fbbe33e"), new Sungero.Contracts.Shared.ContractCategoryInfo(typeof(global::Sungero.Contracts.IContractCategory)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractCategoryServerPublicFunctions, global::Sungero.Contracts.Server.ContractCategoryServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractCategorySharedPublicFunctions, global::Sungero.Contracts.Shared.ContractCategorySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a9ad8c06-3d46-4302-be22-43b3b909f718"), new Sungero.Contracts.Shared.ContractCategoryDocumentKindsInfo(typeof(global::Sungero.Contracts.IContractCategoryDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("0523387b-a689-41e5-bed3-95892df6922c"), new Sungero.Contracts.Shared.ContractConditionInfo(typeof(global::Sungero.Contracts.IContractCondition)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractConditionServerPublicFunctions, global::Sungero.Contracts.Server.ContractConditionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractConditionSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractConditionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("2e3a82a6-98cf-46f8-a9cc-17fa8a307a97"), new Sungero.Contracts.Shared.ContractConditionConditionDocumentKindsInfo(typeof(global::Sungero.Contracts.IContractConditionConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("540bb138-651c-45f8-a3ca-7c2ea6ff8e21"), new Sungero.Contracts.Shared.ContractConditionCurrenciesInfo(typeof(global::Sungero.Contracts.IContractConditionCurrencies)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d355936d-7ee2-4bd6-a9e8-889e3d036082"), new Sungero.Contracts.Shared.ContractConditionDeliveryMethodsInfo(typeof(global::Sungero.Contracts.IContractConditionDeliveryMethods)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4034e012-3db7-424b-b4c0-de5c610a7664"), new Sungero.Contracts.Shared.ContractConditionDocumentKindsInfo(typeof(global::Sungero.Contracts.IContractConditionDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dcbf9c6f-9bb6-4b61-b501-db35df320207"), new Sungero.Contracts.Shared.ContractsApprovalRuleInfo(typeof(global::Sungero.Contracts.IContractsApprovalRule)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractsApprovalRuleServerPublicFunctions, global::Sungero.Contracts.Server.ContractsApprovalRuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractsApprovalRuleSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractsApprovalRuleSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("31dab68e-7567-4c19-9586-ba447b36562c"), new Sungero.Contracts.Shared.ContractsApprovalRuleBusinessUnitsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleBusinessUnits)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("421977df-8d98-4833-ad4e-a97214c8660b"), new Sungero.Contracts.Shared.ContractsApprovalRuleConditionsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleConditions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("6c966139-e0f7-4c62-8c83-ed8702ca54c5"), new Sungero.Contracts.Shared.ContractsApprovalRuleDepartmentsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleDepartments)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("9039aab1-4ce6-4769-ab73-2eb1f47f6cb7"), new Sungero.Contracts.Shared.ContractsApprovalRuleDocumentGroupsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleDocumentGroups)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("f611b903-a654-4664-8147-ed891c0713d3"), new Sungero.Contracts.Shared.ContractsApprovalRuleDocumentKindsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleDocumentKinds)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ea6de446-e4d2-4ae0-97f1-2cba6e7b0424"), new Sungero.Contracts.Shared.ContractsApprovalRuleStagesInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("303c6866-a2ef-4864-8350-1cc9dcbcb6ee"), new Sungero.Contracts.Shared.ContractsApprovalRuleTransitionsInfo(typeof(global::Sungero.Contracts.IContractsApprovalRuleTransitions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("59079f7f-a326-4947-bbd6-0ae6dfb5f59b"), new Sungero.Contracts.Shared.ContractualDocumentInfo(typeof(global::Sungero.Contracts.IContractualDocument)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IContractualDocumentServerPublicFunctions, global::Sungero.Contracts.Server.ContractualDocumentServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IContractualDocumentSharedPublicFunctions, global::Sungero.Contracts.Shared.ContractualDocumentSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("478d3e3d-4519-4bb0-b009-c43f7fbe0b95"), new Sungero.Contracts.Shared.ContractualDocumentMilestonesInfo(typeof(global::Sungero.Contracts.IContractualDocumentMilestones)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("19c5aee5-f67f-497e-ac1b-ab98bab0901b"), new Sungero.Contracts.Shared.ContractualDocumentTrackingInfo(typeof(global::Sungero.Contracts.IContractualDocumentTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fff6fbcb-3478-43fb-b8d4-888d2c5038c2"), new Sungero.Contracts.Shared.ContractualDocumentVersionsInfo(typeof(global::Sungero.Contracts.IContractualDocumentVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("a523a263-bc00-40f9-810d-f582bae2205d"), new Sungero.Contracts.Shared.IncomingInvoiceInfo(typeof(global::Sungero.Contracts.IIncomingInvoice)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IIncomingInvoiceServerPublicFunctions, global::Sungero.Contracts.Server.IncomingInvoiceServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IIncomingInvoiceSharedPublicFunctions, global::Sungero.Contracts.Shared.IncomingInvoiceSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("b8a7adc0-8df8-4b1f-8623-c529b7ddb7cb"), new Sungero.Contracts.Shared.IncomingInvoiceTrackingInfo(typeof(global::Sungero.Contracts.IIncomingInvoiceTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4ca628f6-b2c8-4892-8629-8f77041f4392"), new Sungero.Contracts.Shared.IncomingInvoiceVersionsInfo(typeof(global::Sungero.Contracts.IIncomingInvoiceVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("58ad01fb-6805-426b-9152-4de16d83b258"), new Sungero.Contracts.Shared.OutgoingInvoiceInfo(typeof(global::Sungero.Contracts.IOutgoingInvoice)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IOutgoingInvoiceServerPublicFunctions, global::Sungero.Contracts.Server.OutgoingInvoiceServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IOutgoingInvoiceSharedPublicFunctions, global::Sungero.Contracts.Shared.OutgoingInvoiceSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("dc209078-76ad-4603-a249-91e4b377d276"), new Sungero.Contracts.Shared.OutgoingInvoiceTrackingInfo(typeof(global::Sungero.Contracts.IOutgoingInvoiceTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("5101183d-0a1a-4904-9361-96d9777244d3"), new Sungero.Contracts.Shared.OutgoingInvoiceVersionsInfo(typeof(global::Sungero.Contracts.IOutgoingInvoiceVersions)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("265f2c57-6a8a-4a15-833b-ca00e8047fa5"), new Sungero.Contracts.Shared.SupAgreementInfo(typeof(global::Sungero.Contracts.ISupAgreement)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.ISupAgreementServerPublicFunctions, global::Sungero.Contracts.Server.SupAgreementServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.ISupAgreementSharedPublicFunctions, global::Sungero.Contracts.Shared.SupAgreementSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cece0295-1cc2-465f-bb38-f193e0a786a0"), new Sungero.Contracts.Shared.SupAgreementStagesInfo(typeof(global::Sungero.Contracts.ISupAgreementStages)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3a1afee8-f45c-4c4e-aa45-6bd6cf2d38a2"), new Sungero.Contracts.Shared.SupAgreementTrackingInfo(typeof(global::Sungero.Contracts.ISupAgreementTracking)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("cb6cb813-eb9a-4672-806d-29f32e24a29e"), new Sungero.Contracts.Shared.SupAgreementVersionsInfo(typeof(global::Sungero.Contracts.ISupAgreementVersions)));


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IApprovalIncInvoicePaidStageFilterState, global::Sungero.Contracts.Shared.ApprovalIncInvoicePaidStage.ApprovalIncInvoicePaidStageFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractFilterState, global::Sungero.Contracts.Shared.Contract.ContractFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractApprovalRoleFilterState, global::Sungero.Contracts.Shared.ContractApprovalRole.ContractApprovalRoleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractBaseFilterState, global::Sungero.Contracts.Shared.ContractBase.ContractBaseFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractCategoryFilterState, global::Sungero.Contracts.Shared.ContractCategory.ContractCategoryFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractConditionFilterState, global::Sungero.Contracts.Shared.ContractCondition.ContractConditionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractsApprovalRuleFilterState, global::Sungero.Contracts.Shared.ContractsApprovalRule.ContractsApprovalRuleFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IContractualDocumentFilterState, global::Sungero.Contracts.Shared.ContractualDocument.ContractualDocumentFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IIncomingInvoiceFilterState, global::Sungero.Contracts.Shared.IncomingInvoice.IncomingInvoiceFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.IOutgoingInvoiceFilterState, global::Sungero.Contracts.Shared.OutgoingInvoice.OutgoingInvoiceFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.ISupAgreementFilterState, global::Sungero.Contracts.Shared.SupAgreement.SupAgreementFilterState>();



      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Server.IModuleServerPublicFunctions, global::Sungero.Contracts.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Contracts.Shared.IModuleSharedPublicFunctions, global::Sungero.Contracts.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Contracts.ISupAgreement CreateSupAgreemnt()
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSupAgreemnt", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Contracts.ISupAgreement)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSupAgreemnt();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.FinancialArchive.IContractStatement CreateContractStatement()
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateContractStatement", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.FinancialArchive.IContractStatement)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateContractStatement();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Contracts.IIncomingInvoice CreateIncomingInvoice()
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateIncomingInvoice", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Contracts.IIncomingInvoice)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateIncomingInvoice();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Contracts.IOutgoingInvoice CreateOutgoingInvoice()
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateOutgoingInvoice", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Contracts.IOutgoingInvoice)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateOutgoingInvoice();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind> GetDocumentKinds()
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentKinds", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.GetDocumentKinds();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister> GetContractualDocumentRegisters()
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetContractualDocumentRegisters", global::System.Array.Empty<global::System.Type>());
        return (global::System.Collections.Generic.List<global::Sungero.Docflow.IDocumentRegister>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.GetContractualDocumentRegisters();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetFilteredRegisteredDocuments(global::System.String number, global::System.Nullable<global::System.DateTime> dateFrom, global::System.Nullable<global::System.DateTime> dateTo, global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.ICaseFile caseFile, global::Sungero.Company.IEmployee responsibleEmployee)
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFilteredRegisteredDocuments", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::Sungero.Docflow.IDocumentRegister), typeof(global::Sungero.Docflow.ICaseFile), typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{number, dateFrom, dateTo, documentRegister, caseFile, responsibleEmployee});
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.GetFilteredRegisteredDocuments(number, dateFrom, dateTo, documentRegister, caseFile, responsibleEmployee);
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument> GetContractualDocsWithCounterparty(global::Sungero.Parties.ICounterparty counterparty, global::System.Nullable<global::System.DateTime> dateFrom, global::System.Nullable<global::System.DateTime> dateTo)
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetContractualDocsWithCounterparty", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty), typeof(global::System.Nullable<global::System.DateTime>), typeof(global::System.Nullable<global::System.DateTime>)});
        return (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractualDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty, dateFrom, dateTo});
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.GetContractualDocsWithCounterparty(counterparty, dateFrom, dateTo);
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser> GetNotificationPerformers(global::Sungero.Contracts.IContractBase contract)
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetNotificationPerformers", new global::System.Type[]{typeof(global::Sungero.Contracts.IContractBase)});
        return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IUser>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{contract});
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetNotificationPerformers(contract);
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase> FilterContractsByLifeCycleState(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase> query)
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FilterContractsByLifeCycleState", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase>)});
        return (global::System.Linq.IQueryable<global::Sungero.Contracts.IContractBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query});
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.FilterContractsByLifeCycleState(query);
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::Sungero.Contracts.IContractualDocument> FindContract(global::System.String uuid, global::System.String number, global::System.String date, global::System.String businessUnitTIN, global::System.String businessUnitTRRC, global::System.String counterpartyUuid, global::System.String counterpartyTIN, global::System.String counterpartyTRRC, global::System.String sysid)
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FindContract", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Contracts.IContractualDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{uuid, number, date, businessUnitTIN, businessUnitTRRC, counterpartyUuid, counterpartyTIN, counterpartyTRRC, sysid});
      }
      else
      {
        return global::Sungero.Contracts.Server.ModuleFunctions.FindContract(uuid, number, date, businessUnitTIN, businessUnitTRRC, counterpartyUuid, counterpartyTIN, counterpartyTRRC, sysid);
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendNotificationForExpiringContracts()
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueSendNotificationForExpiringContracts", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Contracts.Server.ModuleFunctions.RequeueSendNotificationForExpiringContracts();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static void RequeueSendTaskForContractMilestones()
    {
      var __typeName = "Sungero.Contracts.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("RequeueSendTaskForContractMilestones", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    global::Sungero.Contracts.Server.ModuleFunctions.RequeueSendTaskForContractMilestones();
      }
    }
    /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetPerformerContractResponsible(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPerformerContractResponsible", new global::System.Type[]{typeof(global::Sungero.Docflow.IOfficialDocument)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{document});
      }
      else
      {
        return ((global::Sungero.Contracts.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPerformerContractResponsible(document);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Contracts.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Contracts.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightsOnDatabooks(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDatabooks", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightsOnDatabooks(allUsers);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightsOnDocuments(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightsOnDocuments", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightsOnDocuments(allUsers);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightOnFolders(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightOnFolders", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightOnFolders(allUsers);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateRoles()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateRoles", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateRoles();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightToRegistrationManagersRole()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightToRegistrationManagersRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightToRegistrationManagersRole();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightToContractsResponsible()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightToContractsResponsible", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightToContractsResponsible();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantRightToRegistrationContractsRole()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightToRegistrationContractsRole", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.GrantRightToRegistrationContractsRole();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDocumentTypes()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDocumentTypes();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDocumentKinds()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentKinds", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDocumentKinds();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDefaultRelationTypes()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultRelationTypes", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDefaultRelationTypes();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDefaultContractualRules()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultContractualRules", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDefaultContractualRules();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static global::Sungero.Contracts.IContractsApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultRule", new global::System.Type[]{typeof(global::System.String), typeof(global::Sungero.Core.Enumeration), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
          return (global::Sungero.Contracts.IContractsApprovalRule)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleName, documentFlow, stages});
        }
        else
        {
          return global::Sungero.Contracts.Server.ModuleInitializer.CreateDefaultRule(ruleName, documentFlow, stages);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IApprovalRule CreateDefaultInvoiceRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultInvoiceRule", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::Sungero.Core.Enumeration>)});
          return (global::Sungero.Docflow.IApprovalRule)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{ruleName, stages});
        }
        else
        {
          return global::Sungero.Contracts.Server.ModuleInitializer.CreateDefaultInvoiceRule(ruleName, stages);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDocumentRegisterAndSettingsForContracts()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentRegisterAndSettingsForContracts", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDocumentRegisterAndSettingsForContracts();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static global::Sungero.Docflow.IDocumentRegister CreateLeadNumberedDocumentRegister(global::System.String name, global::System.String index, global::System.Guid entityId)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateLeadNumberedDocumentRegister", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Guid)});
          return (global::Sungero.Docflow.IDocumentRegister)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{name, index, entityId});
        }
        else
        {
          return global::Sungero.Contracts.Server.ModuleInitializer.CreateLeadNumberedDocumentRegister(name, index, entityId);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDocumentRegisterAndSettingsForOutgoingInvoice()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDocumentRegisterAndSettingsForOutgoingInvoice", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDocumentRegisterAndSettingsForOutgoingInvoice();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void GrantOutgoingInvoiceRegistrationRights()
      {
        var __moduleId = new global::System.Guid("f9d15b1c-2784-4c84-8348-1e162d70b988");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Contracts.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantOutgoingInvoiceRegistrationRights", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      ((global::Sungero.Contracts.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GrantOutgoingInvoiceRegistrationRights();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateDefaultApprovalRoles()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateDefaultApprovalRoles", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateDefaultApprovalRoles();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateApprovalRole(global::Sungero.Core.Enumeration roleType, global::System.String description)
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalRole", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration), typeof(global::System.String)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{roleType, description});
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateApprovalRole(roleType, description);
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateApprovalIncInvoicePaidStage()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateApprovalIncInvoicePaidStage", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateApprovalIncInvoicePaidStage();
        }
      }
      /// <redirect project="Sungero.Contracts.Server" type="Sungero.Contracts.Server.ModuleInitializer" />
      internal static void CreateEDocIndex()
      {
        var __typeName = "Sungero.Contracts.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateEDocIndex", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Contracts.Server.ModuleInitializer.CreateEDocIndex();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Contracts.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Contracts.Server.IModuleServerPublicFunctions
  {
    public global::Sungero.Company.IEmployee GetPerformerContractResponsible(global::Sungero.Docflow.IOfficialDocument document)
    {
      return global::Sungero.Contracts.Functions.Module.GetPerformerContractResponsible(document);
    }
  }
}

namespace Sungero.Contracts.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Contracts.Server.IModuleServerPublicFunctions
  {
      private static readonly global::System.Guid JobSendNotificationForExpiringContractsId = global::System.Guid.Parse("86eb396d-180f-428b-aa35-241ca1a1d4ee");

      public void Enqueue_SendNotificationForExpiringContracts()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendNotificationForExpiringContractsId, null);
      }
 
      private static readonly global::System.Guid JobSendTaskForContractMilestonesId = global::System.Guid.Parse("ef1fbe43-58c9-4f41-999e-bb4ae5024e5e");

      public void Enqueue_SendTaskForContractMilestones()
      {      
         global::Sungero.Agent.JobsManager.Enqueue(JobSendTaskForContractMilestonesId, null);
      }
 


  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Contracts.Server.IModuleServerInitializationFunctions
  {
         public global::Sungero.Docflow.IApprovalRule CreateDefaultInvoiceRule(global::System.String ruleName, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Contracts.ModuleInitialization.Module.CreateDefaultInvoiceRule(ruleName, stages);
         }
         public global::Sungero.Contracts.IContractsApprovalRule CreateDefaultRule(global::System.String ruleName, global::Sungero.Core.Enumeration documentFlow, global::System.Collections.Generic.List<global::Sungero.Core.Enumeration> stages)
         {
           return global:: Sungero.Contracts.ModuleInitialization.Module.CreateDefaultRule(ruleName, documentFlow, stages);
         }
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server.ContractsBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Contracts.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string CreateEDocIndex0Query
    {
       get { return resolver.GetQuery("CreateEDocIndex0Query"); }
    }
    public static string SelectLastNotificationDate
    {
       get { return resolver.GetQuery("SelectLastNotificationDate"); }
    }
    public static string SelectDocumentWithSenderTask
    {
       get { return resolver.GetQuery("SelectDocumentWithSenderTask"); }
    }
    public static string DeleteTasksWithoutDocuments
    {
       get { return resolver.GetQuery("DeleteTasksWithoutDocuments"); }
    }
    public static string DeleteTasksWithDocuments
    {
       get { return resolver.GetQuery("DeleteTasksWithDocuments"); }
    }
    public static string AddTask
    {
       get { return resolver.GetQuery("AddTask"); }
    }
    public static string CountNullTasks
    {
       get { return resolver.GetQuery("CountNullTasks"); }
    }
    public static string UpdateLastNotificationDate
    {
       get { return resolver.GetQuery("UpdateLastNotificationDate"); }
    }
    public static string CreateTableForExpiringContracts
    {
       get { return resolver.GetQuery("CreateTableForExpiringContracts"); }
    }
    public static string AddDocumentsToTable
    {
       get { return resolver.GetQuery("AddDocumentsToTable"); }
    }
    public static string DeleteDocumentIdsWithoutTask
    {
       get { return resolver.GetQuery("DeleteDocumentIdsWithoutTask"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Contracts.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

