
// ==================================================================
// Addendum.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class AddendumFilter<T> :
      global::Sungero.Docflow.Server.InternalDocumentBaseFilter<T>
      where T : class, global::Sungero.Docflow.IAddendum
    {
      private global::Sungero.Docflow.IAddendumFilterState filter
      {
        get
        {
          return (Sungero.Docflow.IAddendumFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public AddendumFilter(global::Sungero.Docflow.IAddendumFilterState filter)
      : base(filter)
      {
      }

      protected AddendumFilter()
      {
      }
    }
    public class AddendumSearchDialogModel : global::Sungero.Docflow.Server.InternalDocumentBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> VerificationState { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Content.IAssociatedApplication> AssociatedApplication { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> PreparedBy { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Created { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> OurSignatory { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Company.IDepartment> Department { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IOfficialDocument> LeadingDocument { get; protected set; }


                   public new AddendumVersionsModel Versions { get { return (AddendumVersionsModel)base.Versions; } protected set { base.Versions = value; } }
                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new AddendumTrackingModel Tracking { get { return (AddendumTrackingModel)base.Tracking; } protected set { base.Tracking = value; } }

        }

      public class AddendumVersionsModel : global::Sungero.Docflow.Server.InternalDocumentBaseVersionsModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }
                      public override global::System.String Body { get; protected set; }




         }
      public class AddendumTrackingModel : global::Sungero.Docflow.Server.InternalDocumentBaseTrackingModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }




  public class AddendumFilterForLeadingDocument<TQueryEntity, TSourceEntity>
    : global::Sungero.Docflow.Server.OfficialDocumentFilterForLeadingDocument<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Docflow.IOfficialDocument
    where TSourceEntity : class, global::Sungero.Docflow.IAddendum
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.AddendumLeadingDocumentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("LeadingDocumentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.AddendumLeadingDocumentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).LeadingDocumentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public AddendumFilterForLeadingDocument(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.Docflow.Server.AddendumFilter<global::Sungero.Docflow.IAddendum>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.AddendumFilterForLeadingDocument<global::Sungero.Docflow.IOfficialDocument, global::Sungero.Docflow.IAddendum>), "LeadingDocument")]


  public class Addendum :
    global::Sungero.Docflow.Server.InternalDocumentBase, global::Sungero.Docflow.IAddendum, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("58b9ed35-9c84-46cd-aa79-9b5ef5a82f5d");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.Addendum.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IAddendum, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.Docflow.IAddendumState State
    {
      get { return (global::Sungero.Docflow.IAddendumState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.AddendumState(this);
    }

    public new virtual global::Sungero.Docflow.IAddendumInfo Info
    {
      get { return (global::Sungero.Docflow.IAddendumInfo)base.Info; }
    }

    public new virtual global::Sungero.Docflow.IAddendumAccessRights AccessRights
    {
      get { return (global::Sungero.Docflow.IAddendumAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.Docflow.Server.AddendumAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.Docflow.Server.AddendumFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.Docflow.Shared.AddendumFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.Docflow.AddendumServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.AddendumSharedHandlers(this);
    }









    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Content.IElectronicDocumentVersions> CreateVersionsCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IAddendumVersions>() { RootEntity = this };
    }
    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Docflow.IOfficialDocumentTracking> CreateTrackingCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.Docflow.IAddendumTracking>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.AddendumCreatingFromServerHandler", new object[] { (global::Sungero.Docflow.IAddendum)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.Docflow.AddendumCreatingFromServerHandler((global::Sungero.Docflow.IAddendum)entitySource, this.Info);
    }

    #region Framework events





    #endregion


    public Addendum()
    {
    }

    protected override global::Sungero.Domain.Shared.EntityConvertingFromServerHandler CreateConvertingFromServerHandler(   
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.Docflow.AddendumConvertingFromServerHandler", (global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityConvertingFromServerHandler)instance;

      return new global::Sungero.Docflow.AddendumConvertingFromServerHandler((global::Sungero.Content.IElectronicDocument)entitySource, this.Info);
    }

  }
}

// ==================================================================
// AddendumHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class AddendumLeadingDocumentPropertyFilteringServerHandler<T>
    : global::Sungero.Docflow.OfficialDocumentLeadingDocumentPropertyFilteringServerHandler<T>
    where T : class, global::Sungero.Docflow.IOfficialDocument
  {
    private global::Sungero.Docflow.IAddendum _obj
    {
      get { return (global::Sungero.Docflow.IAddendum)this.Entity; }
    }

    public AddendumLeadingDocumentPropertyFilteringServerHandler(global::Sungero.Docflow.IAddendum entity)
      : base(entity)
    {
    }
  }



  public partial class AddendumFilteringServerHandler<T>
    : global::Sungero.Docflow.InternalDocumentBaseFilteringServerHandler<T>  
    where T : class, global::Sungero.Docflow.IAddendum
  {
    private global::Sungero.Docflow.IAddendumFilterState _filter
    {
      get
      {
        return (Sungero.Docflow.IAddendumFilterState)this.Filter;
      }
    }

    public AddendumFilteringServerHandler(global::Sungero.Docflow.IAddendumFilterState filter)
    : base(filter)
    {
    }

    protected AddendumFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> DocumentRegisterFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentRegister> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentRegisterFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> DocumentKindFiltering(global::System.Linq.IQueryable<Sungero.Docflow.IDocumentKind> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DocumentKindFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> BusinessUnitFiltering(global::System.Linq.IQueryable<Sungero.Company.IBusinessUnit> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.BusinessUnitFiltering(query, e);
              return query;
      }

      public override global::System.Linq.IQueryable<Sungero.Company.IDepartment> DepartmentFiltering(global::System.Linq.IQueryable<Sungero.Company.IDepartment> query, global::Sungero.Domain.FilteringEventArgs e)
      {
        query = base.DepartmentFiltering(query, e);
              return query;
      }


  }

  public partial class AddendumSearchDialogServerHandler : global::Sungero.Docflow.InternalDocumentBaseSearchDialogServerHandler
   {
     private global::Sungero.Docflow.Server.AddendumSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.Docflow.Server.AddendumSearchDialogModel)this.Dialog;
       }
     }

     public AddendumSearchDialogServerHandler(global::Sungero.Docflow.Server.AddendumSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class AddendumServerHandlers : global::Sungero.Docflow.InternalDocumentBaseServerHandlers
  {
    private global::Sungero.Docflow.IAddendum _obj
    {
      get { return (global::Sungero.Docflow.IAddendum)this.Entity; }
    }

    public AddendumServerHandlers(global::Sungero.Docflow.IAddendum entity)
      : base(entity)
    {
    }
  }

  public partial class AddendumCreatingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseCreatingFromServerHandler
  {
    private global::Sungero.Docflow.IAddendum _source
    {
      get { return (global::Sungero.Docflow.IAddendum)this.Source; }
    }

    private global::Sungero.Docflow.IAddendumInfo _info
    {
      get { return (global::Sungero.Docflow.IAddendumInfo)this._Info; }
    }

    public AddendumCreatingFromServerHandler(global::Sungero.Docflow.IAddendum source, global::Sungero.Docflow.IAddendumInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// AddendumEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}

// ==================================================================
// AddendumAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class AddendumAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseAccessRights, Sungero.Docflow.IAddendumAccessRights
  {

    public AddendumAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class AddendumTypeAccessRights : 
    Sungero.Docflow.Server.InternalDocumentBaseTypeAccessRights, Sungero.Docflow.IAddendumAccessRights
  {

    public AddendumTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// AddendumRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class AddendumRepositoryImplementer<T> : 
      global::Sungero.Docflow.Server.InternalDocumentBaseRepositoryImplementer<T>,
      global::Sungero.Docflow.IAddendumRepositoryImplementer<T>
      where T : global::Sungero.Docflow.IAddendum 
    {
       public new global::Sungero.Docflow.IAddendumAccessRights AccessRights
       {
          get { return (global::Sungero.Docflow.IAddendumAccessRights)base.AccessRights; }
       }

       public new global::Sungero.Docflow.IAddendumInfo Info
       {
          get { return (global::Sungero.Docflow.IAddendumInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.Docflow.Server.AddendumTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// AddendumPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
    public class AddendumDocumentRegisterPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentRegisterPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IAddendum
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentRegister>)query;
        var typedState = (global::Sungero.Docflow.IAddendumFilterState)this.State;
        var handlers = new global::Sungero.Docflow.AddendumFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentRegisterFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentRegister>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IAddendum>(query);
      }
    }

    public class AddendumDocumentKindPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDocumentKindPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IAddendum
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Docflow.IDocumentKind>)query;
        var typedState = (global::Sungero.Docflow.IAddendumFilterState)this.State;
        var handlers = new global::Sungero.Docflow.AddendumFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DocumentKindFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Docflow.IDocumentKind>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IAddendum>(query);
      }
    }

    public class AddendumBusinessUnitPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseBusinessUnitPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IAddendum
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IBusinessUnit>)query;
        var typedState = (global::Sungero.Docflow.IAddendumFilterState)this.State;
        var handlers = new global::Sungero.Docflow.AddendumFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.BusinessUnitFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IBusinessUnit>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IAddendum>(query);
      }
    }

    public class AddendumDepartmentPanelNavigationFilter : global::Sungero.Docflow.Server.InternalDocumentBaseDepartmentPanelNavigationFilter
    {
      private global::System.Linq.IQueryable Apply<T>(global::System.Linq.IQueryable query) where T: class, global::Sungero.Docflow.IAddendum
      {
        var typedQuery = (global::System.Linq.IQueryable<global::Sungero.Company.IDepartment>)query;
        var typedState = (global::Sungero.Docflow.IAddendumFilterState)this.State;
        var handlers = new global::Sungero.Docflow.AddendumFilteringServerHandler<T>(typedState);
        var args = new global::Sungero.Domain.FilteringEventArgs();
        var result = handlers.DepartmentFiltering(typedQuery, args);
        if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<global::Sungero.Company.IDepartment>();
        return result;
      }

      public override global::System.Linq.IQueryable Apply(global::System.Linq.IQueryable query)
      {
        return this.Apply<global::Sungero.Docflow.IAddendum>(query);
      }
    }

}

// ==================================================================
// AddendumServerFunctions.g.cs
// ==================================================================

namespace Sungero.Docflow.Server
{
  public partial class AddendumFunctions : global::Sungero.Docflow.Server.InternalDocumentBaseFunctions
  {
    private global::Sungero.Docflow.IAddendum _obj
    {
      get { return (global::Sungero.Docflow.IAddendum)this.Entity; }
    }

    public AddendumFunctions(global::Sungero.Docflow.IAddendum entity) : base(entity) { }
  }
}

// ==================================================================
// AddendumFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Functions
{
  internal static class Addendum
  {
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    internal static  global::Sungero.Docflow.IOfficialDocument GetOfficialDocumentIgnoreAccessRights(global::System.Int64 documentId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.AddendumFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetOfficialDocumentIgnoreAccessRights",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::Sungero.Docflow.IOfficialDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { documentId });
      }
      else
      {
        return global::Sungero.Docflow.Server.AddendumFunctions.GetOfficialDocumentIgnoreAccessRights(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  global::Sungero.Docflow.IAddendum Create()
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.AddendumFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("Create",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] {  }, null);
        return (global::Sungero.Docflow.IAddendum)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] {  });
      }
      else
      {
        return global::Sungero.Docflow.Server.AddendumFunctions.Create();
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Docflow.Structures.Addendum.LeadingDocument GetLeadingDocument(global::System.Int64 documentId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.AddendumFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetLeadingDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
        return (global::Sungero.Docflow.Structures.Addendum.LeadingDocument)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { documentId });
      }
      else
      {
        return global::Sungero.Docflow.Server.AddendumFunctions.GetLeadingDocument(documentId);
      }
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsQuery(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsQuery", new System.Type[] {  });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit> GetBusinessUnits(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetBusinessUnits", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.Company.IBusinessUnit>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    internal static  global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> GetSignatureSettingsWithLeadingDocument(global::Sungero.Docflow.IAddendum addendum, global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting> settings)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetSignatureSettingsWithLeadingDocument", new System.Type[] { typeof(global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>) });
      return (global::System.Linq.IQueryable<global::Sungero.Docflow.ISignatureSetting>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { settings });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    internal static  global::System.Boolean IsCircularAddenda(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsCircularAddenda", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Server" type="Sungero.Docflow.Server.AddendumFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static  void RestoreAddendumRelationToLeadingDocument(global::System.Int64 addendumId)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Server.AddendumFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("RestoreAddendumRelationToLeadingDocument",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::System.Int64) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { addendumId });
      }
      else
      {
    global::Sungero.Docflow.Server.AddendumFunctions.RestoreAddendumRelationToLeadingDocument(addendumId);
      }
    }

    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void FillName(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  global::System.String GetDocumentName(global::Sungero.Docflow.IOfficialDocument document)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.Shared.AddendumFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetDocumentName",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { document });
      }
      else
      {
        return global::Sungero.Docflow.Shared.AddendumFunctions.GetDocumentName(document);
      }
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void RefreshDocumentForm(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("RefreshDocumentForm", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void ChangeDocumentPropertiesAccess(global::Sungero.Docflow.IAddendum addendum, global::System.Boolean isEnabled, global::System.Boolean isRepeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeDocumentPropertiesAccess", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { isEnabled, isRepeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  global::System.String GetLeadDocumentNumber(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetLeadDocumentNumber", new System.Type[] {  });
      return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void ChangeRegistrationPaneVisibility(global::Sungero.Docflow.IAddendum addendum, global::System.Boolean needShow, global::System.Boolean repeatRegister)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("ChangeRegistrationPaneVisibility", new System.Type[] { typeof(global::System.Boolean), typeof(global::System.Boolean) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { needShow, repeatRegister });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  global::System.Boolean IsProjectDocument(global::Sungero.Docflow.IAddendum addendum, global::System.Collections.Generic.List<global::System.Int64> leadingDocumentIds)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("IsProjectDocument", new System.Type[] { typeof(global::System.Collections.Generic.List<global::System.Int64>) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { leadingDocumentIds });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  global::Sungero.Docflow.IProjectBase GetProject(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetProject", new System.Type[] {  });
      return (global::Sungero.Docflow.IProjectBase)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void FillRequiredProperties(global::Sungero.Docflow.IAddendum addendum, System.Collections.Generic.IDictionary<global::System.String, System.Object> properties)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillRequiredProperties", new System.Type[] { typeof(System.Collections.Generic.IDictionary<global::System.String, System.Object>) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { properties });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  global::System.Boolean HasEmptyRequiredProperties(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("HasEmptyRequiredProperties", new System.Type[] {  });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.Docflow.Shared" type="Sungero.Docflow.Shared.AddendumFunctions" />
    internal static  void SetRequiredProperties(global::Sungero.Docflow.IAddendum addendum)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)addendum).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// AddendumServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class AddendumServerPublicFunctions : global::Sungero.Docflow.Server.IAddendumServerPublicFunctions
  {
  }
}

// ==================================================================
// AddendumQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Queries
{
  public class Addendum
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Docflow.Server.Addendum.AddendumQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// AddendumServerHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class AddendumConvertingFromServerHandler : global::Sungero.Docflow.InternalDocumentBaseConvertingFromServerHandler
  { 
    private global::Sungero.Docflow.IAddendumInfo _info
    {
      get { return (global::Sungero.Docflow.IAddendumInfo)this._Info; }
    }

    public AddendumConvertingFromServerHandler(global::Sungero.Content.IElectronicDocument source, global::Sungero.Docflow.IAddendumInfo info)
      : base(source, info)
    {
    }
  }
}
