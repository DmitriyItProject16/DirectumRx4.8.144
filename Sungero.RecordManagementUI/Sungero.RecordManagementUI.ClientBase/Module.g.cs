
// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static void CreateDocument()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocument", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).CreateDocument();
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static void ShowSkippedNumbersReport()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowSkippedNumbersReport", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowSkippedNumbersReport();
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static void ShowAllReports()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowAllReports", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowAllReports();
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> SearchByRegistrationData()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SearchByRegistrationData", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).SearchByRegistrationData();
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetOfficialCorrespondenceWithCounterparty()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOfficialCorrespondenceWithCounterparty", global::System.Array.Empty<global::System.Type>());
        return (global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).GetOfficialCorrespondenceWithCounterparty();
      }
    }
    /// <redirect project="Sungero.RecordManagementUI.ClientBase" type="Sungero.RecordManagementUI.Client.ModuleFunctions" />
    internal static void ShowRecordManagementSettings()
    {
      var __moduleId = new global::System.Guid("51247c94-981f-4bc8-819a-128704b5aa31");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "ClientBase" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ClientBaseNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.RecordManagementUI.ClientBase";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ShowRecordManagementSettings", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.RecordManagementUI.Client.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.ClientBase, __finalModuleMetadatda)).ShowRecordManagementSettings();
      }
    }

    internal static class Remote
    {
      /// <redirect project="Sungero.RecordManagementUI.Server" type="Sungero.RecordManagementUI.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetFilteredRegisteredDocuments(global::System.String registrationNumber, global::System.Nullable<global::System.DateTime> registrationDateFrom, global::System.Nullable<global::System.DateTime> registrationDateTo, global::Sungero.Docflow.IDocumentRegister documentRegister, global::Sungero.Docflow.ICaseFile caseFile, global::Sungero.Company.IEmployee registeredBy)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("51247c94-981f-4bc8-819a-128704b5aa31"),
          "GetFilteredRegisteredDocuments(global::System.String,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>,global::Sungero.Docflow.IDocumentRegister,global::Sungero.Docflow.ICaseFile,global::Sungero.Company.IEmployee)", registrationNumber, registrationDateFrom, registrationDateTo, documentRegister, caseFile, registeredBy);
      }
      /// <redirect project="Sungero.RecordManagementUI.Server" type="Sungero.RecordManagementUI.Server.ModuleFunctions" />
      internal static global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument> GetOfficialCorrespondenceWithCounterparty(global::Sungero.Parties.ICounterparty counterparty, global::System.Nullable<global::System.DateTime> periodBegin, global::System.Nullable<global::System.DateTime> periodEnd)
      {
        return global::Sungero.Domain.Shared.RemoteFunctionExecutor.ExecuteWithResult<global::System.Linq.IQueryable<global::Sungero.Docflow.IOfficialDocument>>(
          global::System.Guid.Parse("51247c94-981f-4bc8-819a-128704b5aa31"),
          "GetOfficialCorrespondenceWithCounterparty(global::Sungero.Parties.ICounterparty,global::System.Nullable<global::System.DateTime>,global::System.Nullable<global::System.DateTime>)", counterparty, periodBegin, periodEnd);
      }

    }
    private static object GetFunctionsContainer()
    {
      return new global::Sungero.RecordManagementUI.Client.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleClientPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Client
{
  public partial class ModuleClientPublicFunctions : global::Sungero.RecordManagementUI.Client.IModuleClientPublicFunctions
  {
  }
}

// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Client
{
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagementUI.Client
{

  public partial class DocumentsToReturnFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState Filter { get; private set; }

    private global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void DocumentsToReturnValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public DocumentsToReturnFolderHandlers(global::Sungero.RecordManagementUI.FolderFilterState.IDocumentsToReturnFilterState filter)
    {
      this.Filter = filter;
    }

  }

  public partial class PowerOfAttorneyListFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState Filter { get; private set; }

    private global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual void PowerOfAttorneyListValidateFilterPanel(global:: Sungero.Domain.Client.ValidateFilterPanelEventArgs e)
    {
    }

    public PowerOfAttorneyListFolderHandlers(global::Sungero.RecordManagementUI.FolderFilterState.IPowerOfAttorneyListFilterState filter)
    {
      this.Filter = filter;
    }

  }

}

