
// ==================================================================
// Blob.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class Blob :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.SmartProcessing.IBlob
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("668418c4-bd08-4aeb-94d7-d0c30869c1a0");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.SmartProcessing.Client.Blob.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.SmartProcessing.IBlob, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.SmartProcessing.IBlobState State
    {
      get
      {
        return (global::Sungero.SmartProcessing.IBlobState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobState(this);
    }

    public new global::Sungero.SmartProcessing.IBlobInfo Info
    {
      get
      {
        return (global::Sungero.SmartProcessing.IBlobInfo)base.Info;
      }
    }

    public new global::Sungero.SmartProcessing.IBlobAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.SmartProcessing.IBlobAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.SmartProcessing.Client.BlobAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FilePath;

        public virtual global::System.String FilePath
        {
          get { return this._FilePath.Value; }
          set { this._FilePath.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _OriginalFileName;

        public virtual global::System.String OriginalFileName
        {
          get { return this._OriginalFileName.Value; }
          set { this._OriginalFileName.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Created;

        public virtual global::System.DateTime? Created
        {
          get { return this._Created.Value; }
          set { this._Created.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?> _Modified;

        public virtual global::System.DateTime? Modified
        {
          get { return this._Modified.Value; }
          set { this._Modified.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FileSize;

        public virtual global::System.String FileSize
        {
          get { return this._FileSize.Value; }
          set { this._FileSize.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _PageCount;

        public virtual global::System.Int32? PageCount
        {
          get { return this._PageCount.Value; }
          set { this._PageCount.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?> _ArioTaskId;

        public virtual global::System.Int32? ArioTaskId
        {
          get { return this._ArioTaskId.Value; }
          set { this._ArioTaskId.Value = value; }
        }
        protected global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?> _ArioTaskStatus;

        public virtual global::Sungero.Core.Enumeration? ArioTaskStatus
        {
          get { return this._ArioTaskStatus.Value; }
          set { this._ArioTaskStatus.Value = value; }
        }


        private static global::Sungero.Domain.Shared.EnumerationItems _ArioTaskStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
          null,
          typeof(global::Sungero.SmartProcessing.Blob.ArioTaskStatus),
          typeof(global::Sungero.SmartProcessing.Client.Blob),
          "ArioTaskStatus");

        public static global::Sungero.Domain.Shared.EnumerationItems ArioTaskStatusItems
        {
          get { return global::Sungero.SmartProcessing.Client.Blob._ArioTaskStatusItems; }
        }

        public virtual global::Sungero.Domain.Shared.EnumerationItems ArioTaskStatusAllowedItems
        {
          get { return global::Sungero.SmartProcessing.Client.Blob.ArioTaskStatusItems; }
        }





        protected global::Sungero.Domain.Client.BinaryDataProperty<global::Sungero.Domain.Client.BinaryData> _Body;

        [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
        public virtual global::Sungero.Domain.Shared.IBinaryData Body
        {
          get { return this._Body.Value; }
          set
          {
            this._Body.Value = (global::Sungero.Domain.Client.BinaryData)value;
            if (value != null)
              this._Body.Value.RootEntity = this;
          }
        }




      protected global::Sungero.Domain.Client.TextProperty _ArioResultJson;

      [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
      public virtual System.String ArioResultJson
      {
        get { return this._ArioResultJson.Value; }
        set { this._ArioResultJson.Value = value; }
      }



    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.SmartProcessing.Client.BlobActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.SmartProcessing.Client.BlobCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.SmartProcessing.Client.BlobAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.SmartProcessing.Client.BlobAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.SmartProcessing.Client.BlobFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.SmartProcessing.Shared.BlobFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.SmartProcessing.BlobClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.SmartProcessing.BlobSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void FilePathChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FilePath, this.FilePath, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).FilePathChanged(args);
    }

    protected void OriginalFileNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OriginalFileName, this.OriginalFileName, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).OriginalFileNameChanged(args);
    }

    protected void ArioResultJsonChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ArioResultJson, this.ArioResultJson, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).ArioResultJsonChanged(args);
    }

    protected void BodyChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.BinaryDataPropertyChangedEventArgs(this.State.Properties.Body, this.Body, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).BodyChanged(args);
    }

    protected void CreatedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Created, this.Created, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).CreatedChanged(args);
    }

    protected void ModifiedChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.DateTimePropertyChangedEventArgs(this.State.Properties.Modified, this.Modified, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).ModifiedChanged(args);
    }

    protected void FileSizeChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FileSize, this.FileSize, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).FileSizeChanged(args);
    }

    protected void PageCountChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.PageCount, this.PageCount, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).PageCountChanged(args);
    }

    protected void ArioTaskIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.ArioTaskId, this.ArioTaskId, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).ArioTaskIdChanged(args);
    }

    protected void ArioTaskStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ArioTaskStatus, this.ArioTaskStatus, this);
     ((global::Sungero.SmartProcessing.IBlobSharedHandlers)this.SharedHandlers).ArioTaskStatusChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FilePathValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FilePath, value, this, this.Info.Properties.FilePath);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).FilePathValueInput(args);
    return args.NewValue;
  }

  protected global::System.String OriginalFileNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.OriginalFileName, value, this, this.Info.Properties.OriginalFileName);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).OriginalFileNameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ArioResultJsonValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.TextValueInputEventArgs(this.ArioResultJson, value, this, this.Info.Properties.ArioResultJson);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).ArioResultJsonValueInput(args);
    return args.NewValue;
  }


  protected global::System.DateTime? CreatedValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Created, value, this, this.Info.Properties.Created);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).CreatedValueInput(args);
    return args.NewValue;
  }

  protected global::System.DateTime? ModifiedValueInputHandler(global::System.DateTime? value)
  {
    var args = new global::Sungero.Presentation.DateTimeValueInputEventArgs(this.Modified, value, this, this.Info.Properties.Modified);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).ModifiedValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FileSizeValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FileSize, value, this, this.Info.Properties.FileSize);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).FileSizeValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? PageCountValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.PageCount, value, this, this.Info.Properties.PageCount);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).PageCountValueInput(args);
    return args.NewValue;
  }

  protected global::System.Int32? ArioTaskIdValueInputHandler(global::System.Int32? value)
  {
    var args = new global::Sungero.Presentation.IntegerValueInputEventArgs(this.ArioTaskId, value, this, this.Info.Properties.ArioTaskId);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).ArioTaskIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Core.Enumeration? ArioTaskStatusValueInputHandler(global::Sungero.Core.Enumeration? value)
  {
    var args = new global::Sungero.Presentation.EnumerationValueInputEventArgs(this.ArioTaskStatus, value, this, this.Info.Properties.ArioTaskStatus);
    ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).ArioTaskStatusValueInput(args);
    return args.NewValue;
  }


  protected global::System.Collections.Generic.IEnumerable<global::Sungero.Core.Enumeration> ArioTaskStatusFilteringHandler()
  {
    return ((global::Sungero.SmartProcessing.BlobClientHandlers)this.Handlers).ArioTaskStatusFiltering(this.ArioTaskStatusAllowedItems);
  }


    #endregion

    #region Constructors



    public Blob()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._FilePath = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FilePath", this);
            this._FilePath.ValueChanged += (sender, e) => { this.FilePathChangedHandler(); };
            this.AddProperty(this._FilePath);

            this._OriginalFileName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("OriginalFileName", this);
            this._OriginalFileName.ValueChanged += (sender, e) => { this.OriginalFileNameChangedHandler(); };
            this.AddProperty(this._OriginalFileName);

            this._Created = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Created", this);
            this._Created.ValueChanged += (sender, e) => { this.CreatedChangedHandler(); };
            this.AddProperty(this._Created);

            this._Modified = new global::Sungero.Domain.Client.SimpleProperty<global::System.DateTime?>("Modified", this);
            this._Modified.ValueChanged += (sender, e) => { this.ModifiedChangedHandler(); };
            this.AddProperty(this._Modified);

            this._FileSize = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FileSize", this);
            this._FileSize.ValueChanged += (sender, e) => { this.FileSizeChangedHandler(); };
            this.AddProperty(this._FileSize);

            this._PageCount = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("PageCount", this);
            this._PageCount.ValueChanged += (sender, e) => { this.PageCountChangedHandler(); };
            this.AddProperty(this._PageCount);

            this._ArioTaskId = new global::Sungero.Domain.Client.SimpleProperty<global::System.Int32?>("ArioTaskId", this);
            this._ArioTaskId.ValueChanged += (sender, e) => { this.ArioTaskIdChangedHandler(); };
            this.AddProperty(this._ArioTaskId);

            this._ArioTaskStatus = new global::Sungero.Domain.Client.EnumSimpleProperty<global::Sungero.Core.Enumeration?>("ArioTaskStatus", this);
            this._ArioTaskStatus.ValueChanged += (sender, e) => { this.ArioTaskStatusChangedHandler(); };
            this.AddProperty(this._ArioTaskStatus);



            this._ArioResultJson = new global::Sungero.Domain.Client.TextProperty("ArioResultJson", this);
            this._ArioResultJson.ValueChanged += (sender, e) => { this.ArioResultJsonChangedHandler(); };
            this.AddProperty(this._ArioResultJson);





            this._Body = new global::Sungero.Domain.Client.BinaryDataProperty<global::Sungero.Domain.Client.BinaryData>("Body", this);
            this._Body.Value = new global::Sungero.Domain.Client.BinaryData() { RootEntity = this };
            this._Body.ValueChanged += (sender, e) => { this.BodyChangedHandler(); };
            this.AddProperty(this._Body);


    }

    #endregion

  }
}

// ==================================================================
// BlobPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class BlobPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.SmartProcessing.IBlob
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {

    }

    public BlobPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// BlobCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class BlobCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.SmartProcessing.IBlob
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public BlobCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public BlobCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public BlobCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public BlobCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// BlobRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{ 
  public class BlobRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.SmartProcessing.IBlobRepositoryImplementer<T>
      where T : global::Sungero.SmartProcessing.IBlob
    {
       public new global::Sungero.SmartProcessing.IBlobAccessRights AccessRights
       {
          get { return (global::Sungero.SmartProcessing.IBlobAccessRights)base.AccessRights; }
       }

       public new global::Sungero.SmartProcessing.IBlobInfo Info
       {
          get { return (global::Sungero.SmartProcessing.IBlobInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.SmartProcessing.Client.BlobTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// BlobAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.SmartProcessing.Client
{
  public class BlobAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.SmartProcessing.IBlobAccessRights
  {

    public BlobAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class BlobTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.SmartProcessing.IBlobAccessRights
  {

    public BlobTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
