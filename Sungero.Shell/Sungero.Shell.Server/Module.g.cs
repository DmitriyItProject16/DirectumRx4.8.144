
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
  public partial class ShellModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a"); }
    }

    public override string Name
    {
      get { return "Sungero.Shell"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.Server.IModuleServerInitializationFunctions, global::Sungero.Shell.Server.ModuleServerInitializationFunctions>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnReviewFilterState, global::Sungero.Shell.Shared.OnReviewFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnSigningFilterState, global::Sungero.Shell.Shared.OnSigningFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnDocumentProcessingFilterState, global::Sungero.Shell.Shared.OnDocumentProcessingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnApprovalFilterState, global::Sungero.Shell.Shared.OnApprovalFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnChekingFilterState, global::Sungero.Shell.Shared.OnChekingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnPrintFilterState, global::Sungero.Shell.Shared.OnPrintFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnReworkFilterState, global::Sungero.Shell.Shared.OnReworkFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnRegisterFilterState, global::Sungero.Shell.Shared.OnRegisterFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.INoticesFilterState, global::Sungero.Shell.Shared.NoticesFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IApprovalFilterState, global::Sungero.Shell.Shared.ApprovalFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IExchangeDocumentProcessingFilterState, global::Sungero.Shell.Shared.ExchangeDocumentProcessingFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnVerificationFilterState, global::Sungero.Shell.Shared.OnVerificationFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.FolderFilterState.IOnAcquaintanceFilterState, global::Sungero.Shell.Shared.OnAcquaintanceFilterState>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.Server.IModuleServerPublicFunctions, global::Sungero.Shell.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Shell.Shared.IModuleSharedPublicFunctions, global::Sungero.Shell.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
  public partial class OnReviewFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnReviewFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnReviewFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnReviewFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnReviewFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnSigningFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnSigningFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnSigningFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnSigningFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnSigningFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnDocumentProcessingFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnDocumentProcessingFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnDocumentProcessingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnDocumentProcessingFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnDocumentProcessingFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnApprovalFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnApprovalFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnApprovalFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnApprovalFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnApprovalFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnChekingFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnChekingFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnChekingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnChekingFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnChekingFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnPrintFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnPrintFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnPrintFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnPrintFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnPrintFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnReworkFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnReworkFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnReworkFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnReworkFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnReworkFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnRegisterFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnRegisterFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnRegisterFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnRegisterFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnRegisterFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class NoticesFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.INoticesFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.INoticesFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public virtual global::System.Boolean IsNoticesVisible()
    {
      return true;
    }


    public NoticesFolderHandlers(global::Sungero.Shell.FolderFilterState.INoticesFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ApprovalFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IApprovalFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IApprovalFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public ApprovalFolderHandlers(global::Sungero.Shell.FolderFilterState.IApprovalFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class ExchangeDocumentProcessingFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IExchangeDocumentProcessingFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IExchangeDocumentProcessingFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public ExchangeDocumentProcessingFolderHandlers(global::Sungero.Shell.FolderFilterState.IExchangeDocumentProcessingFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnVerificationFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnVerificationFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnVerificationFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnVerificationFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnVerificationFilterState filter)
    {
      this.Filter = filter;
    }
  }

  public partial class OnAcquaintanceFolderHandlers
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Shell.FolderFilterState.IOnAcquaintanceFilterState Filter { get; private set; }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public global::System.Boolean _disableUiFiltering { get; protected set; }

    private global::Sungero.Shell.FolderFilterState.IOnAcquaintanceFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }


    public OnAcquaintanceFolderHandlers(global::Sungero.Shell.FolderFilterState.IOnAcquaintanceFilterState filter)
    {
      this.Filter = filter;
    }
  }

}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.PerformerLoadUniqueNames> SetUniquePerformerNames(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.PerformerLoad> performerLoads)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetUniquePerformerNames", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.PerformerLoad>)});
        return (global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.PerformerLoadUniqueNames>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performerLoads});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.SetUniquePerformerNames(performerLoads);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentLoadUniqueNames> SetUniqueDepartmentNames(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentLoad> departmentLoad)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetUniqueDepartmentNames", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentLoad>)});
        return (global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentLoadUniqueNames>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{departmentLoad});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.SetUniqueDepartmentNames(departmentLoad);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::Sungero.Core.Color GetAssignmentCompletionWidgetValueColor(global::System.Int32 value)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentCompletionWidgetValueColor", new global::System.Type[]{typeof(global::System.Int32)});
        return (global::Sungero.Core.Color)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{value});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.GetAssignmentCompletionWidgetValueColor(value);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::System.Int64> GetWidgetDepartmentIds(global::Sungero.Core.Enumeration performer)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetWidgetDepartmentIds", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetWidgetDepartmentIds(performer);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Collections.Generic.List<global::System.Int64> GetWidgetBusinessUnitIds(global::Sungero.Core.Enumeration performer)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetWidgetBusinessUnitIds", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetWidgetBusinessUnitIds(performer);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::Sungero.Company.IEmployee GetAssignmentCompletionUser(global::Sungero.Core.Enumeration performer)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAssignmentCompletionUser", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::Sungero.Company.IEmployee)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAssignmentCompletionUser(performer);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentDisciplineUniqueName> SetUniqueDepartmentDisciplineNames(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentDiscipline> departmentDiscipline)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SetUniqueDepartmentDisciplineNames", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentDiscipline>)});
        return (global::System.Collections.Generic.List<global::Sungero.Shell.Structures.Module.DepartmentDisciplineUniqueName>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{departmentDiscipline});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.SetUniqueDepartmentDisciplineNames(departmentDiscipline);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> GetMyAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> query, global::System.Boolean withSubstitution, global::System.String value)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMyAssignments", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::System.Boolean), typeof(global::System.String)});
        return (global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, withSubstitution, value});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.GetMyAssignments(query, withSubstitution, value);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::Sungero.Shell.Structures.Module.AssignmentChartGroup GetMyFutureAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> query, global::System.Boolean withSubstitution)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMyFutureAssignments", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::System.Boolean)});
        return (global::Sungero.Shell.Structures.Module.AssignmentChartGroup)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, withSubstitution});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.GetMyFutureAssignments(query, withSubstitution);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> FilterMyTodayAssignments(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment> query, global::System.Boolean withSubstitution)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("FilterMyTodayAssignments", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>), typeof(global::System.Boolean)});
        return (global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignment>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, withSubstitution});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.FilterMyTodayAssignments(query, withSubstitution);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> GetSpecificAssignmentsWithCollapsed(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase> query, global::Sungero.Core.Enumeration stageType)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetSpecificAssignmentsWithCollapsed", new global::System.Type[]{typeof(global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase>), typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Linq.IQueryable<global::Sungero.Workflow.IAssignmentBase>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{query, stageType});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetSpecificAssignmentsWithCollapsed(query, stageType);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetDocumentsWithCounterparties(global::Sungero.Parties.ICounterparty counterparty)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetDocumentsWithCounterparties", new global::System.Type[]{typeof(global::Sungero.Parties.ICounterparty)});
        return (global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{counterparty});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.GetDocumentsWithCounterparties(counterparty);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument> GetRespondingEmployeeDocuments(global::Sungero.Company.IEmployee employee)
    {
      var __typeName = "Sungero.Shell.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetRespondingEmployeeDocuments", new global::System.Type[]{typeof(global::Sungero.Company.IEmployee)});
        return (global::System.Linq.IQueryable<global::Sungero.Content.IElectronicDocument>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{employee});
      }
      else
      {
        return global::Sungero.Shell.Server.ModuleFunctions.GetRespondingEmployeeDocuments(employee);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 CheckReadingDocumentBody()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckReadingDocumentBody", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckReadingDocumentBody();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 CheckCreatingDocumentFromTemplate()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckCreatingDocumentFromTemplate", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckCreatingDocumentFromTemplate();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 CheckTaskStart()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckTaskStart", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckTaskStart();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void AbortTask(global::System.Int64 taskId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("AbortTask", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId});
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).AbortTask(taskId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckTaskAbort(global::System.Int64 taskId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckTaskAbort", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId});
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckTaskAbort(taskId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckTaskDelete(global::System.Int64 taskId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckTaskDelete", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{taskId});
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckTaskDelete(taskId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 CheckReportService()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckReportService", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckReportService();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckReportDocumentDelete(global::System.Int64 documentId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckReportDocumentDelete", new global::System.Type[]{typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId});
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckReportDocumentDelete(documentId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int32 CheckModulesVersion(global::System.String version)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckModulesVersion", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Int32)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{version});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckModulesVersion(version);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckWorker()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckWorker", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckWorker();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckExchange()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckExchange", global::System.Array.Empty<global::System.Type>());
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckExchange();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static void CheckSigning(global::System.Int64 documentId, global::System.Int64 certificateId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckSigning", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, certificateId});
      }
      else
      {
    ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckSigning(documentId, certificateId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 GetActiveRegistrationSetting()
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetActiveRegistrationSetting", global::System.Array.Empty<global::System.Type>());
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetActiveRegistrationSetting();
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Int64 CreateDocumentToRegister(global::System.Int64 registrationSettingId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateDocumentToRegister", new global::System.Type[]{typeof(global::System.Int64)});
        return (global::System.Int64)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{registrationSettingId});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateDocumentToRegister(registrationSettingId);
      }
    }
    /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleFunctions" />
    internal static global::System.Boolean CheckRegistration(global::System.Int64 documentId, global::System.Int64 registrationSettingId)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CheckRegistration", new global::System.Type[]{typeof(global::System.Int64), typeof(global::System.Int64)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{documentId, registrationSettingId});
      }
      else
      {
        return ((global::Sungero.Shell.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CheckRegistration(documentId, registrationSettingId);
      }
    }

    /// <redirect project="Sungero.Shell.Shared" type="Sungero.Shell.Shared.ModuleFunctions" />
    internal static global::System.Boolean NeedUnwrapWidgetDepartments(global::Sungero.Core.Enumeration performer)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("NeedUnwrapWidgetDepartments", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer});
      }
      else
      {
        return ((global::Sungero.Shell.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).NeedUnwrapWidgetDepartments(performer);
      }
    }
    /// <redirect project="Sungero.Shell.Shared" type="Sungero.Shell.Shared.ModuleFunctions" />
    internal static global::System.String GetWidgetParameterLocalizedName(global::Sungero.Core.Enumeration performer)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetWidgetParameterLocalizedName", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{performer});
      }
      else
      {
        return ((global::Sungero.Shell.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetWidgetParameterLocalizedName(performer);
      }
    }
    /// <redirect project="Sungero.Shell.Shared" type="Sungero.Shell.Shared.ModuleFunctions" />
    internal static global::System.DateTime GetWidgetBeginPeriod(global::Sungero.Core.Enumeration period)
    {
      var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetWidgetBeginPeriod", new global::System.Type[]{typeof(global::Sungero.Core.Enumeration)});
        return (global::System.DateTime)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{period});
      }
      else
      {
        return ((global::Sungero.Shell.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetWidgetBeginPeriod(period);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Shell.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("fcc573ab-5f4e-4b20-88e8-7b1e11a7a59a");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Shell.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Shell.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Shell.Server" type="Sungero.Shell.Server.ModuleInitializer" />
      internal static void GrantRightOnFolders(global::Sungero.CoreEntities.IRole allUsers)
      {
        var __typeName = "Sungero.Shell.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("GrantRightOnFolders", new global::System.Type[]{typeof(global::Sungero.CoreEntities.IRole)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{allUsers});
        }
        else
        {
      global::Sungero.Shell.Server.ModuleInitializer.GrantRightOnFolders(allUsers);
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Shell.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Shell.Server.IModuleServerPublicFunctions
  {
    public void AbortTask(global::System.Int64 taskId)
    {
global::Sungero.Shell.Functions.Module.AbortTask(taskId);
    }
    public global::System.Int64 CheckCreatingDocumentFromTemplate()
    {
      return global::Sungero.Shell.Functions.Module.CheckCreatingDocumentFromTemplate();
    }
    public void CheckExchange()
    {
global::Sungero.Shell.Functions.Module.CheckExchange();
    }
    public global::System.Int32 CheckModulesVersion(global::System.String version)
    {
      return global::Sungero.Shell.Functions.Module.CheckModulesVersion(version);
    }
    public global::System.Int64 CheckReadingDocumentBody()
    {
      return global::Sungero.Shell.Functions.Module.CheckReadingDocumentBody();
    }
    public global::System.Boolean CheckRegistration(global::System.Int64 documentId, global::System.Int64 registrationSettingId)
    {
      return global::Sungero.Shell.Functions.Module.CheckRegistration(documentId, registrationSettingId);
    }
    public void CheckReportDocumentDelete(global::System.Int64 documentId)
    {
global::Sungero.Shell.Functions.Module.CheckReportDocumentDelete(documentId);
    }
    public global::System.Int64 CheckReportService()
    {
      return global::Sungero.Shell.Functions.Module.CheckReportService();
    }
    public void CheckSigning(global::System.Int64 documentId, global::System.Int64 certificateId)
    {
global::Sungero.Shell.Functions.Module.CheckSigning(documentId, certificateId);
    }
    public void CheckTaskAbort(global::System.Int64 taskId)
    {
global::Sungero.Shell.Functions.Module.CheckTaskAbort(taskId);
    }
    public void CheckTaskDelete(global::System.Int64 taskId)
    {
global::Sungero.Shell.Functions.Module.CheckTaskDelete(taskId);
    }
    public global::System.Int64 CheckTaskStart()
    {
      return global::Sungero.Shell.Functions.Module.CheckTaskStart();
    }
    public void CheckWorker()
    {
global::Sungero.Shell.Functions.Module.CheckWorker();
    }
    public global::System.Int64 CreateDocumentToRegister(global::System.Int64 registrationSettingId)
    {
      return global::Sungero.Shell.Functions.Module.CreateDocumentToRegister(registrationSettingId);
    }
    public global::System.Int64 GetActiveRegistrationSetting()
    {
      return global::Sungero.Shell.Functions.Module.GetActiveRegistrationSetting();
    }
  }
}

namespace Sungero.Shell.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Shell.Server.IModuleServerPublicFunctions
  {

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Shell.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
      public partial class TopLoadedPerformersGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.TopLoadedPerformersGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.TopLoadedPerformersGraphWidgetParameters)this.InnerParameters;
          }
        }

          


          



        public TopLoadedPerformersGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class TopLoadedDepartmentsGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.TopLoadedDepartmentsGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.TopLoadedDepartmentsGraphWidgetParameters)this.InnerParameters;
          }
        }

          


          



        public TopLoadedDepartmentsGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class ActiveAssignmentsDynamicWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.ActiveAssignmentsDynamicWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.ActiveAssignmentsDynamicWidgetParameters)this.InnerParameters;
          }
        }

          



        public ActiveAssignmentsDynamicWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class AssignmentCompletionGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.AssignmentCompletionGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.AssignmentCompletionGraphWidgetParameters)this.InnerParameters;
          }
        }

          



        public AssignmentCompletionGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class AssignmentCompletionDepartmentGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.AssignmentCompletionDepartmentGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.AssignmentCompletionDepartmentGraphWidgetParameters)this.InnerParameters;
          }
        }

          


          



        public AssignmentCompletionDepartmentGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class AssignmentCompletionEmployeeGraphWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.AssignmentCompletionEmployeeGraphWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.AssignmentCompletionEmployeeGraphWidgetParameters)this.InnerParameters;
          }
        }

          


          



        public AssignmentCompletionEmployeeGraphWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

      public partial class MyTodayAssignmentsWidgetHandlers
      {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        protected global::Sungero.Domain.Shared.WidgetParametersBase InnerParameters { get; private set; }

        private global::Sungero.Shell.Shared.MyTodayAssignmentsWidgetParameters _parameters
        {
          get
          {
            return (global::Sungero.Shell.Shared.MyTodayAssignmentsWidgetParameters)this.InnerParameters;
          }
        }

          



        public MyTodayAssignmentsWidgetHandlers(global::Sungero.Domain.Shared.WidgetParametersBase parameters) 
        {
          this.InnerParameters = parameters;
        }
      }

}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server.ShellBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Shell.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Shell.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

