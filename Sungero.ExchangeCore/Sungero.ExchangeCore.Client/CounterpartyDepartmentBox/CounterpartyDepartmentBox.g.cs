
// ==================================================================
// CounterpartyDepartmentBox.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class CounterpartyDepartmentBox :
    global::Sungero.CoreEntities.Client.DatabookEntry, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("06c49e09-4c22-453b-9c96-d55fd38ed048");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBox.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.ExchangeCore.ICounterpartyDepartmentBox, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxState State
    {
      get
      {
        return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyDepartmentBoxState(this);
    }

    public new global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxInfo Info
    {
      get
      {
        return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxInfo)base.Info;
      }
    }

    public new global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxAccessRights(this);
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Name;

        public virtual global::System.String Name
        {
          get { return this._Name.Value; }
          set { this._Name.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _DepartmentId;

        public virtual global::System.String DepartmentId
        {
          get { return this._DepartmentId.Value; }
          set { this._DepartmentId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FtsId;

        public virtual global::System.String FtsId
        {
          get { return this._FtsId.Value; }
          set { this._FtsId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _OrganizationId;

        public virtual global::System.String OrganizationId
        {
          get { return this._OrganizationId.Value; }
          set { this._OrganizationId.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Note;

        public virtual global::System.String Note
        {
          get { return this._Note.Value; }
          set { this._Note.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _Address;

        public virtual global::System.String Address
        {
          get { return this._Address.Value; }
          set { this._Address.Value = value; }
        }
        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _ParentBranchId;

        public virtual global::System.String ParentBranchId
        {
          get { return this._ParentBranchId.Value; }
          set { this._ParentBranchId.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Parties.ICounterparty> _Counterparty;

              public virtual global::Sungero.Parties.ICounterparty Counterparty
              {
              get
              {
                return this._Counterparty.Value as global::Sungero.Parties.ICounterparty;
              }

              set
              {
                (this._Counterparty as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox> _Box;

              public virtual global::Sungero.ExchangeCore.IBusinessUnitBox Box
              {
              get
              {
                return this._Box.Value as global::Sungero.ExchangeCore.IBusinessUnitBox;
              }

              set
              {
                (this._Box as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.ExchangeCore.Shared.CounterpartyDepartmentBoxFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.ExchangeCore.CounterpartyDepartmentBoxSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void DepartmentIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.DepartmentId, this.DepartmentId, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).DepartmentIdChanged(args);
    }

    protected void CounterpartyChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.CounterpartyDepartmentBoxCounterpartyChangedEventArgs(this.State.Properties.Counterparty, this.Counterparty, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).CounterpartyChanged(args);
    }

    protected void BoxChangedHandler()
    {
      var args = new global::Sungero.ExchangeCore.Shared.CounterpartyDepartmentBoxBoxChangedEventArgs(this.State.Properties.Box, this.Box, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).BoxChanged(args);
    }

    protected void FtsIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FtsId, this.FtsId, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).FtsIdChanged(args);
    }

    protected void OrganizationIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OrganizationId, this.OrganizationId, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).OrganizationIdChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }

    protected void AddressChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Address, this.Address, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).AddressChanged(args);
    }

    protected void ParentBranchIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.ParentBranchId, this.ParentBranchId, this);
     ((global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxSharedHandlers)this.SharedHandlers).ParentBranchIdChanged(args);
    }



  protected global::System.String NameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Name, value, this, this.Info.Properties.Name);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).NameValueInput(args);
    return args.NewValue;
  }

  protected global::System.String DepartmentIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.DepartmentId, value, this, this.Info.Properties.DepartmentId);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).DepartmentIdValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Parties.ICounterparty CounterpartyValueInputHandler(global::Sungero.Parties.ICounterparty value)
  {
    var args = new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxCounterpartyValueInputEventArgs(this.Counterparty, value, this, this.Info.Properties.Counterparty);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).CounterpartyValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.ExchangeCore.IBusinessUnitBox BoxValueInputHandler(global::Sungero.ExchangeCore.IBusinessUnitBox value)
  {
    var args = new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxBoxValueInputEventArgs(this.Box, value, this, this.Info.Properties.Box);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).BoxValueInput(args);
    return args.NewValue;
  }

  protected global::System.String FtsIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FtsId, value, this, this.Info.Properties.FtsId);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).FtsIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String OrganizationIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.OrganizationId, value, this, this.Info.Properties.OrganizationId);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).OrganizationIdValueInput(args);
    return args.NewValue;
  }

  protected global::System.String NoteValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Note, value, this, this.Info.Properties.Note);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).NoteValueInput(args);
    return args.NewValue;
  }

  protected global::System.String AddressValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.Address, value, this, this.Info.Properties.Address);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).AddressValueInput(args);
    return args.NewValue;
  }

  protected global::System.String ParentBranchIdValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.ParentBranchId, value, this, this.Info.Properties.ParentBranchId);
    ((global::Sungero.ExchangeCore.CounterpartyDepartmentBoxClientHandlers)this.Handlers).ParentBranchIdValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitCounterpartyNavigationProperty()
              {
                this._Counterparty = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Parties.ICounterparty>("Counterparty", this);
                this._Counterparty.ValueChanged += (sender, e) => { this.CounterpartyChangedHandler(); };
                this.AddProperty(this._Counterparty as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitBoxNavigationProperty()
              {
                this._Box = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>("Box", this);
                this._Box.ValueChanged += (sender, e) => { this.BoxChangedHandler(); };
                this.AddProperty(this._Box as global::Sungero.Domain.Client.IProperty);
              }




    public CounterpartyDepartmentBox()
    {
            this._Name = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Name", this);
            this._Name.ValueChanged += (sender, e) => { this.NameChangedHandler(); };
            this.AddProperty(this._Name);

            this._DepartmentId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("DepartmentId", this);
            this._DepartmentId.ValueChanged += (sender, e) => { this.DepartmentIdChangedHandler(); };
            this.AddProperty(this._DepartmentId);

            this._FtsId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FtsId", this);
            this._FtsId.ValueChanged += (sender, e) => { this.FtsIdChangedHandler(); };
            this.AddProperty(this._FtsId);

            this._OrganizationId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("OrganizationId", this);
            this._OrganizationId.ValueChanged += (sender, e) => { this.OrganizationIdChangedHandler(); };
            this.AddProperty(this._OrganizationId);

            this._Note = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Note", this);
            this._Note.ValueChanged += (sender, e) => { this.NoteChangedHandler(); };
            this.AddProperty(this._Note);

            this._Address = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("Address", this);
            this._Address.ValueChanged += (sender, e) => { this.AddressChangedHandler(); };
            this.AddProperty(this._Address);

            this._ParentBranchId = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("ParentBranchId", this);
            this._ParentBranchId.ValueChanged += (sender, e) => { this.ParentBranchIdChangedHandler(); };
            this.AddProperty(this._ParentBranchId);

            this.InitCounterpartyNavigationProperty();

            this.InitBoxNavigationProperty();








    }

    #endregion

  }
}

// ==================================================================
// CounterpartyDepartmentBoxPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class CounterpartyDepartmentBoxPresenter<T> :
    global::Sungero.Domain.Client.EntityPresenter<T>
    where T : class, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _CounterpartyCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter CounterpartyCollectionPresenter
              {
          get { return this._CounterpartyCollectionPresenter; }
        }
              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _BoxCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter BoxCollectionPresenter
              {
          get { return this._BoxCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
                  this._CounterpartyCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Parties.ICounterparty>(global::System.Guid.Parse("a45e9a6c-973e-4e4d-9ff2-70bcaa429582"));
              this._CounterpartyCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Counterparty");

                  this._BoxCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.ExchangeCore.IBusinessUnitBox>(global::System.Guid.Parse("b6aa01b8-117c-4b91-93e6-e3756d211921"));
              this._BoxCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.ExchangeCore.IBusinessUnitBox>(() => this.Entity.Id, typeof(T), "Box");


    }

    public CounterpartyDepartmentBoxPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// CounterpartyDepartmentBoxCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class CounterpartyDepartmentBoxCollectionPresenter<T> : 
    global::Sungero.Domain.Client.EntityCollectionPresenter<T>
    where T: class, global::Sungero.ExchangeCore.ICounterpartyDepartmentBox
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public CounterpartyDepartmentBoxCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public CounterpartyDepartmentBoxCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public CounterpartyDepartmentBoxCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public CounterpartyDepartmentBoxCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// CounterpartyDepartmentBoxRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{ 
  public class CounterpartyDepartmentBoxRepositoryImplementer<T> : 
      global::Sungero.Domain.Client.RepositoryImplementer<T>,
      global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxRepositoryImplementer<T>
      where T : global::Sungero.ExchangeCore.ICounterpartyDepartmentBox
    {
       public new global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights AccessRights
       {
          get { return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights)base.AccessRights; }
       }

       public new global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxInfo Info
       {
          get { return (global::Sungero.ExchangeCore.ICounterpartyDepartmentBoxInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.ExchangeCore.Client.CounterpartyDepartmentBoxTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// CounterpartyDepartmentBoxAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.ExchangeCore.Client
{
  public class CounterpartyDepartmentBoxAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryAccessRights, Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights
  {

    public CounterpartyDepartmentBoxAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class CounterpartyDepartmentBoxTypeAccessRights : 
    Sungero.CoreEntities.Client.DatabookEntryTypeAccessRights, Sungero.ExchangeCore.ICounterpartyDepartmentBoxAccessRights
  {

    public CounterpartyDepartmentBoxTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
