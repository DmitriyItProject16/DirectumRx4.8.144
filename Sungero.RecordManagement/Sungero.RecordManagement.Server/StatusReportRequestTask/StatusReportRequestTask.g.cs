
// ==================================================================
// StatusReportRequestTask.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class StatusReportRequestTaskFilter<T> :
      global::Sungero.Workflow.Server.TaskFilter<T>
      where T : class, global::Sungero.RecordManagement.IStatusReportRequestTask
    {
      protected new global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState Filter { get; private set; }

      private global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public StatusReportRequestTaskFilter(global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected StatusReportRequestTaskFilter()
      {
      }
    }
    public class StatusReportRequestTaskSearchDialogModel : global::Sungero.Workflow.Server.TaskSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Subject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Author { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Importance { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> Started { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<CommonLibrary.DateRangeValue> MaxDeadline { get; protected set; }



                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.CoreEntities.IRecipient> Assignee { get; protected set; }


                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new StatusReportRequestTaskObserversModel Observers { get { return (StatusReportRequestTaskObserversModel)base.Observers; } protected set { base.Observers = value; } }

        }

      public class StatusReportRequestTaskObserversModel : global::Sungero.Workflow.Server.TaskObserversModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }




  public class StatusReportRequestTaskFilterForAssignee<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.RecordManagement.IStatusReportRequestTask
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.StatusReportRequestTaskAssigneePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("AssigneeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.StatusReportRequestTaskAssigneePropertyFilteringServerHandler<TQueryEntity>(sourceEntity).AssigneeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public StatusReportRequestTaskFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class StatusReportRequestTaskSearchFilterForAssignee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.StatusReportRequestTaskAssigneeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AssigneeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.RecordManagement.StatusReportRequestTaskAssigneeSearchPropertyFilteringServerHandler<TQueryEntity>().AssigneeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public StatusReportRequestTaskSearchFilterForAssignee(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.RecordManagement.Server.StatusReportRequestTaskFilter<global::Sungero.RecordManagement.IStatusReportRequestTask>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.RecordManagement.Server.StatusReportRequestTaskFilterForAssignee<global::Sungero.Company.IEmployee, global::Sungero.RecordManagement.IStatusReportRequestTask>), "Assignee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.RecordManagement.Server.StatusReportRequestTaskSearchFilterForAssignee<global::Sungero.CoreEntities.IRecipient>), "Assignee")]


  public class StatusReportRequestTask :
    global::Sungero.Workflow.Server.Task, global::Sungero.RecordManagement.IStatusReportRequestTask, global::Sungero.Domain.Shared.ISecurableEntity, global::Sungero.Domain.IInternalSecurableEntity
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("c8aed854-ad26-4ee3-88a3-080bc98c12e1");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Server.StatusReportRequestTask.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IStatusReportRequestTask, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Subject; }
      set { this.Subject = value; }
    }

    public new virtual global::Sungero.RecordManagement.IStatusReportRequestTaskState State
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskState(this);
    }

    public new virtual global::Sungero.RecordManagement.IStatusReportRequestTaskInfo Info
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskInfo)base.Info; }
    }

    public new virtual global::Sungero.RecordManagement.IStatusReportRequestTaskAccessRights AccessRights
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Server.StatusReportRequestTaskAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.StatusReportRequestTaskServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.StatusReportRequestTaskSharedHandlers(this);
    }



    private global::System.String _Report;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Report
    {
      get
      {
        return this._Report;
      }

      set
      {
        this.SetPropertyValue("Report", this._Report, value, (propertyValue) => { this._Report = propertyValue; }, this.ReportChangedHandler);
      }
    }
    private global::System.String _ActionItem;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ActionItem
    {
      get
      {
        return this._ActionItem;
      }

      set
      {
        this.SetPropertyValue("ActionItem", this._ActionItem, value, (propertyValue) => { this._ActionItem = propertyValue; }, this.ActionItemChangedHandler);
      }
    }
    private global::System.String _ReportNote;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String ReportNote
    {
      get
      {
        return this._ReportNote;
      }

      set
      {
        this.SetPropertyValue("ReportNote", this._ReportNote, value, (propertyValue) => { this._ReportNote = propertyValue; }, this.ReportNoteChangedHandler);
      }
    }





    private global::Sungero.Company.IEmployee _Assignee;
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get
      {
        return this._Assignee;
      }

      set
      {
        this.SetPropertyValue("Assignee", this._Assignee, value, (propertyValue) => { this._Assignee = propertyValue; }, this.AssigneeChangedHandler);
      }
    }



    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::Sungero.Workflow.ITaskObservers> CreateObserversCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::Sungero.RecordManagement.IStatusReportRequestTaskObservers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.RecordManagement.StatusReportRequestTaskCreatingFromServerHandler", new object[] { (global::Sungero.RecordManagement.IStatusReportRequestTask)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.RecordManagement.StatusReportRequestTaskCreatingFromServerHandler((global::Sungero.RecordManagement.IStatusReportRequestTask)entitySource, this.Info);
    }

    #region Framework events

    protected void ReportChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Report, this.Report, this);
     ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).ReportChanged(args);
    }

    protected void ActionItemChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ActionItem, this.ActionItem, this);
     ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).ActionItemChanged(args);
    }

    protected void ReportNoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.ReportNote, this.ReportNote, this);
     ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).ReportNoteChanged(args);
    }

    protected void AssigneeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskAssigneeChangedEventArgs(this.State.Properties.Assignee, this.Assignee, this);
     ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).AssigneeChanged(args);
    }




    #endregion


    public StatusReportRequestTask()
    {
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IStatusReportRequestTaskDocumentsGroupAttachments DocumentsGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskDocumentsGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IStatusReportRequestTaskAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IStatusReportRequestTaskOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.StatusReportRequestTaskOtherGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).DocumentsGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).DocumentsGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentsGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).DocumentsGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IStatusReportRequestTaskSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }

    }
    #endregion


  }
}

// ==================================================================
// StatusReportRequestTaskHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement
{
  public partial class StatusReportRequestTaskAssigneePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.RecordManagement.IStatusReportRequestTask _obj
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTask)this.Entity; }
    }

    public StatusReportRequestTaskAssigneePropertyFilteringServerHandler(global::Sungero.RecordManagement.IStatusReportRequestTask entity)
      : base(entity)
    {
    }
  }

  public partial class StatusReportRequestTaskAssigneeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AssigneeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public StatusReportRequestTaskAssigneeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class StatusReportRequestTaskFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.RecordManagement.IStatusReportRequestTask
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState Filter { get; private set; }

    private global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public StatusReportRequestTaskFilteringServerHandler(global::Sungero.RecordManagement.IStatusReportRequestTaskFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected StatusReportRequestTaskFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class StatusReportRequestTaskSearchDialogServerHandler : global::Sungero.Workflow.TaskSearchDialogServerHandler
   {
     private global::Sungero.RecordManagement.Server.StatusReportRequestTaskSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.RecordManagement.Server.StatusReportRequestTaskSearchDialogModel)this.Dialog;
       }
     }

     public StatusReportRequestTaskSearchDialogServerHandler(global::Sungero.RecordManagement.Server.StatusReportRequestTaskSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class StatusReportRequestTaskServerHandlers : global::Sungero.Workflow.TaskServerHandlers
  {
    private global::Sungero.RecordManagement.IStatusReportRequestTask _obj
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTask)this.Entity; }
    }

    public StatusReportRequestTaskServerHandlers(global::Sungero.RecordManagement.IStatusReportRequestTask entity)
      : base(entity)
    {
    }
  }

  public partial class StatusReportRequestTaskCreatingFromServerHandler : global::Sungero.Workflow.TaskCreatingFromServerHandler
  {
    private global::Sungero.RecordManagement.IStatusReportRequestTask _source
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTask)this.Source; }
    }

    private global::Sungero.RecordManagement.IStatusReportRequestTaskInfo _info
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskInfo)this._Info; }
    }

    public StatusReportRequestTaskCreatingFromServerHandler(global::Sungero.RecordManagement.IStatusReportRequestTask source, global::Sungero.RecordManagement.IStatusReportRequestTaskInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// StatusReportRequestTaskEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// StatusReportRequestTaskAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class StatusReportRequestTaskAccessRights : 
    Sungero.Workflow.Server.TaskAccessRights, Sungero.RecordManagement.IStatusReportRequestTaskAccessRights
  {

    public StatusReportRequestTaskAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class StatusReportRequestTaskTypeAccessRights : 
    Sungero.Workflow.Server.TaskTypeAccessRights, Sungero.RecordManagement.IStatusReportRequestTaskAccessRights
  {

    public StatusReportRequestTaskTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// StatusReportRequestTaskRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
    public class StatusReportRequestTaskRepositoryImplementer<T> : 
      global::Sungero.Workflow.Server.TaskRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IStatusReportRequestTaskRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IStatusReportRequestTask 
    {
       public new global::Sungero.RecordManagement.IStatusReportRequestTaskAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IStatusReportRequestTaskInfo Info
       {
          get { return (global::Sungero.RecordManagement.IStatusReportRequestTaskInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Server.StatusReportRequestTaskTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// StatusReportRequestTaskPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// StatusReportRequestTaskServerFunctions.g.cs
// ==================================================================

namespace Sungero.RecordManagement.Server
{
  public partial class StatusReportRequestTaskFunctions : global::Sungero.Workflow.Server.TaskFunctions
  {
    private global::Sungero.RecordManagement.IStatusReportRequestTask _obj
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTask)this.Entity; }
    }

    public StatusReportRequestTaskFunctions(global::Sungero.RecordManagement.IStatusReportRequestTask entity) : base(entity) { }
  }
}

// ==================================================================
// StatusReportRequestTaskFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Functions
{
  internal static class StatusReportRequestTask
  {
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(IsPure = true)]
    internal static  global::Sungero.Core.StateView GetStateView(global::Sungero.RecordManagement.IStatusReportRequestTask statusReportRequestTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)statusReportRequestTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetStateView", new System.Type[] {  });
      return (global::Sungero.Core.StateView)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  global::Sungero.RecordManagement.IStatusReportRequestTask CreateStatusReportRequest(global::Sungero.RecordManagement.IActionItemExecutionTask task)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("CreateStatusReportRequest",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionTask) }, null);
        return (global::Sungero.RecordManagement.IStatusReportRequestTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions.CreateStatusReportRequest(task);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    [global::Sungero.Core.RemoteAttribute(PackResultEntityEagerly = true)]
    internal static  global::Sungero.RecordManagement.IStatusReportRequestTask CreateStatusReportRequest(global::Sungero.RecordManagement.IActionItemExecutionAssignment job)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("CreateStatusReportRequest",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IActionItemExecutionAssignment) }, null);
        return (global::Sungero.RecordManagement.IStatusReportRequestTask)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { job });
      }
      else
      {
        return global::Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions.CreateStatusReportRequest(job);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    internal static  void GrantRightToAssignment(global::Sungero.Workflow.ITask task, global::Sungero.Workflow.IAssignment assignment)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GrantRightToAssignment",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.Workflow.ITask), typeof(global::Sungero.Workflow.IAssignment) }, null);
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, assignment });
      }
      else
      {
    global::Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions.GrantRightToAssignment(task, assignment);
      }
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    internal static  global::System.Boolean DocumentInRequredGroup(global::Sungero.RecordManagement.IStatusReportRequestTask statusReportRequestTask, global::Sungero.Docflow.IOfficialDocument document)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)statusReportRequestTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("DocumentInRequredGroup", new System.Type[] { typeof(global::Sungero.Docflow.IOfficialDocument) });
      return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { document });
    }
    /// <redirect project="Sungero.RecordManagement.Server" type="Sungero.RecordManagement.Server.StatusReportRequestTaskFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient> GetTaskAdditionalAssignees(global::Sungero.RecordManagement.IStatusReportRequestTask statusReportRequestTask)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)statusReportRequestTask).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetTaskAdditionalAssignees", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.CoreEntities.IRecipient>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.RecordManagement.Shared" type="Sungero.RecordManagement.Shared.StatusReportRequestTaskFunctions" />
    internal static  global::System.String GetStatusReportRequestSubject(global::Sungero.RecordManagement.IStatusReportRequestTask task, CommonLibrary.LocalizedString beginningSubject)
    {
      var __funcType = Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.RecordManagement.Shared.StatusReportRequestTaskFunctions");
      if (__funcType != null)
      {    
        var __funcMethod = __funcType.GetMethod("GetStatusReportRequestSubject",
          System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic,
          null, new System.Type[] { typeof(global::Sungero.RecordManagement.IStatusReportRequestTask), typeof(CommonLibrary.LocalizedString) }, null);
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, null, new object[] { task, beginningSubject });
      }
      else
      {
        return global::Sungero.RecordManagement.Shared.StatusReportRequestTaskFunctions.GetStatusReportRequestSubject(task, beginningSubject);
      }
    }

  }
}

// ==================================================================
// StatusReportRequestTaskServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class StatusReportRequestTaskServerPublicFunctions : global::Sungero.RecordManagement.Server.IStatusReportRequestTaskServerPublicFunctions
  {
  }
}

// ==================================================================
// StatusReportRequestTaskQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Queries
{
  public class StatusReportRequestTask
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.RecordManagement.Server.StatusReportRequestTask.StatusReportRequestTaskQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}

// ==================================================================
// StatusReportRequestTaskBlock.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public class StatusReportRequestTaskArguments: global::Sungero.Workflow.Server.Route.TaskStartEventArguments<StatusReportRequestTaskBlock, global::Sungero.Workflow.TaskBlock>
  {
    public StatusReportRequestTaskArguments(StatusReportRequestTaskBlock block) : base(block) { }
  }

  public class StatusReportRequestTaskEndBlockEventArguments: global::Sungero.Workflow.Server.Route.TaskEndBlockEventArguments<StatusReportRequestTaskBlock, global::Sungero.Workflow.TaskBlock, Sungero.RecordManagement.IStatusReportRequestTask> 
  {
    public StatusReportRequestTaskEndBlockEventArguments(StatusReportRequestTaskBlock block) : base(block) { }
  }

  public partial class StatusReportRequestTaskBlock : global::Sungero.Workflow.Blocks.TaskBlockWrapper<global::Sungero.Workflow.TaskBlock>    
  {
    public virtual global::Sungero.Company.IEmployee Assignee
    {
      get { return this.GetCustomNavigationProperty<global::Sungero.Company.IEmployee>("Assignee"); }
      set { this.SetCustomNavigationProperty("Assignee", value); }
    }




    public StatusReportRequestTaskBlock(global::Sungero.Workflow.TaskBlock block) : base(block) { }
  }
}

// ==================================================================
// StatusReportRequestTaskChildWrappers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}

// ==================================================================
// StatusReportRequestTaskRouteHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
  public partial class StatusReportRequestTaskRouteHandlers{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected global::Sungero.Workflow.ITask Task { get; private set; }

    private global::Sungero.RecordManagement.IStatusReportRequestTask _obj
    {
      get { return (global::Sungero.RecordManagement.IStatusReportRequestTask)this.Task; }
    }


    protected readonly int _schemeVersion;

    public StatusReportRequestTaskRouteHandlers(global::Sungero.RecordManagement.IStatusReportRequestTask task, int schemeVersion) 
    {
      this.Task = task;
      this._schemeVersion = schemeVersion;
    }


    [global::System.ObsoleteAttribute("Необходимо использовать LayerSchemeVersions")]
    private static class SchemeVersions
    {
      public static readonly int V1 = 1;
}

    }
}

// ==================================================================
// StatusReportRequestTaskBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server.StatusReportRequestTaskBlocks
{
}

// ==================================================================
// StatusReportRequestTaskBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Server
{
}
