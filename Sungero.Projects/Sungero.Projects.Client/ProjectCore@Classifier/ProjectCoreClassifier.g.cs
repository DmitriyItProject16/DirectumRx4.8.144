
// ==================================================================
// ProjectCoreClassifier.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Projects.Client
{
  public class ProjectCoreClassifier :
    global::Sungero.Domain.Client.ChildEntityProxy, global::Sungero.Projects.IProjectCoreClassifier
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("fa6cf309-21c1-4c6f-8221-6ad7d332ea33");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Projects.Client.ProjectCoreClassifier.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Projects.IProjectCoreClassifier, Sungero.Domain.Interfaces"; }
    }

    public new global::Sungero.Projects.IProjectCoreClassifierState State
    {
      get
      {
        return (global::Sungero.Projects.IProjectCoreClassifierState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Projects.Shared.ProjectCoreClassifierState(this);
    }

    public new global::Sungero.Projects.IProjectCoreClassifierInfo Info
    {
      get
      {
        return (global::Sungero.Projects.IProjectCoreClassifierInfo)base.Info;
      }
    }

    protected global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Projects.IProjectCore> _ProjectCore;

    public global::Sungero.Projects.IProjectCore ProjectCore
    {
      get { return this._ProjectCore.Value; }
      set { this._ProjectCore.Value = value; }
    }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.ProjectCore; }
      set { this.ProjectCore = (global::Sungero.Projects.IProjectCore)value; }
    }

        protected global::Sungero.Domain.Client.SimpleProperty<global::System.String> _FolderName;

        public virtual global::System.String FolderName
        {
          get { return this._FolderName.Value; }
          set { this._FolderName.Value = value; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Docflow.IDocumentKind> _DocumentKind;

              public virtual global::Sungero.Docflow.IDocumentKind DocumentKind
              {
              get
              {
                return this._DocumentKind.Value as global::Sungero.Docflow.IDocumentKind;
              }

              set
              {
                (this._DocumentKind as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }



              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.CoreEntities.IFolder> _Folder;

              public virtual global::Sungero.CoreEntities.IFolder Folder
              {
              get
              {
                return this._Folder.Value as global::Sungero.CoreEntities.IFolder;
              }

              set
              {
                (this._Folder as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateHandlers() {
      return new global::Sungero.Projects.ProjectCoreClassifierClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.Projects.ProjectCoreClassifierSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void FolderNameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.FolderName, this.FolderName, this);
     ((global::Sungero.Projects.IProjectCoreClassifierSharedHandlers)this.SharedHandlers).ClassifierFolderNameChanged(args);
    }

    protected void DocumentKindChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectCoreClassifierDocumentKindChangedEventArgs(this.State.Properties.DocumentKind, this.DocumentKind, this);
     ((global::Sungero.Projects.IProjectCoreClassifierSharedHandlers)this.SharedHandlers).ClassifierDocumentKindChanged(args);
    }

    protected void FolderChangedHandler()
    {
      var args = new global::Sungero.Projects.Shared.ProjectCoreClassifierFolderChangedEventArgs(this.State.Properties.Folder, this.Folder, this);
     ((global::Sungero.Projects.IProjectCoreClassifierSharedHandlers)this.SharedHandlers).ClassifierFolderChanged(args);
    }



  protected global::System.String FolderNameValueInputHandler(global::System.String value)
  {
    var args = new global::Sungero.Presentation.StringValueInputEventArgs(this.FolderName, value, this, this.Info.Properties.FolderName);
    ((global::Sungero.Projects.ProjectCoreClassifierClientHandlers)this.Handlers).ClassifierFolderNameValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.Docflow.IDocumentKind DocumentKindValueInputHandler(global::Sungero.Docflow.IDocumentKind value)
  {
    var args = new global::Sungero.Projects.Client.ProjectCoreClassifierDocumentKindValueInputEventArgs(this.DocumentKind, value, this, this.Info.Properties.DocumentKind);
    ((global::Sungero.Projects.ProjectCoreClassifierClientHandlers)this.Handlers).ClassifierDocumentKindValueInput(args);
    return args.NewValue;
  }

  protected global::Sungero.CoreEntities.IFolder FolderValueInputHandler(global::Sungero.CoreEntities.IFolder value)
  {
    var args = new global::Sungero.Projects.Client.ProjectCoreClassifierFolderValueInputEventArgs(this.Folder, value, this, this.Info.Properties.Folder);
    ((global::Sungero.Projects.ProjectCoreClassifierClientHandlers)this.Handlers).ClassifierFolderValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors



              protected virtual void InitDocumentKindNavigationProperty()
              {
                this._DocumentKind = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Docflow.IDocumentKind>("DocumentKind", this);
                this._DocumentKind.ValueChanged += (sender, e) => { this.DocumentKindChangedHandler(); };
                this.AddProperty(this._DocumentKind as global::Sungero.Domain.Client.IProperty);
              }




              protected virtual void InitFolderNavigationProperty()
              {
                this._Folder = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.CoreEntities.IFolder>("Folder", this);
                this._Folder.ValueChanged += (sender, e) => { this.FolderChangedHandler(); };
                this.AddProperty(this._Folder as global::Sungero.Domain.Client.IProperty);
              }




    public ProjectCoreClassifier()
    {
      this._ProjectCore = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Projects.IProjectCore>("ProjectCore", this, true);

            this._FolderName = new global::Sungero.Domain.Client.SimpleProperty<global::System.String>("FolderName", this);
            this._FolderName.ValueChanged += (sender, e) => { this.FolderNameChangedHandler(); };
            this.AddProperty(this._FolderName);

            this.InitDocumentKindNavigationProperty();

            this.InitFolderNavigationProperty();








    }

    #endregion

  }
}
