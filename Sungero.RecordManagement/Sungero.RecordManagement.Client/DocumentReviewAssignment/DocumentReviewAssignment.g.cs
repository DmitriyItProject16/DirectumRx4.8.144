
// ==================================================================
// DocumentReviewAssignment.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class DocumentReviewAssignment :
    global::Sungero.Workflow.Client.Assignment, global::Sungero.RecordManagement.IDocumentReviewAssignment
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("50e39d87-4fc6-4847-8bad-20847b9ba020");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.RecordManagement.Client.DocumentReviewAssignment.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.RecordManagement.IDocumentReviewAssignment, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Subject; }
        set { this.Subject = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Subject"; }
      }


    public new global::Sungero.RecordManagement.IDocumentReviewAssignmentState State
    {
      get
      {
        return (global::Sungero.RecordManagement.IDocumentReviewAssignmentState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentState(this);
    }

    public new global::Sungero.RecordManagement.IDocumentReviewAssignmentInfo Info
    {
      get
      {
        return (global::Sungero.RecordManagement.IDocumentReviewAssignmentInfo)base.Info;
      }
    }

    public new global::Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights AccessRights
    {
      get
      {
        return (global::Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentAccessRights(this);
    }


        private static global::Sungero.Domain.Shared.EnumerationItems _ResultItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::Sungero.Workflow.Client.Assignment.ResultItems,
          typeof(global::Sungero.RecordManagement.DocumentReviewAssignment.Result),
          typeof(global::Sungero.RecordManagement.Client.DocumentReviewAssignment),
          "Result");

        public static new global::Sungero.Domain.Shared.EnumerationItems ResultItems
        {
          get { return global::Sungero.RecordManagement.Client.DocumentReviewAssignment._ResultItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems ResultAllowedItems
        {
          get { return global::Sungero.RecordManagement.Client.DocumentReviewAssignment.ResultItems; }
        }




              protected global::Sungero.Domain.Client.INavigationProperty<global::Sungero.Company.IEmployee> _Addressee;

              public virtual global::Sungero.Company.IEmployee Addressee
              {
              get
              {
                return this._Addressee.Value as global::Sungero.Company.IEmployee;
              }

              set
              {
                (this._Addressee as global::Sungero.Domain.Client.IProperty).Value = value;
              }
            }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewAssignmentClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::Sungero.RecordManagement.DocumentReviewAssignmentSharedHandlers(this);
    }

    #endregion

    #region Framework events

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).AddresseeChanged(args);
    }



  protected global::Sungero.Company.IEmployee AddresseeValueInputHandler(global::Sungero.Company.IEmployee value)
  {
    var args = new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentAddresseeValueInputEventArgs(this.Addressee, value, this, this.Info.Properties.Addressee);
    ((global::Sungero.RecordManagement.DocumentReviewAssignmentClientHandlers)this.Handlers).AddresseeValueInput(args);
    return args.NewValue;
  }



    #endregion

    #region Constructors








              protected virtual void InitAddresseeNavigationProperty()
              {
                this._Addressee = new global::Sungero.Domain.Client.NavigationProperty<global::Sungero.Company.IEmployee>("Addressee", this);
                this._Addressee.ValueChanged += (sender, e) => { this.AddresseeChangedHandler(); };
                this.AddProperty(this._Addressee as global::Sungero.Domain.Client.IProperty);
              }




    public DocumentReviewAssignment()
    {

            this.InitAddresseeNavigationProperty();








      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentCreated += this.AttachmentCreatedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentAdded += this.AttachmentAddedHandler;
      ((global::Sungero.Workflow.Interfaces.IWorkflowEntity)this).AttachmentDeleted += this.AttachmentDeletedHandler;


    }

    #endregion

    #region Workflow attachments
    public virtual global::Sungero.RecordManagement.IDocumentReviewAssignmentDocumentForReviewGroupAttachments DocumentForReviewGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentDocumentForReviewGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewAssignmentAddendaGroupAttachments AddendaGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentAddendaGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewAssignmentOtherGroupAttachments OtherGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentOtherGroupAttachments(this);
      }
    }
    public virtual global::Sungero.RecordManagement.IDocumentReviewAssignmentResolutionGroupAttachments ResolutionGroup
    {
      get
      {
        return new global::Sungero.RecordManagement.Shared.DocumentReviewAssignmentResolutionGroupAttachments(this);
      }
    }


    private void AttachmentCreatedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentCreatedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).DocumentForReviewGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).OtherGroupCreated(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).ResolutionGroupCreated(e);
        return;
      }

    }

    private void AttachmentAddedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentAddedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).DocumentForReviewGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).OtherGroupAdded(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).ResolutionGroupAdded(e);
        return;
      }

    }

    private void AttachmentDeletedHandler(object sender, global::Sungero.Workflow.Interfaces.AttachmentDeletedEventArgs e)
    {
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "DocumentForReviewGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).DocumentForReviewGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "AddendaGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).AddendaGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "OtherGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).OtherGroupDeleted(e);
        return;
      }
      if (((global::Sungero.Workflow.Interfaces.IInternalAttachmentEventArgs)e).GroupName == "ResolutionGroup")
      {
        ((global::Sungero.RecordManagement.IDocumentReviewAssignmentSharedHandlers)this.SharedHandlers).ResolutionGroupDeleted(e);
        return;
      }

    }
    #endregion


  }
}

// ==================================================================
// DocumentReviewAssignmentPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class DocumentReviewAssignmentPresenter<T> :
    global::Sungero.Workflow.Client.AssignmentPresenter<T>
    where T : class, global::Sungero.RecordManagement.IDocumentReviewAssignment
  {
    #region Fields and properties

          private global::System.Windows.Input.ICommand _InformedCommand;

          public global::System.Windows.Input.ICommand InformedCommand
          {
            get
            {
              if (this._InformedCommand == null)
                  this._InformedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Informed", this, this.Informed, this.CanInformed) { IsEmptyParameterAllowed = true };
              return this._InformedCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ForwardCommand;

          public global::System.Windows.Input.ICommand ForwardCommand
          {
            get
            {
              if (this._ForwardCommand == null)
                  this._ForwardCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("Forward", this, this.Forward, this.CanForward) { IsEmptyParameterAllowed = true };
              return this._ForwardCommand;
            }
          }
          private global::System.Windows.Input.ICommand _CreateActionItemCommand;

          public global::System.Windows.Input.ICommand CreateActionItemCommand
          {
            get
            {
              if (this._CreateActionItemCommand == null)
                  this._CreateActionItemCommand = new global::Sungero.Domain.Client.SingleEntityCommand<T>("CreateActionItem", this, this.CreateActionItem, this.CanCreateActionItem) { IsEmptyParameterAllowed = true };
              return this._CreateActionItemCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ActionItemsSentCommand;

          public global::System.Windows.Input.ICommand ActionItemsSentCommand
          {
            get
            {
              if (this._ActionItemsSentCommand == null)
                  this._ActionItemsSentCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("ActionItemsSent", this, this.ActionItemsSent, this.CanActionItemsSent) { IsEmptyParameterAllowed = true };
              return this._ActionItemsSentCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DocsReworkCommand;

          public global::System.Windows.Input.ICommand DocsReworkCommand
          {
            get
            {
              if (this._DocsReworkCommand == null)
                  this._DocsReworkCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("DocsRework", this, this.DocsRework, this.CanDocsRework) { IsEmptyParameterAllowed = true };
              return this._DocsReworkCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DraftResReworkCommand;

          public global::System.Windows.Input.ICommand DraftResReworkCommand
          {
            get
            {
              if (this._DraftResReworkCommand == null)
                  this._DraftResReworkCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("DraftResRework", this, this.DraftResRework, this.CanDraftResRework) { IsEmptyParameterAllowed = true };
              return this._DraftResReworkCommand;
            }
          }
          private global::System.Windows.Input.ICommand _DraftResApproveCommand;

          public global::System.Windows.Input.ICommand DraftResApproveCommand
          {
            get
            {
              if (this._DraftResApproveCommand == null)
                  this._DraftResApproveCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("DraftResApprove", this, this.DraftResApprove, this.CanDraftResApprove) { IsEmptyParameterAllowed = true };
              return this._DraftResApproveCommand;
            }
          }
          private global::System.Windows.Input.ICommand _ResPassedCommand;

          public global::System.Windows.Input.ICommand ResPassedCommand
          {
            get
            {
              if (this._ResPassedCommand == null)
                  this._ResPassedCommand = new global::Sungero.Workflow.Client.SingleAssignmentCommand<T>("ResPassed", this, this.ResPassed, this.CanResPassed) { IsEmptyParameterAllowed = true };
              return this._ResPassedCommand;
            }
          }




    #endregion

    #region Methods

              private bool CanInformed(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanInformed(args);
              }

              private void Informed(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Informed);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).Informed(args);
              }
              private bool CanForward(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanForward(args);
              }

              private void Forward(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.Forward);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).Forward(args);
              }
              private bool CanCreateActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfCanExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanCreateActionItem(args);
              }

              private void CreateActionItem(T entity)
              {
                var args = new global::Sungero.Domain.Client.WpfExecuteActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, this, entity.Info.Actions.CreateActionItem);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CreateActionItem(args);
              }
              private bool CanActionItemsSent(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanActionItemsSent(args);
              }

              private void ActionItemsSent(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.ActionItemsSent);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).ActionItemsSent(args);
              }
              private bool CanDocsRework(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanDocsRework(args);
              }

              private void DocsRework(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.DocsRework);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).DocsRework(args);
              }
              private bool CanDraftResRework(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanDraftResRework(args);
              }

              private void DraftResRework(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.DraftResRework);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).DraftResRework(args);
              }
              private bool CanDraftResApprove(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanDraftResApprove(args);
              }

              private void DraftResApprove(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.DraftResApprove);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).DraftResApprove(args);
              }
              private bool CanResPassed(T entity)
              {
                var args = new global::Sungero.Workflow.Client.CanExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity);
                return ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).CanResPassed(args);
              }

              private void ResPassed(T entity)
              {
                var args = new global::Sungero.Workflow.Client.ExecuteResultActionArgs(global::Sungero.Domain.Shared.FormType.Card, entity, entity.Info.Actions.ResPassed);
                ((Sungero.RecordManagement.Client.DocumentReviewAssignmentActions)(entity as Sungero.RecordManagement.Client.DocumentReviewAssignment).ActionsHandlers).ResPassed(args);
              }


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion

              protected global::Sungero.Domain.Client.IEntityCollectionPresenter _AddresseeCollectionPresenter;
              public global::Sungero.Domain.Client.IEntityCollectionPresenter AddresseeCollectionPresenter
              {
          get { return this._AddresseeCollectionPresenter; }
        }



    #region Constructors

    private void Init()
    {
              this._AuthorCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Author");

              this._PerformerCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "Performer");

              this._TaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "Task");

              this._MainTaskCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Workflow.ITask>(() => this.Entity.Id, typeof(T), "MainTask");

              this._CompletedByCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.CoreEntities.IUser>(() => this.Entity.Id, typeof(T), "CompletedBy");

                  this._AddresseeCollectionPresenter = this.CreateCollectionPresenterForNavigationProperty<global::Sungero.Company.IEmployee>(global::System.Guid.Parse("3e90d081-8576-416f-be8a-6232a5d0dd9f"));
              this._AddresseeCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(T), "Addressee");


    }

    public DocumentReviewAssignmentPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// DocumentReviewAssignmentCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class DocumentReviewAssignmentCollectionPresenter<T> : 
    global::Sungero.Workflow.Client.AssignmentCollectionPresenter<T>
    where T: class, global::Sungero.RecordManagement.IDocumentReviewAssignment
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public DocumentReviewAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public DocumentReviewAssignmentCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public DocumentReviewAssignmentCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public DocumentReviewAssignmentCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// DocumentReviewAssignmentRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{ 
  public class DocumentReviewAssignmentRepositoryImplementer<T> : 
      global::Sungero.Workflow.Client.AssignmentRepositoryImplementer<T>,
      global::Sungero.RecordManagement.IDocumentReviewAssignmentRepositoryImplementer<T>
      where T : global::Sungero.RecordManagement.IDocumentReviewAssignment
    {
       public new global::Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights AccessRights
       {
          get { return (global::Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights)base.AccessRights; }
       }

       public new global::Sungero.RecordManagement.IDocumentReviewAssignmentInfo Info
       {
          get { return (global::Sungero.RecordManagement.IDocumentReviewAssignmentInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.RecordManagement.Client.DocumentReviewAssignmentTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// DocumentReviewAssignmentAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
  public class DocumentReviewAssignmentAccessRights : 
    Sungero.Workflow.Client.AssignmentAccessRights, Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights
  {

    public DocumentReviewAssignmentAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class DocumentReviewAssignmentTypeAccessRights : 
    Sungero.Workflow.Client.AssignmentTypeAccessRights, Sungero.RecordManagement.IDocumentReviewAssignmentAccessRights
  {

    public DocumentReviewAssignmentTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// DocumentReviewAssignmentBlocksInfo.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.RecordManagement.Client
{
}
