
// ==================================================================
// PowerOfAttorneyServiceConnection.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
    public class PowerOfAttorneyServiceConnectionFilter<T> :
      global::Sungero.Domain.EntityFilterBase<T>
      where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
    {
      protected new global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState Filter { get; private set; }

      private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState filter
      {
        get
        {
          return this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public PowerOfAttorneyServiceConnectionFilter(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState filter)
      : base()
      {
        this.Filter = filter;
      }

      protected PowerOfAttorneyServiceConnectionFilter()
      {
      }
    }
      public class PowerOfAttorneyServiceConnectionUiFilter<T> :
        global::Sungero.Domain.EntityUiFilterBase<T>
        where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class PowerOfAttorneyServiceConnectionSearchDialogModel : global::Sungero.CoreEntities.Server.DatabookEntrySearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }



                  public virtual global::System.String OrganizationId { get; protected set; }
                  public virtual global::System.String Name { get; protected set; }
                  public virtual global::System.String Note { get; protected set; }


                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Company.IBusinessUnit> BusinessUnit { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp> ServiceApp { get; protected set; }
                  public virtual global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> ConnectionStatus { get; protected set; }


        }




  public class PowerOfAttorneyServiceConnectionFilterForBusinessUnit<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
    where TSourceEntity : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionBusinessUnitPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("BusinessUnitFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionBusinessUnitPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).BusinessUnitFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneyServiceConnectionFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PowerOfAttorneyServiceConnectionSearchFilterForBusinessUnit<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IBusinessUnit
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionBusinessUnitSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("BusinessUnitSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionBusinessUnitSearchPropertyFilteringServerHandler<TQueryEntity>().BusinessUnitSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneyServiceConnectionSearchFilterForBusinessUnit(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PowerOfAttorneyServiceConnectionFilterForServiceApp<TQueryEntity, TSourceEntity>
    : global::Sungero.Domain.EntityPropertyFilterBase<TQueryEntity, TSourceEntity>
    where TQueryEntity : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp
    where TSourceEntity : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionServiceAppPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity });
        var methodInfo = genericType.GetMethod("ServiceAppFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionServiceAppPropertyFilteringServerHandler<TQueryEntity>(sourceEntity).ServiceAppFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneyServiceConnectionFilterForServiceApp(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class PowerOfAttorneyServiceConnectionSearchFilterForServiceApp<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionServiceAppSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("ServiceAppSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionServiceAppSearchPropertyFilteringServerHandler<TQueryEntity>().ServiceAppSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public PowerOfAttorneyServiceConnectionSearchFilterForServiceApp(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.Filter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionFilter<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection>))]
  [global::Sungero.Domain.UiFilter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionUiFilter<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection>))]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection>), "BusinessUnit")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionSearchFilterForBusinessUnit<global::Sungero.Company.IBusinessUnit>), "BusinessUnit")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionFilterForServiceApp<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection>), "ServiceApp")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionSearchFilterForServiceApp<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp>), "ServiceApp")]


  public class PowerOfAttorneyServiceConnection :
    global::Sungero.CoreEntities.Server.DatabookEntry, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("bc50cd7f-9a13-4d02-aa8b-fcc4d76c25d8");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnection.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionState State
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.PowerOfAttorneyCore.Shared.PowerOfAttorneyServiceConnectionState(this);
    }

    public new virtual global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo Info
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo)base.Info; }
    }

    public new virtual global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights AccessRights
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::Sungero.PowerOfAttorneyCore.Shared.PowerOfAttorneyServiceConnectionFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionSharedHandlers(this);
    }

    private global::System.String _OrganizationId;
    public virtual global::System.String OrganizationId
    {
      get
      {
        return this._OrganizationId;
      }

      set
      {
        this.SetPropertyValue("OrganizationId", this._OrganizationId, value, (propertyValue) => { this._OrganizationId = propertyValue; }, this.OrganizationIdChangedHandler);
      }
    }
    private global::System.String _Name;
    public virtual global::System.String Name
    {
      get
      {
        return this._Name;
      }

      set
      {
        this.SetPropertyValue("Name", this._Name, value, (propertyValue) => { this._Name = propertyValue; }, this.NameChangedHandler);
      }
    }



    private global::System.String _Note;
    [global::Sungero.Domain.Shared.DoNotSavePreviousValue]
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }




    private static global::Sungero.Domain.Shared.EnumerationItems _ConnectionStatusItems = new global::Sungero.Domain.Shared.EnumerationItems(
      null,
      typeof(global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnection.ConnectionStatus),
      typeof(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnection),
      "ConnectionStatus");

    public static global::Sungero.Domain.Shared.EnumerationItems ConnectionStatusItems
    {
      get { return global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnection._ConnectionStatusItems; }
    }

    public virtual global::Sungero.Domain.Shared.EnumerationItems ConnectionStatusAllowedItems
    {
      get { return global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnection.ConnectionStatusItems; }
    }

    private global::Sungero.Core.Enumeration? _ConnectionStatus;

    public virtual global::Sungero.Core.Enumeration? ConnectionStatus
    {
      get { return this._ConnectionStatus; }
      set { this.SetEnumPropertyValue("ConnectionStatus", this._ConnectionStatus, value, (propertyValue) => { this._ConnectionStatus = propertyValue; }, this.ConnectionStatusChangedHandler, this.ConnectionStatusAllowedItems); }
    }


    private global::Sungero.Company.IBusinessUnit _BusinessUnit;
    public virtual global::Sungero.Company.IBusinessUnit BusinessUnit
    {
      get
      {
        return this._BusinessUnit;
      }

      set
      {
        this.SetPropertyValue("BusinessUnit", this._BusinessUnit, value, (propertyValue) => { this._BusinessUnit = propertyValue; }, this.BusinessUnitChangedHandler);
      }
    }
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp _ServiceApp;
    public virtual global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp ServiceApp
    {
      get
      {
        return this._ServiceApp;
      }

      set
      {
        this.SetPropertyValue("ServiceApp", this._ServiceApp, value, (propertyValue) => { this._ServiceApp = propertyValue; }, this.ServiceAppChangedHandler);
      }
    }




    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionCreatingFromServerHandler", new object[] { (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::Sungero.PowerOfAttorneyCore.PowerOfAttorneyServiceConnectionCreatingFromServerHandler((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)entitySource, this.Info);
    }

    #region Framework events

    protected void BusinessUnitChangedHandler()
    {
      var args = new global::Sungero.PowerOfAttorneyCore.Shared.PowerOfAttorneyServiceConnectionBusinessUnitChangedEventArgs(this.State.Properties.BusinessUnit, this.BusinessUnit, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).BusinessUnitChanged(args);
    }

    protected void ServiceAppChangedHandler()
    {
      var args = new global::Sungero.PowerOfAttorneyCore.Shared.PowerOfAttorneyServiceConnectionServiceAppChangedEventArgs(this.State.Properties.ServiceApp, this.ServiceApp, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).ServiceAppChanged(args);
    }

    protected void OrganizationIdChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.OrganizationId, this.OrganizationId, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).OrganizationIdChanged(args);
    }

    protected void ConnectionStatusChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.EnumerationPropertyChangedEventArgs(this.State.Properties.ConnectionStatus, this.ConnectionStatus, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).ConnectionStatusChanged(args);
    }

    protected void NameChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Name, this.Name, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).NameChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.TextPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionSharedHandlers)this.SharedHandlers).NoteChanged(args);
    }



    #endregion


    public PowerOfAttorneyServiceConnection()
    {
    }

  }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore
{
  public partial class PowerOfAttorneyServiceConnectionBusinessUnitPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection _obj
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> BusinessUnitFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyServiceConnectionBusinessUnitPropertyFilteringServerHandler(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection entity)
      : base(entity)
    {
    }
  }

  public partial class PowerOfAttorneyServiceConnectionBusinessUnitSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IBusinessUnit
  {

    public virtual global::System.Linq.IQueryable<T> BusinessUnitSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyServiceConnectionBusinessUnitSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class PowerOfAttorneyServiceConnectionServiceAppPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.EntityPropertyFilteringServerHandler
    where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp
  {
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection _obj
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)this.Entity; }
    }

    public virtual global::System.Linq.IQueryable<T> ServiceAppFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyServiceConnectionServiceAppPropertyFilteringServerHandler(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection entity)
      : base(entity)
    {
    }
  }

  public partial class PowerOfAttorneyServiceConnectionServiceAppSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceApp
  {

    public virtual global::System.Linq.IQueryable<T> ServiceAppSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public PowerOfAttorneyServiceConnectionServiceAppSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



  public partial class PowerOfAttorneyServiceConnectionFilteringServerHandler<T>
    : global::Sungero.Domain.EntityFilteringServerHandler<T>  
    where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
  {
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    protected new global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState Filter { get; private set; }

    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState _filter
    {
      get
      {
        return this.Filter;
      }
    }

    public PowerOfAttorneyServiceConnectionFilteringServerHandler(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionFilterState filter)
    : base()
    {
      this.Filter = filter;
    }

    protected PowerOfAttorneyServiceConnectionFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      return query;
    }


  }

  public partial class PowerOfAttorneyServiceConnectionUiFilteringServerHandler<T>
    : global::Sungero.Domain.EntityUiFilteringServerHandler<T>
    where T : class, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class PowerOfAttorneyServiceConnectionSearchDialogServerHandler : global::Sungero.CoreEntities.DatabookEntrySearchDialogServerHandler
   {
     private global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionSearchDialogModel _dialog
     {
       get
       {
         return (global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionSearchDialogModel)this.Dialog;
       }
     }

     public PowerOfAttorneyServiceConnectionSearchDialogServerHandler(global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class PowerOfAttorneyServiceConnectionServerHandlers : global::Sungero.CoreEntities.DatabookEntryServerHandlers
  {
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection _obj
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)this.Entity; }
    }

    public PowerOfAttorneyServiceConnectionServerHandlers(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection entity)
      : base(entity)
    {
    }
  }

  public partial class PowerOfAttorneyServiceConnectionCreatingFromServerHandler : global::Sungero.CoreEntities.DatabookEntryCreatingFromServerHandler
  {
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection _source
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)this.Source; }
    }

    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo _info
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo)this._Info; }
    }

    public PowerOfAttorneyServiceConnectionCreatingFromServerHandler(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection source, global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// PowerOfAttorneyServiceConnectionEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
}

// ==================================================================
// PowerOfAttorneyServiceConnectionAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
  public class PowerOfAttorneyServiceConnectionAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryAccessRights, Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights
  {

    public PowerOfAttorneyServiceConnectionAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class PowerOfAttorneyServiceConnectionTypeAccessRights : 
    Sungero.CoreEntities.Server.DatabookEntryTypeAccessRights, Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights
  {

    public PowerOfAttorneyServiceConnectionTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
    public class PowerOfAttorneyServiceConnectionRepositoryImplementer<T> : 
      global::Sungero.Domain.RepositoryImplementer<T>,
      global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionRepositoryImplementer<T>
      where T : global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection 
    {
       public new global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights AccessRights
       {
          get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionAccessRights)base.AccessRights; }
       }

       public new global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo Info
       {
          get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnectionInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionPanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
}

// ==================================================================
// PowerOfAttorneyServiceConnectionServerFunctions.g.cs
// ==================================================================

namespace Sungero.PowerOfAttorneyCore.Server
{
  public partial class PowerOfAttorneyServiceConnectionFunctions : global::Sungero.CoreEntities.Server.DatabookEntryFunctions
  {
    private global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection _obj
    {
      get { return (global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection)this.Entity; }
    }

    public PowerOfAttorneyServiceConnectionFunctions(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection entity) : base(entity) { }
  }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Functions
{
  internal static class PowerOfAttorneyServiceConnection
  {
    /// <redirect project="Sungero.PowerOfAttorneyCore.Server" type="Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnectionFunctions" />
    internal static  global::System.Collections.Generic.List<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection> GetDuplicates(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection powerOfAttorneyServiceConnection)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorneyServiceConnection).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("GetDuplicates", new System.Type[] {  });
      return (global::System.Collections.Generic.List<global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

    /// <redirect project="Sungero.PowerOfAttorneyCore.Shared" type="Sungero.PowerOfAttorneyCore.Shared.PowerOfAttorneyServiceConnectionFunctions" />
    internal static  void FillName(global::Sungero.PowerOfAttorneyCore.IPowerOfAttorneyServiceConnection powerOfAttorneyServiceConnection)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)powerOfAttorneyServiceConnection).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("FillName", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Server
{
  public class PowerOfAttorneyServiceConnectionServerPublicFunctions : global::Sungero.PowerOfAttorneyCore.Server.IPowerOfAttorneyServiceConnectionServerPublicFunctions
  {
  }
}

// ==================================================================
// PowerOfAttorneyServiceConnectionQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.PowerOfAttorneyCore.Queries
{
  public class PowerOfAttorneyServiceConnection
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.PowerOfAttorneyCore.Server.PowerOfAttorneyServiceConnection.PowerOfAttorneyServiceConnectionQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
