
// ==================================================================
// IncomingDocumentBaseAddressees.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
  public class IncomingDocumentBaseAddresseesFilterForAddressee<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Company.IEmployee
    where TSourceEntity : class, global::Sungero.Docflow.IIncomingDocumentBaseAddressees
    where TRootEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.IncomingDocumentBaseAddresseesAddresseePropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity, rootEntity });
        var methodInfo = genericType.GetMethod("AddresseesAddresseeFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseesAddresseePropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).AddresseesAddresseeFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseAddresseesFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseAddresseesSearchFilterForAddressee<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.CoreEntities.IRecipient
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.IncomingDocumentBaseAddresseesAddresseeSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseesAddresseeSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseesAddresseeSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseesAddresseeSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseAddresseesSearchFilterForAddressee(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseAddresseesFilterForDepartment<TQueryEntity, TSourceEntity, TRootEntity>
    : global::Sungero.Domain.ChildEntityPropertyFilterBase<TQueryEntity, TSourceEntity, TRootEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
    where TSourceEntity : class, global::Sungero.Docflow.IIncomingDocumentBaseAddressees
    where TRootEntity : class, global::Sungero.Docflow.IIncomingDocumentBase
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, TSourceEntity sourceEntity, TRootEntity rootEntity)
    {
      var args = new global::Sungero.Domain.PropertyFilteringEventArgs(sourceEntity);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.IncomingDocumentBaseAddresseesDepartmentPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType, new object[] { sourceEntity, rootEntity });
        var methodInfo = genericType.GetMethod("AddresseesDepartmentFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseesDepartmentPropertyFilteringServerHandler<TQueryEntity>(sourceEntity, rootEntity).AddresseesDepartmentFiltering(query, args);
      }
      if (args.DisableUiFiltering)
        global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseAddresseesFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }

  public class IncomingDocumentBaseAddresseesSearchFilterForDepartment<TQueryEntity>
    : global::Sungero.Domain.SearchDialogPropertyFilter<TQueryEntity>
    where TQueryEntity : class, global::Sungero.Company.IDepartment
  {
    protected override global::System.Linq.IQueryable<TQueryEntity> ApplyAppliedFilter(global::System.Linq.IQueryable<TQueryEntity> query, System.Guid entityType)
    {
      var args = new global::Sungero.Domain.PropertySearchDialogFilteringEventArgs(entityType);
      global::System.Linq.IQueryable<TQueryEntity> result;
      var filterType = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve("Sungero.Docflow.IncomingDocumentBaseAddresseesDepartmentSearchPropertyFilteringServerHandler`1");
      if (filterType != null)
      {
        var genericType = filterType.MakeGenericType(typeof(TQueryEntity));
        var instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(genericType);
        var methodInfo = genericType.GetMethod("AddresseesDepartmentSearchDialogFiltering");
        result = (global::System.Linq.IQueryable<TQueryEntity>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, instance, new object[] { query, args });
      }
      else
      {
        result = new global::Sungero.Docflow.IncomingDocumentBaseAddresseesDepartmentSearchPropertyFilteringServerHandler<TQueryEntity>().AddresseesDepartmentSearchDialogFiltering(query, args);
      }
      if (args.DisableUiFiltering)
          global::Sungero.Domain.UiFilteringEventManagementScope.DisableEvent<TQueryEntity>();
      return result;
    }

    public IncomingDocumentBaseAddresseesSearchFilterForDepartment(string propertyName)
      : base(propertyName)
    {
    }
  }



  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseAddresseesFilterForAddressee<global::Sungero.Company.IEmployee, global::Sungero.Docflow.IIncomingDocumentBaseAddressees, global::Sungero.Docflow.IIncomingDocumentBase>), "Addressee")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseAddresseesSearchFilterForAddressee<global::Sungero.CoreEntities.IRecipient>), "Addressee")]
  [global::Sungero.Domain.PropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseAddresseesFilterForDepartment<global::Sungero.Company.IDepartment, global::Sungero.Docflow.IIncomingDocumentBaseAddressees, global::Sungero.Docflow.IIncomingDocumentBase>), "Department")]
  [global::Sungero.Domain.SearchPropertyFilter(typeof(global::Sungero.Docflow.Server.IncomingDocumentBaseAddresseesSearchFilterForDepartment<global::Sungero.Company.IDepartment>), "Department")]


  public class IncomingDocumentBaseAddressees :
    global::Sungero.Domain.ChildEntity, global::Sungero.Docflow.IIncomingDocumentBaseAddressees
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("62712927-121b-4b7d-8b5f-7abaaa7c9c7d");

    public override global::System.Guid TypeGuid
    {
      get { return global::Sungero.Docflow.Server.IncomingDocumentBaseAddressees.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "Sungero.Docflow.IIncomingDocumentBaseAddressees, Sungero.Domain.Interfaces"; }
    }

    public new virtual global::Sungero.Docflow.IIncomingDocumentBaseAddresseesState State
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseAddresseesState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::Sungero.Docflow.Shared.IncomingDocumentBaseAddresseesState(this);
    }

    public new virtual global::Sungero.Docflow.IIncomingDocumentBaseAddresseesInfo Info
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseAddresseesInfo)base.Info; }
    }


    public global::Sungero.Docflow.IIncomingDocumentBase IncomingDocumentBase { get; set; }

    public override global::Sungero.Domain.Shared.IEntity RootEntity
    {
      get { return this.IncomingDocumentBase; }
      set { this.IncomingDocumentBase = (global::Sungero.Docflow.IIncomingDocumentBase)value; }
    }

    protected override object CreateSharedHandlers() {
      return new global::Sungero.Docflow.IncomingDocumentBaseAddresseesSharedHandlers(this);
    }

    private global::System.Int32? _Number;
    public virtual global::System.Int32? Number
    {
      get
      {
        return this._Number;
      }

      set
      {
        this.SetPropertyValue("Number", this._Number, value, (propertyValue) => { this._Number = propertyValue; }, this.NumberChangedHandler);
      }
    }
    private global::System.String _Note;
    public virtual global::System.String Note
    {
      get
      {
        return this._Note;
      }

      set
      {
        this.SetPropertyValue("Note", this._Note, value, (propertyValue) => { this._Note = propertyValue; }, this.NoteChangedHandler);
      }
    }







    private global::Sungero.Company.IEmployee _Addressee;
    public virtual global::Sungero.Company.IEmployee Addressee
    {
      get
      {
        return this._Addressee;
      }

      set
      {
        this.SetPropertyValue("Addressee", this._Addressee, value, (propertyValue) => { this._Addressee = propertyValue; }, this.AddresseeChangedHandler);
      }
    }
    private global::Sungero.Company.IDepartment _Department;
    public virtual global::Sungero.Company.IDepartment Department
    {
      get
      {
        return this._Department;
      }

      set
      {
        this.SetPropertyValue("Department", this._Department, value, (propertyValue) => { this._Department = propertyValue; }, this.DepartmentChangedHandler);
      }
    }




    #region Framework events

    protected void NumberChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.IntegerPropertyChangedEventArgs(this.State.Properties.Number, this.Number, this);
     ((global::Sungero.Docflow.IIncomingDocumentBaseAddresseesSharedHandlers)this.SharedHandlers).AddresseesNumberChanged(args);
    }

    protected void AddresseeChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseAddresseesAddresseeChangedEventArgs(this.State.Properties.Addressee, this.Addressee, this);
     ((global::Sungero.Docflow.IIncomingDocumentBaseAddresseesSharedHandlers)this.SharedHandlers).AddresseesAddresseeChanged(args);
    }

    protected void DepartmentChangedHandler()
    {
      var args = new global::Sungero.Docflow.Shared.IncomingDocumentBaseAddresseesDepartmentChangedEventArgs(this.State.Properties.Department, this.Department, this);
     ((global::Sungero.Docflow.IIncomingDocumentBaseAddresseesSharedHandlers)this.SharedHandlers).AddresseesDepartmentChanged(args);
    }

    protected void NoteChangedHandler()
    {
      var args = new global::Sungero.Domain.Shared.StringPropertyChangedEventArgs(this.State.Properties.Note, this.Note, this);
     ((global::Sungero.Docflow.IIncomingDocumentBaseAddresseesSharedHandlers)this.SharedHandlers).AddresseesNoteChanged(args);
    }



    #endregion


    public IncomingDocumentBaseAddressees()
    {
    }

  }
}

// ==================================================================
// IncomingDocumentBaseAddresseesHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow
{
  public partial class IncomingDocumentBaseAddresseesAddresseePropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IEmployee
  {
    private global::Sungero.Docflow.IIncomingDocumentBaseAddressees _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseAddressees)this.Entity; }
    }

    private global::Sungero.Docflow.IIncomingDocumentBase _root
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Root; }
    }

    public virtual global::System.Linq.IQueryable<T> AddresseesAddresseeFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertyFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseAddresseesAddresseePropertyFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBaseAddressees entity, global::Sungero.Docflow.IIncomingDocumentBase root)
      : base(entity, root)
    {
    }
  }

  public partial class IncomingDocumentBaseAddresseesAddresseeSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.CoreEntities.IRecipient
  {

    public virtual global::System.Linq.IQueryable<T> AddresseesAddresseeSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseAddresseesAddresseeSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }

  public partial class IncomingDocumentBaseAddresseesDepartmentPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.ChildEntityPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {
    private global::Sungero.Docflow.IIncomingDocumentBaseAddressees _obj
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBaseAddressees)this.Entity; }
    }

    private global::Sungero.Docflow.IIncomingDocumentBase _root
    {
      get { return (global::Sungero.Docflow.IIncomingDocumentBase)this.Root; }
    }

    public IncomingDocumentBaseAddresseesDepartmentPropertyFilteringServerHandler(global::Sungero.Docflow.IIncomingDocumentBaseAddressees entity, global::Sungero.Docflow.IIncomingDocumentBase root)
      : base(entity, root)
    {
    }
  }

  public partial class IncomingDocumentBaseAddresseesDepartmentSearchPropertyFilteringServerHandler<T>
    : global::Sungero.Domain.SearchPropertyFilteringServerHandler
    where T : class, global::Sungero.Company.IDepartment
  {

    public virtual global::System.Linq.IQueryable<T> AddresseesDepartmentSearchDialogFiltering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.PropertySearchDialogFilteringEventArgs e)
    {
      return query;
    }

    public IncomingDocumentBaseAddresseesDepartmentSearchPropertyFilteringServerHandler()
      : base()
    {
    }
  }



}

// ==================================================================
// IncomingDocumentBaseAddresseesEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Docflow.Server
{
}
