
// ==================================================================
// Module.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public partial class CommonsModule : global::Sungero.Domain.Shared.ModuleBase
  {
    public override global::System.Guid Id
    {
      get { return global::System.Guid.Parse("459fa497-ee5b-49a4-9980-de00cada9b7a"); }
    }

    public override string Name
    {
      get { return "Sungero.Commons"; }
    }

    public override void RegisterTypes()
    {
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IModuleServerInitializationFunctions, global::Sungero.Commons.Server.ModuleServerInitializationFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("3a0c21f8-aa88-429c-891f-56c24d56fcef"), new Sungero.Commons.Shared.CityInfo(typeof(global::Sungero.Commons.ICity)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.ICityServerPublicFunctions, global::Sungero.Commons.Server.CityServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.ICitySharedPublicFunctions, global::Sungero.Commons.Shared.CitySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("d79390ea-86ea-4e79-ba28-a4ce5e5550c1"), new Sungero.Commons.Shared.ClassifierTrainingSessionInfo(typeof(global::Sungero.Commons.IClassifierTrainingSession)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IClassifierTrainingSessionServerPublicFunctions, global::Sungero.Commons.Server.ClassifierTrainingSessionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IClassifierTrainingSessionSharedPublicFunctions, global::Sungero.Commons.Shared.ClassifierTrainingSessionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("1f612925-95fc-4662-807d-c92c810a62b1"), new Sungero.Commons.Shared.CountryInfo(typeof(global::Sungero.Commons.ICountry)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.ICountryServerPublicFunctions, global::Sungero.Commons.Server.CountryServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.ICountrySharedPublicFunctions, global::Sungero.Commons.Shared.CountrySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ffc2629f-dc30-4106-a3ce-c402ae7d32b9"), new Sungero.Commons.Shared.CurrencyInfo(typeof(global::Sungero.Commons.ICurrency)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.ICurrencyServerPublicFunctions, global::Sungero.Commons.Server.CurrencyServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.ICurrencySharedPublicFunctions, global::Sungero.Commons.Shared.CurrencySharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("32ea0857-adf7-41c2-bc0c-188320e40786"), new Sungero.Commons.Shared.EntityRecognitionInfoInfo(typeof(global::Sungero.Commons.IEntityRecognitionInfo)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IEntityRecognitionInfoServerPublicFunctions, global::Sungero.Commons.Server.EntityRecognitionInfoServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IEntityRecognitionInfoSharedPublicFunctions, global::Sungero.Commons.Shared.EntityRecognitionInfoSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("977c2af3-1cde-4f76-a516-b6c36ad031dd"), new Sungero.Commons.Shared.EntityRecognitionInfoAdditionalClassifiersInfo(typeof(global::Sungero.Commons.IEntityRecognitionInfoAdditionalClassifiers)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("ea588697-56d5-4a14-9a78-39fa6517351b"), new Sungero.Commons.Shared.EntityRecognitionInfoFactsInfo(typeof(global::Sungero.Commons.IEntityRecognitionInfoFacts)));
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4346363e-39b9-40eb-9c12-64f0cf48d87f"), new Sungero.Commons.Shared.ExternalEntityLinkInfo(typeof(global::Sungero.Commons.IExternalEntityLink)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IExternalEntityLinkServerPublicFunctions, global::Sungero.Commons.Server.ExternalEntityLinkServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IExternalEntityLinkSharedPublicFunctions, global::Sungero.Commons.Shared.ExternalEntityLinkSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("4efe2fa9-b1d1-4b47-b366-4128fe0a391c"), new Sungero.Commons.Shared.RegionInfo(typeof(global::Sungero.Commons.IRegion)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IRegionServerPublicFunctions, global::Sungero.Commons.Server.RegionServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IRegionSharedPublicFunctions, global::Sungero.Commons.Shared.RegionSharedPublicFunctions>();
      global::Sungero.Domain.Shared.EntityInfoRegister.RegisterEntityInfo(new global::System.Guid("fe0ed345-5965-40d6-a559-24dcde189a95"), new Sungero.Commons.Shared.VatRateInfo(typeof(global::Sungero.Commons.IVatRate)));
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IVatRateServerPublicFunctions, global::Sungero.Commons.Server.VatRateServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IVatRateSharedPublicFunctions, global::Sungero.Commons.Shared.VatRateSharedPublicFunctions>();


      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.ICityFilterState, global::Sungero.Commons.Shared.City.CityFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.IClassifierTrainingSessionFilterState, global::Sungero.Commons.Shared.ClassifierTrainingSession.ClassifierTrainingSessionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.ICountryFilterState, global::Sungero.Commons.Shared.Country.CountryFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.ICurrencyFilterState, global::Sungero.Commons.Shared.Currency.CurrencyFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.IEntityRecognitionInfoFilterState, global::Sungero.Commons.Shared.EntityRecognitionInfo.EntityRecognitionInfoFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.IExternalEntityLinkFilterState, global::Sungero.Commons.Shared.ExternalEntityLink.ExternalEntityLinkFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.IRegionFilterState, global::Sungero.Commons.Shared.Region.RegionFilterState>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.IVatRateFilterState, global::Sungero.Commons.Shared.VatRate.VatRateFilterState>();



      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Server.IModuleServerPublicFunctions, global::Sungero.Commons.Server.ModuleServerPublicFunctions>();
      global::Sungero.Domain.Shared.ModuleManager.Instance.Container.RegisterType<global::Sungero.Commons.Shared.IModuleSharedPublicFunctions, global::Sungero.Commons.Shared.ModuleSharedPublicFunctions>();
    }
  }
}

// ==================================================================
// ModuleHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// ModuleFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Functions
{
  internal static partial class Module
  {
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Commons.IExternalEntityLink> GetExternalEntityLinks(global::System.String uuid, global::System.String sysid)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetExternalEntityLinks", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Linq.IQueryable<global::Sungero.Commons.IExternalEntityLink>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{uuid, sysid});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetExternalEntityLinks(uuid, sysid);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    [global::Sungero.Core.RemoteAttribute()]
    internal static global::Sungero.Commons.ICity CreateNewCity()
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateNewCity", global::System.Array.Empty<global::System.Type>());
        return (global::Sungero.Commons.ICity)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.CreateNewCity();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsAllExternalEntityLinksDeleted(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsAllExternalEntityLinksDeleted", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.IsAllExternalEntityLinksDeleted(entity);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsServerCultureRussian()
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsServerCultureRussian", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.IsServerCultureRussian();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetFinalTypeName(global::Sungero.Domain.Shared.IEntity entity)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFinalTypeName", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFinalTypeName(entity);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.IEntityRecognitionInfoFacts GetPreviousPropertyRecognitionResults(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPreviousPropertyRecognitionResults", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::Sungero.Commons.IEntityRecognitionInfoFacts)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, propertyName});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPreviousPropertyRecognitionResults(fact, propertyName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.IEntityRecognitionInfoFacts GetPreviousPropertyRecognitionResults(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName, global::System.String filterPropertyValue, global::System.String filterPropertyName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetPreviousPropertyRecognitionResults", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Commons.IEntityRecognitionInfoFacts)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, propertyName, filterPropertyValue, filterPropertyName});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetPreviousPropertyRecognitionResults(fact, propertyName, filterPropertyValue, filterPropertyName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsIntelligenceEnabled()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsIntelligenceEnabled", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsIntelligenceEnabled();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFacts", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFacts(facts, factName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFacts", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFacts(facts, factName, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetFactLabel(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFactLabel", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, propertyName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFactLabel(fact, propertyName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String orderFieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOrderedFacts", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName, orderFieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetOrderedFacts(facts, factName, orderFieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFactsByType(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String factType, global::System.String typeFieldName, global::System.String orderFieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOrderedFactsByType", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName, factType, typeFieldName, orderFieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetOrderedFactsByType(facts, factName, factType, typeFieldName, orderFieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFactsByFieldPriorities(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, System.Collections.Generic.IDictionary<global::System.String, global::System.Double> fieldWeights)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetOrderedFactsByFieldPriorities", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String), typeof(System.Collections.Generic.IDictionary<global::System.String, global::System.Double>)});
        return (global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName, fieldWeights});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetOrderedFactsByFieldPriorities(facts, factName, fieldWeights);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFactField GetField(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetField", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::Sungero.Commons.Structures.Module.IArioFactField)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetField(fact, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Linq.IQueryable<global::Sungero.Commons.Structures.Module.IArioFactField> GetFields(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.Collections.Generic.List<global::System.String> fieldNames)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFields", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.Collections.Generic.List<global::System.String>)});
        return (global::System.Linq.IQueryable<global::Sungero.Commons.Structures.Module.IArioFactField>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldNames});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFields(fact, fieldNames);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Double GetAggregateFieldsProbability(global::Sungero.Commons.Structures.Module.IArioFact fact, System.Collections.Generic.IDictionary<global::System.String, global::System.Double> weightedFields)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAggregateFieldsProbability", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(System.Collections.Generic.IDictionary<global::System.String, global::System.Double>)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, weightedFields});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAggregateFieldsProbability(fact, weightedFields);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Double GetAggregateFieldsProbability(System.Collections.Generic.IDictionary<global::Sungero.Commons.Structures.Module.IArioFactField, global::System.Double> weightedFields)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetAggregateFieldsProbability", new global::System.Type[]{typeof(System.Collections.Generic.IDictionary<global::Sungero.Commons.Structures.Module.IArioFactField, global::System.Double>)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{weightedFields});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetAggregateFieldsProbability(weightedFields);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetFieldValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFieldValue", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFieldValue(fact, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetFieldValue(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFieldValue", new global::System.Type[]{typeof(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact>), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{facts, factName, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFieldValue(facts, factName, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.DateTime> GetFieldDateTimeValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFieldDateTimeValue", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::System.Nullable<global::System.DateTime>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFieldDateTimeValue(fact, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Double> GetFieldNumericalValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFieldNumericalValue", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::System.Nullable<global::System.Double>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFieldNumericalValue(fact, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Nullable<global::System.Double> GetFieldProbability(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      var __typeName = "Sungero.Commons.Server.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetFieldProbability", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFact), typeof(global::System.String)});
        return (global::System.Nullable<global::System.Double>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fact, fieldName});
      }
      else
      {
        return global::Sungero.Commons.Server.ModuleFunctions.GetFieldProbability(fact, fieldName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetElasticsearchUrl()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetElasticsearchUrl", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetElasticsearchUrl();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsElasticsearchConfigured()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsElasticsearchConfigured", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsElasticsearchConfigured();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static Sungero.ElasticsearchExtensions.ElasticsearchConnector GetElasticsearchConnector()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetElasticsearchConnector", global::System.Array.Empty<global::System.Type>());
        return (Sungero.ElasticsearchExtensions.ElasticsearchConnector)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetElasticsearchConnector();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static Sungero.ElasticsearchExtensions.ElasticsearchConnector GetElasticsearchConnector(global::System.String elasticsearchUrl, global::System.Int32 timeout)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetElasticsearchConnector", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int32)});
        return (Sungero.ElasticsearchExtensions.ElasticsearchConnector)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{elasticsearchUrl, timeout});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetElasticsearchConnector(elasticsearchUrl, timeout);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetIndexName(global::System.String entityName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetIndexName", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityName});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetIndexName(entityName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsElasticsearchEnabled()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsElasticsearchEnabled", global::System.Array.Empty<global::System.Type>());
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsElasticsearchEnabled();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchCreateIndex(global::System.String indexName, global::System.String configJson)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchCreateIndex", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName, configJson});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchCreateIndex(indexName, configJson);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchBulk(global::System.String indexName, global::System.String contentJson)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchBulk", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName, contentJson});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchBulk(indexName, contentJson);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetLegalFormSynonyms()
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetLegalFormSynonyms", global::System.Array.Empty<global::System.Type>());
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetLegalFormSynonyms();
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String SynonymsParse(global::System.String synonyms)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("SynonymsParse", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{synonyms});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).SynonymsParse(synonyms);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Boolean IsIndexExist(global::System.String indexName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("IsIndexExist", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).IsIndexExist(indexName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchUpdateIndexSettings(global::System.String indexName, global::System.String configJson)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchUpdateIndexSettings", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName, configJson});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchUpdateIndexSettings(indexName, configJson);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchOpenIndex(global::System.String indexName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchOpenIndex", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchOpenIndex(indexName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchCloseIndex(global::System.String indexName)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchCloseIndex", new global::System.Type[]{typeof(global::System.String)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchCloseIndex(indexName);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchIndexEntity(global::System.String indexName, global::System.String contentJson, global::System.Int64 entityId, global::System.DateTime entityUpdated, global::System.Boolean allowCreateRecord)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchIndexEntity", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.DateTime), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName, contentJson, entityId, entityUpdated, allowCreateRecord});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchIndexEntity(indexName, contentJson, entityId, entityUpdated, allowCreateRecord);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void ElasticsearchRemoveEntity(global::System.String indexName, global::System.Int64 entityId)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ElasticsearchRemoveEntity", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{indexName, entityId});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ElasticsearchRemoveEntity(indexName, entityId);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void CreateIndexEntityAsyncHandler(global::System.String entityName, global::System.Int64 entityId, global::System.String contentJson, global::System.Boolean allowCreateRecord)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateIndexEntityAsyncHandler", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64), typeof(global::System.String), typeof(global::System.Boolean)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityName, entityId, contentJson, allowCreateRecord});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateIndexEntityAsyncHandler(entityName, entityId, contentJson, allowCreateRecord);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static void CreateRemoveEntityFromIndexAsyncHandler(global::System.String entityName, global::System.Int64 entityId)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateRemoveEntityFromIndexAsyncHandler", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Int64)});
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityName, entityId});
      }
      else
      {
    ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateRemoveEntityFromIndexAsyncHandler(entityName, entityId);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String TrimSpecialSymbols(global::System.String stringToConvert)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("TrimSpecialSymbols", new global::System.Type[]{typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{stringToConvert});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).TrimSpecialSymbols(stringToConvert);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetTermQuery(global::System.String termName, global::System.String termValue)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTermQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{termName, termValue});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetTermQuery(termName, termValue);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetTermsQuery(global::System.String termName, global::System.Collections.Generic.List<global::System.String> termValues)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTermsQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.Collections.Generic.List<global::System.String>)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{termName, termValues});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetTermsQuery(termName, termValues);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetMatchFuzzyQuery(global::System.String fieldName, global::System.String searchValue, global::System.Boolean andOperator)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMatchFuzzyQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fieldName, searchValue, andOperator});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMatchFuzzyQuery(fieldName, searchValue, andOperator);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetMatchQuery(global::System.String fieldName, global::System.String searchValue, global::System.Boolean andOperator)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetMatchQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fieldName, searchValue, andOperator});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetMatchQuery(fieldName, searchValue, andOperator);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetWildcardQuery(global::System.String fieldName, global::System.String fieldValue)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetWildcardQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{fieldName, fieldValue});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetWildcardQuery(fieldName, fieldValue);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.String GetBoolQuery(global::System.String must, global::System.String should, global::System.String filter)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetBoolQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{must, should, filter});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).GetBoolQuery(must, should, filter);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData ExecuteElasticsearchQuery(global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData factQueryData)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteElasticsearchQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData)});
        return (global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{factQueryData});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteElasticsearchQuery(factQueryData);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData ExecuteElasticsearchQuery(global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData queryData)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteElasticsearchQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{queryData});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteElasticsearchQuery(queryData);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> ExecuteElasticsearchQuery(global::System.String entityName, global::System.String query)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteElasticsearchQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityName, query});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteElasticsearchQuery(entityName, query);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::System.Collections.Generic.List<global::System.Int64> ExecuteElasticsearchQuery(global::System.String entityName, global::System.String query, global::System.Double minScore)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("ExecuteElasticsearchQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.Double)});
        return (global::System.Collections.Generic.List<global::System.Int64>)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entityName, query, minScore});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).ExecuteElasticsearchQuery(entityName, query, minScore);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSearchFieldQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFactField), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{arioField, elasticFieldName, searchType});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSearchFieldQuery(arioField, elasticFieldName, searchType);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.String searchValue)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSearchFieldQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFactField), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{arioField, elasticFieldName, searchType, searchValue});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSearchFieldQuery(arioField, elasticFieldName, searchType, searchValue);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::System.String searchValue, global::System.String elasticFieldName, global::System.String searchType, global::System.Boolean isRefineSearchOnly)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSearchFieldQuery", new global::System.Type[]{typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{searchValue, elasticFieldName, searchType, isRefineSearchOnly});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSearchFieldQuery(searchValue, elasticFieldName, searchType, isRefineSearchOnly);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.Boolean isRefineSearchOnly)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSearchFieldQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFactField), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{arioField, elasticFieldName, searchType, isRefineSearchOnly});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSearchFieldQuery(arioField, elasticFieldName, searchType, isRefineSearchOnly);
      }
    }
    /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleFunctions" />
    internal static global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.String searchValue, global::System.Boolean isRefineSearchOnly, global::System.Boolean isClosedEntitySearch)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("CreateSearchFieldQuery", new global::System.Type[]{typeof(global::Sungero.Commons.Structures.Module.IArioFactField), typeof(global::System.String), typeof(global::System.String), typeof(global::System.String), typeof(global::System.Boolean), typeof(global::System.Boolean)});
        return (global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{arioField, elasticFieldName, searchType, searchValue, isRefineSearchOnly, isClosedEntitySearch});
      }
      else
      {
        return ((global::Sungero.Commons.Server.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).CreateSearchFieldQuery(arioField, elasticFieldName, searchType, searchValue, isRefineSearchOnly, isClosedEntitySearch);
      }
    }

    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.String GetValueAsString(System.Object propertyValue)
    {
      var __typeName = "Sungero.Commons.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetValueAsString", new global::System.Type[]{typeof(System.Object)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{propertyValue});
      }
      else
      {
        return global::Sungero.Commons.Shared.ModuleFunctions.GetValueAsString(propertyValue);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.Boolean EntityParamsContainsKey(global::Sungero.Domain.Shared.IEntity entity, global::System.String paramName)
    {
      var __typeName = "Sungero.Commons.Shared.ModuleFunctions";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("EntityParamsContainsKey", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(global::System.String)});
        return (global::System.Boolean)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, paramName});
      }
      else
      {
        return global::Sungero.Commons.Shared.ModuleFunctions.EntityParamsContainsKey(entity, paramName);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.Double GetVatAmountFromTotal(global::System.Double totalAmount, global::Sungero.Commons.IVatRate vatRate)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetVatAmountFromTotal", new global::System.Type[]{typeof(global::System.Double), typeof(global::Sungero.Commons.IVatRate)});
        return (global::System.Double)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{totalAmount, vatRate});
      }
      else
      {
        return ((global::Sungero.Commons.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetVatAmountFromTotal(totalAmount, vatRate);
      }
    }
    /// <redirect project="Sungero.Commons.Shared" type="Sungero.Commons.Shared.ModuleFunctions" />
    internal static global::System.String GetTypeDisplayValue(global::Sungero.Domain.Shared.IEntity entity, CommonLibrary.DeclensionCase declension)
    {
      var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
      var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
      var __funcNamespace = "Shared" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.SharedNamespace;
      var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Shared";
      var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
      if (__type != null)
      {
        var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
        var __methodInfo = __type.GetMethod("GetTypeDisplayValue", new global::System.Type[]{typeof(global::Sungero.Domain.Shared.IEntity), typeof(CommonLibrary.DeclensionCase)});
        return (global::System.String)global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{entity, declension});
      }
      else
      {
        return ((global::Sungero.Commons.Shared.ModuleFunctions)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Shared, __finalModuleMetadatda)).GetTypeDisplayValue(entity, declension);
      }
    }

    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Commons.Server.ModuleFunctions();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.FunctionNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }
  }
}

// ==================================================================
// ModuleInitializationInstantiation.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.ModuleInitialization
{
  internal static partial class Module
  {
      /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleInitializer" />
      internal static void Initializing(Sungero.Domain.ModuleInitializingEventArgs e)
      {
        var __moduleId = new global::System.Guid("459fa497-ee5b-49a4-9980-de00cada9b7a");
        var __finalModuleMetadatda = global::Sungero.Metadata.MetadataExtension.GetFinal(global::Sungero.Metadata.Services.MetadataSearcher.FindModuleMetadata(__moduleId) ?? global::Sungero.Metadata.Services.MetadataSearcher.FindLayerModuleMetadata(__moduleId));
        var __funcNamespace = "Server" == "ClientBase" ? __finalModuleMetadatda.ClientNamespace : __finalModuleMetadatda.ServerNamespace;
        var __typeName = __funcNamespace + ".ModuleFunctions, Sungero.Commons.Server";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("Initializing", new global::System.Type[]{typeof(Sungero.Domain.ModuleInitializingEventArgs)});
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, new object[]{e});
        }
        else
        {
      ((global::Sungero.Commons.Server.ModuleInitializer)GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType.Server, __finalModuleMetadatda)).Initializing(e);
        }
      }
      /// <redirect project="Sungero.Commons.Server" type="Sungero.Commons.Server.ModuleInitializer" />
      internal static void CreateCountryRegionsCitiesFromFIAS()
      {
        var __typeName = "Sungero.Commons.Server.ModuleInitializer";
        var __type = global::Sungero.Metadata.Services.AppliedTypesManager.Instance.Resolve(__typeName);
        if (__type != null)
        {
          var __instance = global::Sungero.Metadata.Services.AppliedTypesManager.CreateTypeInstance(__type);
          var __methodInfo = __type.GetMethod("CreateCountryRegionsCitiesFromFIAS", global::System.Array.Empty<global::System.Type>());
      global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__methodInfo, __instance, null);
        }
        else
        {
      global::Sungero.Commons.Server.ModuleInitializer.CreateCountryRegionsCitiesFromFIAS();
        }
      }


    private static object GetFunctionsContainer()
    {
      return new global::Sungero.Commons.Server.ModuleInitializer();
    }

    private static object GetFinalFunctionsContainer(global::Sungero.Metadata.ModuleProjectType projectType, global::Sungero.Metadata.ModuleMetadata finalModuleMetadatda)
    {
      var assemblyName = finalModuleMetadatda.GetAssemblyName(projectType);
      var moduleFunctionsType = global::System.Type.GetType(global::System.String.Format("{0}.{1}, {2}", finalModuleMetadatda.ModuleInitializationNamespace, "Module", assemblyName));
      var methodInfo = moduleFunctionsType.GetMethod("GetFunctionsContainer", global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Static);
      return global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(methodInfo, null, null);
    }

  }
}


// ==================================================================
// ModuleEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// ModuleServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Commons.Server.IModuleServerPublicFunctions
  {
    public void CreateIndexEntityAsyncHandler(global::System.String entityName, global::System.Int64 entityId, global::System.String contentJson, global::System.Boolean allowCreateRecord)
    {
global::Sungero.Commons.Functions.Module.CreateIndexEntityAsyncHandler(entityName, entityId, contentJson, allowCreateRecord);
    }
    public void CreateRemoveEntityFromIndexAsyncHandler(global::System.String entityName, global::System.Int64 entityId)
    {
global::Sungero.Commons.Functions.Module.CreateRemoveEntityFromIndexAsyncHandler(entityName, entityId);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType)
    {
      return global::Sungero.Commons.Functions.Module.CreateSearchFieldQuery(arioField, elasticFieldName, searchType);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.String searchValue)
    {
      return global::Sungero.Commons.Functions.Module.CreateSearchFieldQuery(arioField, elasticFieldName, searchType, searchValue);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::System.String searchValue, global::System.String elasticFieldName, global::System.String searchType, global::System.Boolean isRefineSearchOnly)
    {
      return global::Sungero.Commons.Functions.Module.CreateSearchFieldQuery(searchValue, elasticFieldName, searchType, isRefineSearchOnly);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.Boolean isRefineSearchOnly)
    {
      return global::Sungero.Commons.Functions.Module.CreateSearchFieldQuery(arioField, elasticFieldName, searchType, isRefineSearchOnly);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData CreateSearchFieldQuery(global::Sungero.Commons.Structures.Module.IArioFactField arioField, global::System.String elasticFieldName, global::System.String searchType, global::System.String searchValue, global::System.Boolean isRefineSearchOnly, global::System.Boolean isClosedEntitySearch)
    {
      return global::Sungero.Commons.Functions.Module.CreateSearchFieldQuery(arioField, elasticFieldName, searchType, searchValue, isRefineSearchOnly, isClosedEntitySearch);
    }
    public void ElasticsearchBulk(global::System.String indexName, global::System.String contentJson)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchBulk(indexName, contentJson);
    }
    public void ElasticsearchCloseIndex(global::System.String indexName)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchCloseIndex(indexName);
    }
    public void ElasticsearchCreateIndex(global::System.String indexName, global::System.String configJson)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchCreateIndex(indexName, configJson);
    }
    public void ElasticsearchIndexEntity(global::System.String indexName, global::System.String contentJson, global::System.Int64 entityId, global::System.DateTime entityUpdated, global::System.Boolean allowCreateRecord)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchIndexEntity(indexName, contentJson, entityId, entityUpdated, allowCreateRecord);
    }
    public void ElasticsearchOpenIndex(global::System.String indexName)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchOpenIndex(indexName);
    }
    public void ElasticsearchRemoveEntity(global::System.String indexName, global::System.Int64 entityId)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchRemoveEntity(indexName, entityId);
    }
    public void ElasticsearchUpdateIndexSettings(global::System.String indexName, global::System.String configJson)
    {
global::Sungero.Commons.Functions.Module.ElasticsearchUpdateIndexSettings(indexName, configJson);
    }
    public global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData ExecuteElasticsearchQuery(global::Sungero.Commons.Structures.Module.IArioFactElasticsearchData factQueryData)
    {
      return global::Sungero.Commons.Functions.Module.ExecuteElasticsearchQuery(factQueryData);
    }
    public global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData ExecuteElasticsearchQuery(global::Sungero.Commons.Structures.Module.IArioFieldElasticsearchData queryData)
    {
      return global::Sungero.Commons.Functions.Module.ExecuteElasticsearchQuery(queryData);
    }
    public global::System.Collections.Generic.List<global::System.Int64> ExecuteElasticsearchQuery(global::System.String entityName, global::System.String query)
    {
      return global::Sungero.Commons.Functions.Module.ExecuteElasticsearchQuery(entityName, query);
    }
    public global::System.Collections.Generic.List<global::System.Int64> ExecuteElasticsearchQuery(global::System.String entityName, global::System.String query, global::System.Double minScore)
    {
      return global::Sungero.Commons.Functions.Module.ExecuteElasticsearchQuery(entityName, query, minScore);
    }
    public global::System.Double GetAggregateFieldsProbability(global::Sungero.Commons.Structures.Module.IArioFact fact, System.Collections.Generic.IDictionary<global::System.String, global::System.Double> weightedFields)
    {
      return global::Sungero.Commons.Functions.Module.GetAggregateFieldsProbability(fact, weightedFields);
    }
    public global::System.Double GetAggregateFieldsProbability(System.Collections.Generic.IDictionary<global::Sungero.Commons.Structures.Module.IArioFactField, global::System.Double> weightedFields)
    {
      return global::Sungero.Commons.Functions.Module.GetAggregateFieldsProbability(weightedFields);
    }
    public global::System.String GetBoolQuery(global::System.String must, global::System.String should, global::System.String filter)
    {
      return global::Sungero.Commons.Functions.Module.GetBoolQuery(must, should, filter);
    }
    public global::System.String GetElasticsearchUrl()
    {
      return global::Sungero.Commons.Functions.Module.GetElasticsearchUrl();
    }
    public global::System.Linq.IQueryable<global::Sungero.Commons.IExternalEntityLink> GetExternalEntityLinks(global::System.String uuid, global::System.String sysid)
    {
      return global::Sungero.Commons.Functions.Module.GetExternalEntityLinks(uuid, sysid);
    }
    public global::System.String GetFactLabel(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName)
    {
      return global::Sungero.Commons.Functions.Module.GetFactLabel(fact, propertyName);
    }
    public global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName)
    {
      return global::Sungero.Commons.Functions.Module.GetFacts(facts, factName);
    }
    public global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFacts(facts, factName, fieldName);
    }
    public global::Sungero.Commons.Structures.Module.IArioFactField GetField(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetField(fact, fieldName);
    }
    public global::System.Nullable<global::System.DateTime> GetFieldDateTimeValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFieldDateTimeValue(fact, fieldName);
    }
    public global::System.Nullable<global::System.Double> GetFieldNumericalValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFieldNumericalValue(fact, fieldName);
    }
    public global::System.Nullable<global::System.Double> GetFieldProbability(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFieldProbability(fact, fieldName);
    }
    public global::System.Linq.IQueryable<global::Sungero.Commons.Structures.Module.IArioFactField> GetFields(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.Collections.Generic.List<global::System.String> fieldNames)
    {
      return global::Sungero.Commons.Functions.Module.GetFields(fact, fieldNames);
    }
    public global::System.String GetFieldValue(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFieldValue(fact, fieldName);
    }
    public global::System.String GetFieldValue(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String fieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetFieldValue(facts, factName, fieldName);
    }
    public global::System.String GetFinalTypeName(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Commons.Functions.Module.GetFinalTypeName(entity);
    }
    public global::System.String GetIndexName(global::System.String entityName)
    {
      return global::Sungero.Commons.Functions.Module.GetIndexName(entityName);
    }
    public global::System.String GetLegalFormSynonyms()
    {
      return global::Sungero.Commons.Functions.Module.GetLegalFormSynonyms();
    }
    public global::System.String GetMatchFuzzyQuery(global::System.String fieldName, global::System.String searchValue, global::System.Boolean andOperator)
    {
      return global::Sungero.Commons.Functions.Module.GetMatchFuzzyQuery(fieldName, searchValue, andOperator);
    }
    public global::System.String GetMatchQuery(global::System.String fieldName, global::System.String searchValue, global::System.Boolean andOperator)
    {
      return global::Sungero.Commons.Functions.Module.GetMatchQuery(fieldName, searchValue, andOperator);
    }
    public global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFacts(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String orderFieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetOrderedFacts(facts, factName, orderFieldName);
    }
    public global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFactsByFieldPriorities(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, System.Collections.Generic.IDictionary<global::System.String, global::System.Double> fieldWeights)
    {
      return global::Sungero.Commons.Functions.Module.GetOrderedFactsByFieldPriorities(facts, factName, fieldWeights);
    }
    public global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> GetOrderedFactsByType(global::System.Collections.Generic.List<global::Sungero.Commons.Structures.Module.IArioFact> facts, global::System.String factName, global::System.String factType, global::System.String typeFieldName, global::System.String orderFieldName)
    {
      return global::Sungero.Commons.Functions.Module.GetOrderedFactsByType(facts, factName, factType, typeFieldName, orderFieldName);
    }
    public global::Sungero.Commons.IEntityRecognitionInfoFacts GetPreviousPropertyRecognitionResults(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName)
    {
      return global::Sungero.Commons.Functions.Module.GetPreviousPropertyRecognitionResults(fact, propertyName);
    }
    public global::Sungero.Commons.IEntityRecognitionInfoFacts GetPreviousPropertyRecognitionResults(global::Sungero.Commons.Structures.Module.IArioFact fact, global::System.String propertyName, global::System.String filterPropertyValue, global::System.String filterPropertyName)
    {
      return global::Sungero.Commons.Functions.Module.GetPreviousPropertyRecognitionResults(fact, propertyName, filterPropertyValue, filterPropertyName);
    }
    public global::System.String GetTermQuery(global::System.String termName, global::System.String termValue)
    {
      return global::Sungero.Commons.Functions.Module.GetTermQuery(termName, termValue);
    }
    public global::System.String GetTermsQuery(global::System.String termName, global::System.Collections.Generic.List<global::System.String> termValues)
    {
      return global::Sungero.Commons.Functions.Module.GetTermsQuery(termName, termValues);
    }
    public global::System.String GetWildcardQuery(global::System.String fieldName, global::System.String fieldValue)
    {
      return global::Sungero.Commons.Functions.Module.GetWildcardQuery(fieldName, fieldValue);
    }
    public global::System.Boolean IsAllExternalEntityLinksDeleted(global::Sungero.Domain.Shared.IEntity entity)
    {
      return global::Sungero.Commons.Functions.Module.IsAllExternalEntityLinksDeleted(entity);
    }
    public global::System.Boolean IsElasticsearchConfigured()
    {
      return global::Sungero.Commons.Functions.Module.IsElasticsearchConfigured();
    }
    public global::System.Boolean IsElasticsearchEnabled()
    {
      return global::Sungero.Commons.Functions.Module.IsElasticsearchEnabled();
    }
    public global::System.Boolean IsIndexExist(global::System.String indexName)
    {
      return global::Sungero.Commons.Functions.Module.IsIndexExist(indexName);
    }
    public global::System.Boolean IsIntelligenceEnabled()
    {
      return global::Sungero.Commons.Functions.Module.IsIntelligenceEnabled();
    }
    public global::System.Boolean IsServerCultureRussian()
    {
      return global::Sungero.Commons.Functions.Module.IsServerCultureRussian();
    }
    public global::System.String SynonymsParse(global::System.String synonyms)
    {
      return global::Sungero.Commons.Functions.Module.SynonymsParse(synonyms);
    }
    public global::System.String TrimSpecialSymbols(global::System.String stringToConvert)
    {
      return global::Sungero.Commons.Functions.Module.TrimSpecialSymbols(stringToConvert);
    }
  }
}

namespace Sungero.Commons.Server
{
  public partial class ModuleServerPublicFunctions : global::Sungero.Commons.Server.IModuleServerPublicFunctions
  {

      private static readonly global::System.Guid AsyncHandlerIndexEntityId = global::System.Guid.Parse("1e83eeb6-e56d-4786-98e6-dd3b7290f3d5");

      public void Enqueue_IndexEntity(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerIndexEntityId, null, args, delayStrategyInfo);
      }
 
      private static readonly global::System.Guid AsyncHandlerRemoveEntityFromIndexId = global::System.Guid.Parse("cb668a39-0ffc-4e03-9217-d07d59997c66");

      public void Enqueue_RemoveEntityFromIndex(global::Sungero.Domain.AsyncHandlerInvokeArgs args)
      {
         global:: Sungero.Metadata.AsyncHandlerDelayStrategy delayStrategy = global::Sungero.Metadata.AsyncHandlerDelayStrategy.ExponentialDelayStrategy;
           int delayInterval = 15;
 
         global::Sungero.Agent.Api.DelayStrategyInfo delayStrategyInfo = new global::Sungero.Agent.Api.DelayStrategyInfo(delayStrategy, delayInterval);
         global::Sungero.Agent.AsyncHandlersManager.Enqueue(AsyncHandlerRemoveEntityFromIndexId, null, args, delayStrategyInfo);
      }
 

  }
}

// ==================================================================
// ModuleServerInitializationFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public partial class ModuleServerInitializationFunctions : global::Sungero.Commons.Server.IModuleServerInitializationFunctions
  {
  }
}


// ==================================================================
// ModuleWidgetHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
}

// ==================================================================
// ModuleBlockHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server.CommonsBlocks
{
}

namespace Sungero.Workflow
{
}

// ==================================================================
// ModuleQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Queries
{
  public class Module
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("Sungero.Commons.Server.ModuleQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
    public static string idx_EEntLink_EId_EType_EEType_ESId_SD
    {
       get { return resolver.GetQuery("idx_EEntLink_EId_EType_EEType_ESId_SD"); }
    }
    public static string idx_EEntLink_EEId_ESId
    {
       get { return resolver.GetQuery("idx_EEntLink_EEId_ESId"); }
    }
    public static string idx_EELinks_Discr_EId_EEType_ESysId_SyncDate
    {
       get { return resolver.GetQuery("idx_EELinks_Discr_EId_EEType_ESysId_SyncDate"); }
    }
    public static string idx_EEntityLinks_Disc_ExtEntityId_ExtSystemId
    {
       get { return resolver.GetQuery("idx_EEntityLinks_Disc_ExtEntityId_ExtSystemId"); }
    }
    public static string CreateCountryRegionsCitiesFromFIAS
    {
       get { return resolver.GetQuery("CreateCountryRegionsCitiesFromFIAS"); }
    }
  }
}

// ==================================================================
// ModuleInitializer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sungero.Commons.Server
{
  public partial class ModuleInitializer : global::Sungero.Domain.AppliedModuleInitializer
  {
  }
}

